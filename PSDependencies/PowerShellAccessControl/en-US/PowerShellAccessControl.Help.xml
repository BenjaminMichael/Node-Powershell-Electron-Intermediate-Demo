<?xml version="1.0" encoding="utf-8"?><helpItems xmlns="http://msh" schema="maml">
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Add-AccessControlEntry</command:name>
		<maml:description>
			<maml:para>Adds access control entries to security descriptors.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Add</command:verb>
		<command:noun>AccessControlEntry</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>Remove-AccessControlEntry allows the removal of access control entries (ACEs) 
from either the discretionary access control list (DACL), which deals with 
object access, or the system access control list (SACL), which deals with 
object auditing, of an object&apos;s security descriptor (SD).

The function will automatically determine which ACL to modify by inspecting the
ACE object.

There are four major ways to use this function:
1. Remove a specific set of permissions from any existing matching ACEs
   This is the default behavior when you supply a security object and an ACE 
   (which can be specified through the -AceObject parameter, through the ACE 
   creation parameters (which resemble New-AccessControlEntry&apos;s parameters), or
   from output from the Get-AccessControlEntry function.

   An example would be to remove &apos;Write&apos; allow access from the &apos;Users&apos; group 
   when an existing ACE that grants &apos;Read&apos; and &apos;Write&apos; access already exists. 
   After running this function, the existing ACE would only grant &apos;Read&apos; access.

2. Remove a specific ACE
   This is the same as #1 above, except the -Specific switch is applied. Using 
   the example mentioned, running the function with the -Specific switch 
   wouldn&apos;t modify the ACL since the supplied ACE with &apos;Write&apos; permission 
   wouldn&apos;t match the existing ACE with &apos;Read&apos; and &apos;Write&apos; permission.

3. Remove a specific principal from an ACL
   To remove a specific principal from either ACL, provide a user/group name or
   a security identifier to the -Principal parameter and specify one or both of
   the the -PurgeAccessRules and/or the -PurgeAuditRules switch parameters.

4. Remove all ACEs from an ACL
   To clear all entries from an ACL, specify the -RemoveAllAccessEntries and/or
   -RemoveAllAuditEntries switch parameters. It is possible to use one at a 
   time, or both at the same time.
</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Add-AccessControlEntry</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>SDObject</maml:name>
				<maml:description>
					<maml:para>Specifies the security descriptor that will have an access control entry added 
to it.

This parameter can be any combination of one or more of the following objects: 
1. A security descriptor object obtained through the Get-Acl cmdlet
2. A security descriptor object obtained through the Get-SecurityDescriptor or 
   New-AdaptedSecurityDescriptor functions
3. An object (including a path string) that the Get-SecurityDescriptor function 
   knows how to handle.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="0">
				<maml:name>AceObject</maml:name>
				<maml:description>
					<maml:para>This is one or more ACEs to be added to the security descriptor. Each ACE will 
be added to each security descriptor in the -SDObject parameter (which means 
more than one -AceObject and/or -SDObject can be provided).

The -AceObject objects can be created via the New-AccessControlEntry, they can 
come from the Access and/or Audit properties of a security descriptor, or they 
can come from Get-AccessControlEntry.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">Object[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AddEvenIfAclDoesntExist</maml:name>
				<maml:description>
					<maml:para>By default, if an attempt is made to add an ACE to a non-existent ACL, the 
function will write a warning and not make any changes to the security 
descriptor. An example of this would be using Get-SecurityDescriptor without 
the -Audit switch, then trying to add a &apos;SystemAudit&apos; ACE to the security 
descriptor. 

This switch will cause the function to create a blank ACL and add the ACE if
the ACL that the ACE should belong to does not already exist. If the ACL does
already exist, this switch will not do anything.

Note that using this switch and then saving the resulting security descriptor 
object back out could cause a previously populated ACL to be overwritten.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the security descriptor to be saved to the securable object. By default,
when a security descriptor object is provided as input to the SDObject 
parameter, the in memory security descriptor is changed, and a separate call to
Set-SecurityDescriptor saves the changes. Using the -Apply switch causes the 
change to be made without a separate call to Set-SecurityDescriptor.

If a non security descriptor object is provided as input  and the -PassThru 
switch is not specified, the default behavior is to set this switch and prompt 
the user before saving the security descriptor (the -Force parameter would
suppress the prompt).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts 
about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the modified security descriptor object. By default, this function does 
not generate any output. This parameter is useful when multiple security 
descriptor modifications need to be made in a single line (each call can be 
piped to the next one).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Overwrite</maml:name>
				<maml:description>
					<maml:para>By default, if an existing ACE&apos;s properties match all of the properties of the 
ACE to be added (except the access mask), the rights from both ACEs are merged. 

If this switch is specified, the existing ACE is removed before the new ACE is 
added. This causes the function to behave like the SetAccessRule/SetAuditRule 
methods instead of the AddAccessRule/AddAuditRule methods on Get-Acl security 
descriptors.

Example: If an ACE granting Everyone Read rights already exists in the security
descriptor, and an ACE granting Everyone Write rights is added, the default
behavior would result in a single ACE giving Everyone Read and Write rights
over the object. Using this switch would result in a single ACE giving Everyone
Write rights (no Read rights), because the original ACE would be removed before
the new one is added.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Causes the function to prompt for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Add-AccessControlEntry</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>SDObject</maml:name>
				<maml:description>
					<maml:para>Specifies the security descriptor that will have an access control entry added 
to it.

This parameter can be any combination of one or more of the following objects: 
1. A security descriptor object obtained through the Get-Acl cmdlet
2. A security descriptor object obtained through the Get-SecurityDescriptor or 
   New-AdaptedSecurityDescriptor functions
3. An object (including a path string) that the Get-SecurityDescriptor function 
   knows how to handle.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AddEvenIfAclDoesntExist</maml:name>
				<maml:description>
					<maml:para>By default, if an attempt is made to add an ACE to a non-existent ACL, the 
function will write a warning and not make any changes to the security 
descriptor. An example of this would be using Get-SecurityDescriptor without 
the -Audit switch, then trying to add a &apos;SystemAudit&apos; ACE to the security 
descriptor. 

This switch will cause the function to create a blank ACL and add the ACE if
the ACL that the ACE should belong to does not already exist. If the ACL does
already exist, this switch will not do anything.

Note that using this switch and then saving the resulting security descriptor 
object back out could cause a previously populated ACL to be overwritten.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the security descriptor to be saved to the securable object. By default,
when a security descriptor object is provided as input to the SDObject 
parameter, the in memory security descriptor is changed, and a separate call to
Set-SecurityDescriptor saves the changes. Using the -Apply switch causes the 
change to be made without a separate call to Set-SecurityDescriptor.

If a non security descriptor object is provided as input  and the -PassThru 
switch is not specified, the default behavior is to set this switch and prompt 
the user before saving the security descriptor (the -Force parameter would
suppress the prompt).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts 
about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the modified security descriptor object. By default, this function does 
not generate any output. This parameter is useful when multiple security 
descriptor modifications need to be made in a single line (each call can be 
piped to the next one).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Overwrite</maml:name>
				<maml:description>
					<maml:para>By default, if an existing ACE&apos;s properties match all of the properties of the 
ACE to be added (except the access mask), the rights from both ACEs are merged. 

If this switch is specified, the existing ACE is removed before the new ACE is 
added. This causes the function to behave like the SetAccessRule/SetAuditRule 
methods instead of the AddAccessRule/AddAuditRule methods on Get-Acl security 
descriptors.

Example: If an ACE granting Everyone Read rights already exists in the security
descriptor, and an ACE granting Everyone Write rights is added, the default
behavior would result in a single ACE giving Everyone Read and Write rights
over the object. Using this switch would result in a single ACE giving Everyone
Write rights (no Read rights), because the original ACE would be removed before
the new one is added.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AceType</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OnlyApplyToThisContainer</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WsManAccessRights</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">WsManAccessRights</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Causes the function to prompt for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Add-AccessControlEntry</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>SDObject</maml:name>
				<maml:description>
					<maml:para>Specifies the security descriptor that will have an access control entry added 
to it.

This parameter can be any combination of one or more of the following objects: 
1. A security descriptor object obtained through the Get-Acl cmdlet
2. A security descriptor object obtained through the Get-SecurityDescriptor or 
   New-AdaptedSecurityDescriptor functions
3. An object (including a path string) that the Get-SecurityDescriptor function 
   knows how to handle.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AddEvenIfAclDoesntExist</maml:name>
				<maml:description>
					<maml:para>By default, if an attempt is made to add an ACE to a non-existent ACL, the 
function will write a warning and not make any changes to the security 
descriptor. An example of this would be using Get-SecurityDescriptor without 
the -Audit switch, then trying to add a &apos;SystemAudit&apos; ACE to the security 
descriptor. 

This switch will cause the function to create a blank ACL and add the ACE if
the ACL that the ACE should belong to does not already exist. If the ACL does
already exist, this switch will not do anything.

Note that using this switch and then saving the resulting security descriptor 
object back out could cause a previously populated ACL to be overwritten.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the security descriptor to be saved to the securable object. By default,
when a security descriptor object is provided as input to the SDObject 
parameter, the in memory security descriptor is changed, and a separate call to
Set-SecurityDescriptor saves the changes. Using the -Apply switch causes the 
change to be made without a separate call to Set-SecurityDescriptor.

If a non security descriptor object is provided as input  and the -PassThru 
switch is not specified, the default behavior is to set this switch and prompt 
the user before saving the security descriptor (the -Force parameter would
suppress the prompt).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts 
about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the modified security descriptor object. By default, this function does 
not generate any output. This parameter is useful when multiple security 
descriptor modifications need to be made in a single line (each call can be 
piped to the next one).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Overwrite</maml:name>
				<maml:description>
					<maml:para>By default, if an existing ACE&apos;s properties match all of the properties of the 
ACE to be added (except the access mask), the rights from both ACEs are merged. 

If this switch is specified, the existing ACE is removed before the new ACE is 
added. This causes the function to behave like the SetAccessRule/SetAuditRule 
methods instead of the AddAccessRule/AddAuditRule methods on Get-Acl security 
descriptors.

Example: If an ACE granting Everyone Read rights already exists in the security
descriptor, and an ACE granting Everyone Write rights is added, the default
behavior would result in a single ACE giving Everyone Read and Write rights
over the object. Using this switch would result in a single ACE giving Everyone
Write rights (no Read rights), because the original ACE would be removed before
the new one is added.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AceType</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OnlyApplyToThisContainer</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ProcessAccessRights</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ProcessAccessRights</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Causes the function to prompt for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Add-AccessControlEntry</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>SDObject</maml:name>
				<maml:description>
					<maml:para>Specifies the security descriptor that will have an access control entry added 
to it.

This parameter can be any combination of one or more of the following objects: 
1. A security descriptor object obtained through the Get-Acl cmdlet
2. A security descriptor object obtained through the Get-SecurityDescriptor or 
   New-AdaptedSecurityDescriptor functions
3. An object (including a path string) that the Get-SecurityDescriptor function 
   knows how to handle.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AddEvenIfAclDoesntExist</maml:name>
				<maml:description>
					<maml:para>By default, if an attempt is made to add an ACE to a non-existent ACL, the 
function will write a warning and not make any changes to the security 
descriptor. An example of this would be using Get-SecurityDescriptor without 
the -Audit switch, then trying to add a &apos;SystemAudit&apos; ACE to the security 
descriptor. 

This switch will cause the function to create a blank ACL and add the ACE if
the ACL that the ACE should belong to does not already exist. If the ACL does
already exist, this switch will not do anything.

Note that using this switch and then saving the resulting security descriptor 
object back out could cause a previously populated ACL to be overwritten.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the security descriptor to be saved to the securable object. By default,
when a security descriptor object is provided as input to the SDObject 
parameter, the in memory security descriptor is changed, and a separate call to
Set-SecurityDescriptor saves the changes. Using the -Apply switch causes the 
change to be made without a separate call to Set-SecurityDescriptor.

If a non security descriptor object is provided as input  and the -PassThru 
switch is not specified, the default behavior is to set this switch and prompt 
the user before saving the security descriptor (the -Force parameter would
suppress the prompt).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts 
about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the modified security descriptor object. By default, this function does 
not generate any output. This parameter is useful when multiple security 
descriptor modifications need to be made in a single line (each call can be 
piped to the next one).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Overwrite</maml:name>
				<maml:description>
					<maml:para>By default, if an existing ACE&apos;s properties match all of the properties of the 
ACE to be added (except the access mask), the rights from both ACEs are merged. 

If this switch is specified, the existing ACE is removed before the new ACE is 
added. This causes the function to behave like the SetAccessRule/SetAuditRule 
methods instead of the AddAccessRule/AddAuditRule methods on Get-Acl security 
descriptors.

Example: If an ACE granting Everyone Read rights already exists in the security
descriptor, and an ACE granting Everyone Write rights is added, the default
behavior would result in a single ACE giving Everyone Read and Write rights
over the object. Using this switch would result in a single ACE giving Everyone
Write rights (no Read rights), because the original ACE would be removed before
the new one is added.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AceType</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OnlyApplyToThisContainer</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ServiceAccessRights</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ServiceAccessRights</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Causes the function to prompt for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Add-AccessControlEntry</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>SDObject</maml:name>
				<maml:description>
					<maml:para>Specifies the security descriptor that will have an access control entry added 
to it.

This parameter can be any combination of one or more of the following objects: 
1. A security descriptor object obtained through the Get-Acl cmdlet
2. A security descriptor object obtained through the Get-SecurityDescriptor or 
   New-AdaptedSecurityDescriptor functions
3. An object (including a path string) that the Get-SecurityDescriptor function 
   knows how to handle.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AddEvenIfAclDoesntExist</maml:name>
				<maml:description>
					<maml:para>By default, if an attempt is made to add an ACE to a non-existent ACL, the 
function will write a warning and not make any changes to the security 
descriptor. An example of this would be using Get-SecurityDescriptor without 
the -Audit switch, then trying to add a &apos;SystemAudit&apos; ACE to the security 
descriptor. 

This switch will cause the function to create a blank ACL and add the ACE if
the ACL that the ACE should belong to does not already exist. If the ACL does
already exist, this switch will not do anything.

Note that using this switch and then saving the resulting security descriptor 
object back out could cause a previously populated ACL to be overwritten.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the security descriptor to be saved to the securable object. By default,
when a security descriptor object is provided as input to the SDObject 
parameter, the in memory security descriptor is changed, and a separate call to
Set-SecurityDescriptor saves the changes. Using the -Apply switch causes the 
change to be made without a separate call to Set-SecurityDescriptor.

If a non security descriptor object is provided as input  and the -PassThru 
switch is not specified, the default behavior is to set this switch and prompt 
the user before saving the security descriptor (the -Force parameter would
suppress the prompt).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts 
about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the modified security descriptor object. By default, this function does 
not generate any output. This parameter is useful when multiple security 
descriptor modifications need to be made in a single line (each call can be 
piped to the next one).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Overwrite</maml:name>
				<maml:description>
					<maml:para>By default, if an existing ACE&apos;s properties match all of the properties of the 
ACE to be added (except the access mask), the rights from both ACEs are merged. 

If this switch is specified, the existing ACE is removed before the new ACE is 
added. This causes the function to behave like the SetAccessRule/SetAuditRule 
methods instead of the AddAccessRule/AddAuditRule methods on Get-Acl security 
descriptors.

Example: If an ACE granting Everyone Read rights already exists in the security
descriptor, and an ACE granting Everyone Write rights is added, the default
behavior would result in a single ACE giving Everyone Read and Write rights
over the object. Using this switch would result in a single ACE giving Everyone
Write rights (no Read rights), because the original ACE would be removed before
the new one is added.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AceType</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OnlyApplyToThisContainer</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WmiNameSpaceRights</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">WmiNamespaceRights</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Causes the function to prompt for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Add-AccessControlEntry</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>SDObject</maml:name>
				<maml:description>
					<maml:para>Specifies the security descriptor that will have an access control entry added 
to it.

This parameter can be any combination of one or more of the following objects: 
1. A security descriptor object obtained through the Get-Acl cmdlet
2. A security descriptor object obtained through the Get-SecurityDescriptor or 
   New-AdaptedSecurityDescriptor functions
3. An object (including a path string) that the Get-SecurityDescriptor function 
   knows how to handle.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AddEvenIfAclDoesntExist</maml:name>
				<maml:description>
					<maml:para>By default, if an attempt is made to add an ACE to a non-existent ACL, the 
function will write a warning and not make any changes to the security 
descriptor. An example of this would be using Get-SecurityDescriptor without 
the -Audit switch, then trying to add a &apos;SystemAudit&apos; ACE to the security 
descriptor. 

This switch will cause the function to create a blank ACL and add the ACE if
the ACL that the ACE should belong to does not already exist. If the ACL does
already exist, this switch will not do anything.

Note that using this switch and then saving the resulting security descriptor 
object back out could cause a previously populated ACL to be overwritten.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the security descriptor to be saved to the securable object. By default,
when a security descriptor object is provided as input to the SDObject 
parameter, the in memory security descriptor is changed, and a separate call to
Set-SecurityDescriptor saves the changes. Using the -Apply switch causes the 
change to be made without a separate call to Set-SecurityDescriptor.

If a non security descriptor object is provided as input  and the -PassThru 
switch is not specified, the default behavior is to set this switch and prompt 
the user before saving the security descriptor (the -Force parameter would
suppress the prompt).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts 
about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the modified security descriptor object. By default, this function does 
not generate any output. This parameter is useful when multiple security 
descriptor modifications need to be made in a single line (each call can be 
piped to the next one).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Overwrite</maml:name>
				<maml:description>
					<maml:para>By default, if an existing ACE&apos;s properties match all of the properties of the 
ACE to be added (except the access mask), the rights from both ACEs are merged. 

If this switch is specified, the existing ACE is removed before the new ACE is 
added. This causes the function to behave like the SetAccessRule/SetAuditRule 
methods instead of the AddAccessRule/AddAuditRule methods on Get-Acl security 
descriptors.

Example: If an ACE granting Everyone Read rights already exists in the security
descriptor, and an ACE granting Everyone Write rights is added, the default
behavior would result in a single ACE giving Everyone Read and Write rights
over the object. Using this switch would result in a single ACE giving Everyone
Write rights (no Read rights), because the original ACE would be removed before
the new one is added.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AceType</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OnlyApplyToThisContainer</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PrinterRights</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PrinterRights</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Causes the function to prompt for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Add-AccessControlEntry</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>SDObject</maml:name>
				<maml:description>
					<maml:para>Specifies the security descriptor that will have an access control entry added 
to it.

This parameter can be any combination of one or more of the following objects: 
1. A security descriptor object obtained through the Get-Acl cmdlet
2. A security descriptor object obtained through the Get-SecurityDescriptor or 
   New-AdaptedSecurityDescriptor functions
3. An object (including a path string) that the Get-SecurityDescriptor function 
   knows how to handle.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AddEvenIfAclDoesntExist</maml:name>
				<maml:description>
					<maml:para>By default, if an attempt is made to add an ACE to a non-existent ACL, the 
function will write a warning and not make any changes to the security 
descriptor. An example of this would be using Get-SecurityDescriptor without 
the -Audit switch, then trying to add a &apos;SystemAudit&apos; ACE to the security 
descriptor. 

This switch will cause the function to create a blank ACL and add the ACE if
the ACL that the ACE should belong to does not already exist. If the ACL does
already exist, this switch will not do anything.

Note that using this switch and then saving the resulting security descriptor 
object back out could cause a previously populated ACL to be overwritten.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the security descriptor to be saved to the securable object. By default,
when a security descriptor object is provided as input to the SDObject 
parameter, the in memory security descriptor is changed, and a separate call to
Set-SecurityDescriptor saves the changes. Using the -Apply switch causes the 
change to be made without a separate call to Set-SecurityDescriptor.

If a non security descriptor object is provided as input  and the -PassThru 
switch is not specified, the default behavior is to set this switch and prompt 
the user before saving the security descriptor (the -Force parameter would
suppress the prompt).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts 
about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the modified security descriptor object. By default, this function does 
not generate any output. This parameter is useful when multiple security 
descriptor modifications need to be made in a single line (each call can be 
piped to the next one).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Overwrite</maml:name>
				<maml:description>
					<maml:para>By default, if an existing ACE&apos;s properties match all of the properties of the 
ACE to be added (except the access mask), the rights from both ACEs are merged. 

If this switch is specified, the existing ACE is removed before the new ACE is 
added. This causes the function to behave like the SetAccessRule/SetAuditRule 
methods instead of the AddAccessRule/AddAuditRule methods on Get-Acl security 
descriptors.

Example: If an ACE granting Everyone Read rights already exists in the security
descriptor, and an ACE granting Everyone Write rights is added, the default
behavior would result in a single ACE giving Everyone Read and Write rights
over the object. Using this switch would result in a single ACE giving Everyone
Write rights (no Read rights), because the original ACE would be removed before
the new one is added.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AceType</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OnlyApplyToThisContainer</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LogicalShareRights</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">LogicalShareRights</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Causes the function to prompt for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Add-AccessControlEntry</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>SDObject</maml:name>
				<maml:description>
					<maml:para>Specifies the security descriptor that will have an access control entry added 
to it.

This parameter can be any combination of one or more of the following objects: 
1. A security descriptor object obtained through the Get-Acl cmdlet
2. A security descriptor object obtained through the Get-SecurityDescriptor or 
   New-AdaptedSecurityDescriptor functions
3. An object (including a path string) that the Get-SecurityDescriptor function 
   knows how to handle.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AddEvenIfAclDoesntExist</maml:name>
				<maml:description>
					<maml:para>By default, if an attempt is made to add an ACE to a non-existent ACL, the 
function will write a warning and not make any changes to the security 
descriptor. An example of this would be using Get-SecurityDescriptor without 
the -Audit switch, then trying to add a &apos;SystemAudit&apos; ACE to the security 
descriptor. 

This switch will cause the function to create a blank ACL and add the ACE if
the ACL that the ACE should belong to does not already exist. If the ACL does
already exist, this switch will not do anything.

Note that using this switch and then saving the resulting security descriptor 
object back out could cause a previously populated ACL to be overwritten.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the security descriptor to be saved to the securable object. By default,
when a security descriptor object is provided as input to the SDObject 
parameter, the in memory security descriptor is changed, and a separate call to
Set-SecurityDescriptor saves the changes. Using the -Apply switch causes the 
change to be made without a separate call to Set-SecurityDescriptor.

If a non security descriptor object is provided as input  and the -PassThru 
switch is not specified, the default behavior is to set this switch and prompt 
the user before saving the security descriptor (the -Force parameter would
suppress the prompt).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts 
about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the modified security descriptor object. By default, this function does 
not generate any output. This parameter is useful when multiple security 
descriptor modifications need to be made in a single line (each call can be 
piped to the next one).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Overwrite</maml:name>
				<maml:description>
					<maml:para>By default, if an existing ACE&apos;s properties match all of the properties of the 
ACE to be added (except the access mask), the rights from both ACEs are merged. 

If this switch is specified, the existing ACE is removed before the new ACE is 
added. This causes the function to behave like the SetAccessRule/SetAuditRule 
methods instead of the AddAccessRule/AddAuditRule methods on Get-Acl security 
descriptors.

Example: If an ACE granting Everyone Read rights already exists in the security
descriptor, and an ACE granting Everyone Write rights is added, the default
behavior would result in a single ACE giving Everyone Read and Write rights
over the object. Using this switch would result in a single ACE giving Everyone
Write rights (no Read rights), because the original ACE would be removed before
the new one is added.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AceType</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OnlyApplyToThisContainer</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ObjectAceType</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>InheritedObjectAceType</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Causes the function to prompt for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Add-AccessControlEntry</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>SDObject</maml:name>
				<maml:description>
					<maml:para>Specifies the security descriptor that will have an access control entry added 
to it.

This parameter can be any combination of one or more of the following objects: 
1. A security descriptor object obtained through the Get-Acl cmdlet
2. A security descriptor object obtained through the Get-SecurityDescriptor or 
   New-AdaptedSecurityDescriptor functions
3. An object (including a path string) that the Get-SecurityDescriptor function 
   knows how to handle.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AddEvenIfAclDoesntExist</maml:name>
				<maml:description>
					<maml:para>By default, if an attempt is made to add an ACE to a non-existent ACL, the 
function will write a warning and not make any changes to the security 
descriptor. An example of this would be using Get-SecurityDescriptor without 
the -Audit switch, then trying to add a &apos;SystemAudit&apos; ACE to the security 
descriptor. 

This switch will cause the function to create a blank ACL and add the ACE if
the ACL that the ACE should belong to does not already exist. If the ACL does
already exist, this switch will not do anything.

Note that using this switch and then saving the resulting security descriptor 
object back out could cause a previously populated ACL to be overwritten.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the security descriptor to be saved to the securable object. By default,
when a security descriptor object is provided as input to the SDObject 
parameter, the in memory security descriptor is changed, and a separate call to
Set-SecurityDescriptor saves the changes. Using the -Apply switch causes the 
change to be made without a separate call to Set-SecurityDescriptor.

If a non security descriptor object is provided as input  and the -PassThru 
switch is not specified, the default behavior is to set this switch and prompt 
the user before saving the security descriptor (the -Force parameter would
suppress the prompt).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts 
about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the modified security descriptor object. By default, this function does 
not generate any output. This parameter is useful when multiple security 
descriptor modifications need to be made in a single line (each call can be 
piped to the next one).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Overwrite</maml:name>
				<maml:description>
					<maml:para>By default, if an existing ACE&apos;s properties match all of the properties of the 
ACE to be added (except the access mask), the rights from both ACEs are merged. 

If this switch is specified, the existing ACE is removed before the new ACE is 
added. This causes the function to behave like the SetAccessRule/SetAuditRule 
methods instead of the AddAccessRule/AddAuditRule methods on Get-Acl security 
descriptors.

Example: If an ACE granting Everyone Read rights already exists in the security
descriptor, and an ACE granting Everyone Write rights is added, the default
behavior would result in a single ACE giving Everyone Read and Write rights
over the object. Using this switch would result in a single ACE giving Everyone
Write rights (no Read rights), because the original ACE would be removed before
the new one is added.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AceType</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ActiveDirectoryRights</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ActiveDirectoryRights</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OnlyApplyToThisContainer</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ObjectAceType</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>InheritedObjectAceType</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Causes the function to prompt for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Add-AccessControlEntry</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>SDObject</maml:name>
				<maml:description>
					<maml:para>Specifies the security descriptor that will have an access control entry added 
to it.

This parameter can be any combination of one or more of the following objects: 
1. A security descriptor object obtained through the Get-Acl cmdlet
2. A security descriptor object obtained through the Get-SecurityDescriptor or 
   New-AdaptedSecurityDescriptor functions
3. An object (including a path string) that the Get-SecurityDescriptor function 
   knows how to handle.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AddEvenIfAclDoesntExist</maml:name>
				<maml:description>
					<maml:para>By default, if an attempt is made to add an ACE to a non-existent ACL, the 
function will write a warning and not make any changes to the security 
descriptor. An example of this would be using Get-SecurityDescriptor without 
the -Audit switch, then trying to add a &apos;SystemAudit&apos; ACE to the security 
descriptor. 

This switch will cause the function to create a blank ACL and add the ACE if
the ACL that the ACE should belong to does not already exist. If the ACL does
already exist, this switch will not do anything.

Note that using this switch and then saving the resulting security descriptor 
object back out could cause a previously populated ACL to be overwritten.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the security descriptor to be saved to the securable object. By default,
when a security descriptor object is provided as input to the SDObject 
parameter, the in memory security descriptor is changed, and a separate call to
Set-SecurityDescriptor saves the changes. Using the -Apply switch causes the 
change to be made without a separate call to Set-SecurityDescriptor.

If a non security descriptor object is provided as input  and the -PassThru 
switch is not specified, the default behavior is to set this switch and prompt 
the user before saving the security descriptor (the -Force parameter would
suppress the prompt).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts 
about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the modified security descriptor object. By default, this function does 
not generate any output. This parameter is useful when multiple security 
descriptor modifications need to be made in a single line (each call can be 
piped to the next one).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Overwrite</maml:name>
				<maml:description>
					<maml:para>By default, if an existing ACE&apos;s properties match all of the properties of the 
ACE to be added (except the access mask), the rights from both ACEs are merged. 

If this switch is specified, the existing ACE is removed before the new ACE is 
added. This causes the function to behave like the SetAccessRule/SetAuditRule 
methods instead of the AddAccessRule/AddAuditRule methods on Get-Acl security 
descriptors.

Example: If an ACE granting Everyone Read rights already exists in the security
descriptor, and an ACE granting Everyone Write rights is added, the default
behavior would result in a single ACE giving Everyone Read and Write rights
over the object. Using this switch would result in a single ACE giving Everyone
Write rights (no Read rights), because the original ACE would be removed before
the new one is added.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AceType</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>RegistryRights</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">RegistryRights</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OnlyApplyToThisContainer</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Causes the function to prompt for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Add-AccessControlEntry</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>SDObject</maml:name>
				<maml:description>
					<maml:para>Specifies the security descriptor that will have an access control entry added 
to it.

This parameter can be any combination of one or more of the following objects: 
1. A security descriptor object obtained through the Get-Acl cmdlet
2. A security descriptor object obtained through the Get-SecurityDescriptor or 
   New-AdaptedSecurityDescriptor functions
3. An object (including a path string) that the Get-SecurityDescriptor function 
   knows how to handle.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AddEvenIfAclDoesntExist</maml:name>
				<maml:description>
					<maml:para>By default, if an attempt is made to add an ACE to a non-existent ACL, the 
function will write a warning and not make any changes to the security 
descriptor. An example of this would be using Get-SecurityDescriptor without 
the -Audit switch, then trying to add a &apos;SystemAudit&apos; ACE to the security 
descriptor. 

This switch will cause the function to create a blank ACL and add the ACE if
the ACL that the ACE should belong to does not already exist. If the ACL does
already exist, this switch will not do anything.

Note that using this switch and then saving the resulting security descriptor 
object back out could cause a previously populated ACL to be overwritten.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the security descriptor to be saved to the securable object. By default,
when a security descriptor object is provided as input to the SDObject 
parameter, the in memory security descriptor is changed, and a separate call to
Set-SecurityDescriptor saves the changes. Using the -Apply switch causes the 
change to be made without a separate call to Set-SecurityDescriptor.

If a non security descriptor object is provided as input  and the -PassThru 
switch is not specified, the default behavior is to set this switch and prompt 
the user before saving the security descriptor (the -Force parameter would
suppress the prompt).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts 
about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the modified security descriptor object. By default, this function does 
not generate any output. This parameter is useful when multiple security 
descriptor modifications need to be made in a single line (each call can be 
piped to the next one).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Overwrite</maml:name>
				<maml:description>
					<maml:para>By default, if an existing ACE&apos;s properties match all of the properties of the 
ACE to be added (except the access mask), the rights from both ACEs are merged. 

If this switch is specified, the existing ACE is removed before the new ACE is 
added. This causes the function to behave like the SetAccessRule/SetAuditRule 
methods instead of the AddAccessRule/AddAuditRule methods on Get-Acl security 
descriptors.

Example: If an ACE granting Everyone Read rights already exists in the security
descriptor, and an ACE granting Everyone Write rights is added, the default
behavior would result in a single ACE giving Everyone Read and Write rights
over the object. Using this switch would result in a single ACE giving Everyone
Write rights (no Read rights), because the original ACE would be removed before
the new one is added.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AceType</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>FolderRights</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">FileSystemRights</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OnlyApplyToThisContainer</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Causes the function to prompt for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Add-AccessControlEntry</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>SDObject</maml:name>
				<maml:description>
					<maml:para>Specifies the security descriptor that will have an access control entry added 
to it.

This parameter can be any combination of one or more of the following objects: 
1. A security descriptor object obtained through the Get-Acl cmdlet
2. A security descriptor object obtained through the Get-SecurityDescriptor or 
   New-AdaptedSecurityDescriptor functions
3. An object (including a path string) that the Get-SecurityDescriptor function 
   knows how to handle.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AddEvenIfAclDoesntExist</maml:name>
				<maml:description>
					<maml:para>By default, if an attempt is made to add an ACE to a non-existent ACL, the 
function will write a warning and not make any changes to the security 
descriptor. An example of this would be using Get-SecurityDescriptor without 
the -Audit switch, then trying to add a &apos;SystemAudit&apos; ACE to the security 
descriptor. 

This switch will cause the function to create a blank ACL and add the ACE if
the ACL that the ACE should belong to does not already exist. If the ACL does
already exist, this switch will not do anything.

Note that using this switch and then saving the resulting security descriptor 
object back out could cause a previously populated ACL to be overwritten.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the security descriptor to be saved to the securable object. By default,
when a security descriptor object is provided as input to the SDObject 
parameter, the in memory security descriptor is changed, and a separate call to
Set-SecurityDescriptor saves the changes. Using the -Apply switch causes the 
change to be made without a separate call to Set-SecurityDescriptor.

If a non security descriptor object is provided as input  and the -PassThru 
switch is not specified, the default behavior is to set this switch and prompt 
the user before saving the security descriptor (the -Force parameter would
suppress the prompt).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts 
about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the modified security descriptor object. By default, this function does 
not generate any output. This parameter is useful when multiple security 
descriptor modifications need to be made in a single line (each call can be 
piped to the next one).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Overwrite</maml:name>
				<maml:description>
					<maml:para>By default, if an existing ACE&apos;s properties match all of the properties of the 
ACE to be added (except the access mask), the rights from both ACEs are merged. 

If this switch is specified, the existing ACE is removed before the new ACE is 
added. This causes the function to behave like the SetAccessRule/SetAuditRule 
methods instead of the AddAccessRule/AddAuditRule methods on Get-Acl security 
descriptors.

Example: If an ACE granting Everyone Read rights already exists in the security
descriptor, and an ACE granting Everyone Write rights is added, the default
behavior would result in a single ACE giving Everyone Read and Write rights
over the object. Using this switch would result in a single ACE giving Everyone
Write rights (no Read rights), because the original ACE would be removed before
the new one is added.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AceType</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>FileRights</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">FileSystemRights</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OnlyApplyToThisContainer</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Causes the function to prompt for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Add-AccessControlEntry</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>SDObject</maml:name>
				<maml:description>
					<maml:para>Specifies the security descriptor that will have an access control entry added 
to it.

This parameter can be any combination of one or more of the following objects: 
1. A security descriptor object obtained through the Get-Acl cmdlet
2. A security descriptor object obtained through the Get-SecurityDescriptor or 
   New-AdaptedSecurityDescriptor functions
3. An object (including a path string) that the Get-SecurityDescriptor function 
   knows how to handle.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AddEvenIfAclDoesntExist</maml:name>
				<maml:description>
					<maml:para>By default, if an attempt is made to add an ACE to a non-existent ACL, the 
function will write a warning and not make any changes to the security 
descriptor. An example of this would be using Get-SecurityDescriptor without 
the -Audit switch, then trying to add a &apos;SystemAudit&apos; ACE to the security 
descriptor. 

This switch will cause the function to create a blank ACL and add the ACE if
the ACL that the ACE should belong to does not already exist. If the ACL does
already exist, this switch will not do anything.

Note that using this switch and then saving the resulting security descriptor 
object back out could cause a previously populated ACL to be overwritten.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the security descriptor to be saved to the securable object. By default,
when a security descriptor object is provided as input to the SDObject 
parameter, the in memory security descriptor is changed, and a separate call to
Set-SecurityDescriptor saves the changes. Using the -Apply switch causes the 
change to be made without a separate call to Set-SecurityDescriptor.

If a non security descriptor object is provided as input  and the -PassThru 
switch is not specified, the default behavior is to set this switch and prompt 
the user before saving the security descriptor (the -Force parameter would
suppress the prompt).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts 
about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the modified security descriptor object. By default, this function does 
not generate any output. This parameter is useful when multiple security 
descriptor modifications need to be made in a single line (each call can be 
piped to the next one).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Overwrite</maml:name>
				<maml:description>
					<maml:para>By default, if an existing ACE&apos;s properties match all of the properties of the 
ACE to be added (except the access mask), the rights from both ACEs are merged. 

If this switch is specified, the existing ACE is removed before the new ACE is 
added. This causes the function to behave like the SetAccessRule/SetAuditRule 
methods instead of the AddAccessRule/AddAuditRule methods on Get-Acl security 
descriptors.

Example: If an ACE granting Everyone Read rights already exists in the security
descriptor, and an ACE granting Everyone Write rights is added, the default
behavior would result in a single ACE giving Everyone Read and Write rights
over the object. Using this switch would result in a single ACE giving Everyone
Write rights (no Read rights), because the original ACE would be removed before
the new one is added.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AceType</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AccessMask</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OnlyApplyToThisContainer</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ObjectAceType</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>InheritedObjectAceType</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Causes the function to prompt for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>SDObject</maml:name>
			<maml:description>
				<maml:para>Specifies the security descriptor that will have an access control entry added 
to it.

This parameter can be any combination of one or more of the following objects: 
1. A security descriptor object obtained through the Get-Acl cmdlet
2. A security descriptor object obtained through the Get-SecurityDescriptor or 
   New-AdaptedSecurityDescriptor functions
3. An object (including a path string) that the Get-SecurityDescriptor function 
   knows how to handle.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="0">
			<maml:name>AceObject</maml:name>
			<maml:description>
				<maml:para>This is one or more ACEs to be added to the security descriptor. Each ACE will 
be added to each security descriptor in the -SDObject parameter (which means 
more than one -AceObject and/or -SDObject can be provided).

The -AceObject objects can be created via the New-AccessControlEntry, they can 
come from the Access and/or Audit properties of a security descriptor, or they 
can come from Get-AccessControlEntry.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Object[]</command:parameterValue>
			<dev:type>
				<maml:name>Object[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AddEvenIfAclDoesntExist</maml:name>
			<maml:description>
				<maml:para>By default, if an attempt is made to add an ACE to a non-existent ACL, the 
function will write a warning and not make any changes to the security 
descriptor. An example of this would be using Get-SecurityDescriptor without 
the -Audit switch, then trying to add a &apos;SystemAudit&apos; ACE to the security 
descriptor. 

This switch will cause the function to create a blank ACL and add the ACE if
the ACL that the ACE should belong to does not already exist. If the ACL does
already exist, this switch will not do anything.

Note that using this switch and then saving the resulting security descriptor 
object back out could cause a previously populated ACL to be overwritten.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Apply</maml:name>
			<maml:description>
				<maml:para>Causes the security descriptor to be saved to the securable object. By default,
when a security descriptor object is provided as input to the SDObject 
parameter, the in memory security descriptor is changed, and a separate call to
Set-SecurityDescriptor saves the changes. Using the -Apply switch causes the 
change to be made without a separate call to Set-SecurityDescriptor.

If a non security descriptor object is provided as input  and the -PassThru 
switch is not specified, the default behavior is to set this switch and prompt 
the user before saving the security descriptor (the -Force parameter would
suppress the prompt).</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts 
about saving the security descriptor.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Returns the modified security descriptor object. By default, this function does 
not generate any output. This parameter is useful when multiple security 
descriptor modifications need to be made in a single line (each call can be 
piped to the next one).</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Overwrite</maml:name>
			<maml:description>
				<maml:para>By default, if an existing ACE&apos;s properties match all of the properties of the 
ACE to be added (except the access mask), the rights from both ACEs are merged. 

If this switch is specified, the existing ACE is removed before the new ACE is 
added. This causes the function to behave like the SetAccessRule/SetAuditRule 
methods instead of the AddAccessRule/AddAuditRule methods on Get-Acl security 
descriptors.

Example: If an ACE granting Everyone Read rights already exists in the security
descriptor, and an ACE granting Everyone Write rights is added, the default
behavior would result in a single ACE giving Everyone Read and Write rights
over the object. Using this switch would result in a single ACE giving Everyone
Write rights (no Read rights), because the original ACE would be removed before
the new one is added.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Causes the function to prompt for confirmation before making any changes.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AceType</maml:name>
			<maml:description>
				<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Principal</maml:name>
			<maml:description>
				<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AppliesTo</maml:name>
			<maml:description>
				<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			<dev:type>
				<maml:name>AppliesTo</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>OnlyApplyToThisContainer</maml:name>
			<maml:description>
				<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WsManAccessRights</maml:name>
			<maml:description>
				<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">WsManAccessRights</command:parameterValue>
			<dev:type>
				<maml:name>WsManAccessRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ProcessAccessRights</maml:name>
			<maml:description>
				<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ProcessAccessRights</command:parameterValue>
			<dev:type>
				<maml:name>ProcessAccessRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ServiceAccessRights</maml:name>
			<maml:description>
				<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ServiceAccessRights</command:parameterValue>
			<dev:type>
				<maml:name>ServiceAccessRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WmiNameSpaceRights</maml:name>
			<maml:description>
				<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">WmiNamespaceRights</command:parameterValue>
			<dev:type>
				<maml:name>WmiNamespaceRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PrinterRights</maml:name>
			<maml:description>
				<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PrinterRights</command:parameterValue>
			<dev:type>
				<maml:name>PrinterRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LogicalShareRights</maml:name>
			<maml:description>
				<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">LogicalShareRights</command:parameterValue>
			<dev:type>
				<maml:name>LogicalShareRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ObjectAceType</maml:name>
			<maml:description>
				<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>InheritedObjectAceType</maml:name>
			<maml:description>
				<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ActiveDirectoryRights</maml:name>
			<maml:description>
				<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ActiveDirectoryRights</command:parameterValue>
			<dev:type>
				<maml:name>ActiveDirectoryRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RegistryRights</maml:name>
			<maml:description>
				<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">RegistryRights</command:parameterValue>
			<dev:type>
				<maml:name>RegistryRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FolderRights</maml:name>
			<maml:description>
				<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">FileSystemRights</command:parameterValue>
			<dev:type>
				<maml:name>FileSystemRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FileRights</maml:name>
			<maml:description>
				<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">FileSystemRights</command:parameterValue>
			<dev:type>
				<maml:name>FileSystemRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AccessMask</maml:name>
			<maml:description>
				<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para>Nothing is returned by default. If the -PassThru parameter is specified, though, then a security descriptor object is output.</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
	</command:returnValue>
		</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------  Example 1  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; $SourceFileName = &apos;C:\Folder1\source.txt&apos;
PS C:\&gt; $TargetFileName = &apos;C:\Folder2\target.txt&apos;
PS C:\&gt; Get-SecurityDescriptor $TargetFileName | 
    Add-AccessControlEntry -AceObject (Get-SecurityDescriptor $SourceFileName).Access -PassThru | 
    Set-SecurityDescriptor -WhatIf</dev:code>
			<dev:remarks>
				<maml:para>This example adds every single discretionary ACE (access) from the &apos;source.txt&apos; 
file as an explicit ACE on the &apos;target.txt&apos; file. Both Non-Inherited and 
Inherited ACEs on &apos;source.txt&apos; would be added to &apos;target.txt&apos;.

The following commands to the same as the last command above, but using
different methods. All three commands (including the one above) use the -Whatif
switch, so no changes are made:

PS C:\&gt; Add-AccessControlEntry -Path $TargetFileName -AceObject (Get-SecurityDescriptor $SourceFileName).Access -WhatIf
PS C:\&gt; Get-AccessControlEntry $SourceFileName -AceType AccessAllowed,AccessDenied | 
    Add-AccessControlEntry -Path $TargetFileName -WhatIf</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 2  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; $SourceFileName = &apos;C:\Folder1\source.txt&apos;
PS C:\&gt; $TargetFileName = &apos;C:\Folder2\target.txt&apos;
PS C:\&gt; Get-AccessControlEntry $SourceFileName -AceType AccessAllowed,AccessDenied -NotInherited | 
    Add-AccessControlEntry -Path $TargetFileName -WhatIf</dev:code>
			<dev:remarks>
				<maml:para>This does the same thing as example #1, except only explicitly assigned ACEs 
from &apos;source.txt&apos; will be copied to &apos;target.txt&apos;. -Path is an alias for the
-SDObject parameter.

This example demonstrates how Get-AccessControlEntry can be combined with Add-
AccessControlEntry to add ACEs that match certain conditions (see the help
for Get-AccessControlEntry for more examples of filtering ACLs).</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 3  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-Service b* | 
    Add-AccessControlEntry (New-AccessControlEntry -Principal Users -ServiceAccessRights Start, Stop) -WhatIf</dev:code>
			<dev:remarks>
				<maml:para>This example pretends to give the &apos;Users&apos; group Start and Stop rights over
every service that starts with the letter &apos;b&apos; (it only pretends because the
-WhatIf switch is was supplied). The example demonstrates that 
Add-AccessControlEntry can work against multiple objects being piped into it.

The previous command used the New-AccessControlEntry function to create an ACE
object that was passed to the -AceObject positional parameter. The following
command does the same thing, but using the New-AccessControlEntry parameters
directly:

PS C:\&gt; Get-Service b* | 
    Add-AccessControlEntry -Principal Users -ServiceAccessRights Start, Stop -WhatIf</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 4  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Add-AccessControlEntry -Path HKCU:\Software\SubKey -Principal GoodUser -RegistryRights FullControl -PassThru | Add-AccessControlEntry -Principal BadUser -RegistryRights FullControl -AceType AccessDenied -Apply</dev:code>
			<dev:remarks>
				<maml:para>This example will add two new discretionary ACEs to the HKCU:\Software\SubKey registry key: an ACE giving the &apos;GoodUser&apos; user full control, and an ACE denying the &apos;BadUser&apos; user full control. Note the use of -PassThru in the first call to Add-AccessControlEntry. This allows multiple changes to the security descriptor in a single line.</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 5  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-SecurityDescriptor C:\Folder -Audit | Add-AccessControlEntry -AceType SystemAudit -Principal Everyone -FolderRights FullControl -AuditSuccess -AuditFailure -PassThru | Set-SecurityDescriptor -Sections Audit -WhatIf</dev:code>
			<dev:remarks>
				<maml:para>This example adds a system ACE (auditing) entry to the security descriptor for the &apos;C:\Folder&apos; folder. First, Get-SecurityDescriptor is called with the -Audit switch to get the current security descriptor (the owner, group, DACL, and SACL will all be obtained). That is passed to Add-AccessControlEntry through the pipeline, and it is provided with parameters to create an ACE that will audit any successful or failed actions against the folder. Add-AccessControlEntry is also called with the -PassThru switch, which allows Set-SecurityDescriptor to receive the modified security descriptor through the pipeline. Set-SecurityDescriptor is called with the -Sections parameter set to &apos;Audit&apos;, which means only the SACL is written (in this example, since none of the other security descriptor sections changed, there would be no harm in leaving the -Sections parameter out of the call).

Since the -WhatIf parameter was provided, no permanent changes will be made.</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 6  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-WmiObject __SystemSecurity | Add-AccessControlEntry (New-AccessControlEntry -Principal User1 -WmiNamespaceRights RemoteEnable)</dev:code>
			<dev:remarks>
				<maml:para>This example gives the &apos;User1&apos; user the &apos;RemoteEnable&apos; right on the root/cimv2 namespace (since no namespace was provided to Get-WmiObject). This allows &apos;User1&apos; to use Get-WmiObject and/or Get-CimInstance remotely against this computer (there&apos;s one more required step; see note below). The Get-WmiObject call could have provided the -ComputerName parameter and included a remote computer (or computers), too.

You could confirm the change by calling this command:
Get-WmiObject __SystemSecurity | Get-AccessControlEntry

In order to use Get-WmiObject and/or Get-CimInstance without admin privileges, you must add the user to a local group on the remote computer. This module can actually be used to make the necessary changes, but adding the user to one of these groups easier:
 - For Get-WmiObject, add user to &apos;Distributed COM Users&apos; local group
 - For Get-CimInstance, add user to &apos;WinRMRemoteWMIUsers__&apos; local group</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 7  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-Process calc | Add-AccessControlEntry -Principal TestUser -ProcessAccessRights AllAccess -WhatIf</dev:code>
			<dev:remarks>
				<maml:para>This gives the &apos;TestUser&apos; &apos;AllAccess&apos; rights to any calc.exe processes (the user that runs this command must already have &apos;AllAccess&apos; rights over the processes.</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 8  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; $Demo = New-Item -Path &quot;$env:TEMP\pac_demo&quot; -ItemType directory
PS C:\&gt; $Demo | Add-AccessControlEntry -Principal Users -FolderRights Read -Force
PS C:\&gt; $Demo | Add-AccessControlEntry -Principal Users -FolderRights ExecuteFile
PS C:\&gt; $Demo | Add-AccessControlEntry -Principal Users -FolderRights Write</dev:code>
			<dev:remarks>
				<maml:para>This example calls Add-AccessControlEntry three separate times to give three separate rights to the &apos;Users&apos; group. After all three calls, there should be a single ACE that gives &apos;Users&apos; &apos;ReadAndExecute&apos; and &apos;Write&apos; rights. Since the -Overwrite switch wasn&apos;t specified, the ACEs were merged.</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 9  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; $Demo = New-Item -Path &quot;$env:TEMP\pac_demo&quot; -ItemType directory
PS C:\&gt; $Demo | Add-AccessControlEntry -Principal Users -FolderRights Read -Force
PS C:\&gt; $Demo | Add-AccessControlEntry -Principal Users -FolderRights ExecuteFile -Overwrite
PS C:\&gt; $Demo | Add-AccessControlEntry -Principal Users -FolderRights Write -Overwrite</dev:code>
			<dev:remarks>
				<maml:para>This is very similar to example 8, except the -Overwrite switch is specified. That means that after the second call to Add-AccessControlEntry, the allow ACE for &apos;Users&apos; contains only the &apos;ExecuteFile&apos; right, and after the last call, the ACE contains only the &apos;Write&apos; right. Each time the function is called with the -Overwrite switch, the new ACE overwrites any existing ACEs.</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>about_PowerShellAccessControl_Module</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-SecurityDescriptor</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-SecurityDescriptor</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-AccessControlEntry</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-AccessControlEntry</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>ConvertFrom-Win32SecurityDescriptor</command:name>
		<maml:description>
			<maml:para></maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>ConvertFrom</command:verb>
		<command:noun>Win32SecurityDescriptor</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para></maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>ConvertFrom-Win32SecurityDescriptor</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="0">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Sddl</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>BinarySD</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SddlOld</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>BinarySDOld</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="0">
			<maml:name>InputObject</maml:name>
			<maml:description>
				<maml:para></maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Sddl</maml:name>
			<maml:description>
				<maml:para></maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>BinarySD</maml:name>
			<maml:description>
				<maml:para></maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SddlOld</maml:name>
			<maml:description>
				<maml:para></maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>BinarySDOld</maml:name>
			<maml:description>
				<maml:para></maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
	</command:returnValue>
		</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>about_PowerShellAccessControl_Module</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Win32SecurityDescriptor</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>ConvertTo-Win32SecurityDescriptor</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>ConvertTo-Win32SecurityDescriptor</command:name>
		<maml:description>
			<maml:para>Converts an SDDL or binary form of a security descriptor into an instance of the Win32_SecurityDescriptor WMI class.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>ConvertTo</command:verb>
		<command:noun>Win32SecurityDescriptor</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The ConvertTo-Win32SecurityDescriptor function is used to convert an SDDL or 
binary form of a security descriptor into an instance of the 
Win32_SecurityDescriptor WMI class. By default, the function returns a custom 
object that includes the original SDDL or binary form, along with the 
Win32_SecurityDescriptor form. The Descriptor property contains the 
Win32_SecurityDescriptor object. If the -ValueOnly switch is provided, though,
the output object is either a CimInstance or ManagementBaseObject containing
just the Win32_SecurityDescriptor.

By default, the function returns a CimInstance on PowerShell instances running 
version 3 or higher. On version 2, a ManagementBaseObject is returned. To force
a ManagementBaseObject to be returned, use the -LegacyWmiObject switch.
</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>ConvertTo-Win32SecurityDescriptor</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
				<maml:name>Sddl</maml:name>
				<maml:description>
					<maml:para>A string containing the SDDL representation of a security descriptor. This 
string will be converted to a Win32_SecurityDescriptor object.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ValueOnly</maml:name>
				<maml:description>
					<maml:para>Instead of returning a custom object that contains the Win32_SecurityDescriptor
object as a property, this switch will make the function return just the 
Win32_SecurityDescriptor object.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LegacyWmiObject</maml:name>
				<maml:description>
					<maml:para>By default, the function uses the newer &quot;CIM cmdlets&quot; to do the conversion, and
a CimInstance object is returned. Using this switch makes the function use the 
older &quot;WMI cmdlets&quot;, which causes a ManagementBaseObject to be returned.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>ConvertTo-Win32SecurityDescriptor</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
				<maml:name>BinarySD</maml:name>
				<maml:description>
					<maml:para>A byte array containing the bianry representation of a security descriptor. 
This byte array will be converted to a Win32_SecurityDescriptor object.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">Byte[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ValueOnly</maml:name>
				<maml:description>
					<maml:para>Instead of returning a custom object that contains the Win32_SecurityDescriptor
object as a property, this switch will make the function return just the 
Win32_SecurityDescriptor object.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LegacyWmiObject</maml:name>
				<maml:description>
					<maml:para>By default, the function uses the newer &quot;CIM cmdlets&quot; to do the conversion, and
a CimInstance object is returned. Using this switch makes the function use the 
older &quot;WMI cmdlets&quot;, which causes a ManagementBaseObject to be returned.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Sddl</maml:name>
			<maml:description>
				<maml:para>A string containing the SDDL representation of a security descriptor. This 
string will be converted to a Win32_SecurityDescriptor object.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ValueOnly</maml:name>
			<maml:description>
				<maml:para>Instead of returning a custom object that contains the Win32_SecurityDescriptor
object as a property, this switch will make the function return just the 
Win32_SecurityDescriptor object.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LegacyWmiObject</maml:name>
			<maml:description>
				<maml:para>By default, the function uses the newer &quot;CIM cmdlets&quot; to do the conversion, and
a CimInstance object is returned. Using this switch makes the function use the 
older &quot;WMI cmdlets&quot;, which causes a ManagementBaseObject to be returned.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>BinarySD</maml:name>
			<maml:description>
				<maml:para>A byte array containing the bianry representation of a security descriptor. 
This byte array will be converted to a Win32_SecurityDescriptor object.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Byte[]</command:parameterValue>
			<dev:type>
				<maml:name>Byte[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
	</command:returnValue>
		</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------  Example 1  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; ConvertTo-Win32SecurityDescriptor -BinarySD (Get-Acl &apos;C:\Program Files&apos;).GetSecurityDescriptorBinaryForm() -ValueOnly</dev:code>
			<dev:remarks>
				<maml:para>This example gets the binary form of the security descriptor for the 
&apos;C:\Program Files&apos; folder and converts it to a Win32_SecurityDescriptor object.
</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 2  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; (Get-SecurityDescriptor &apos;C:\Program Files&apos;).Sddl | ConvertTo-Win32SecurityDescriptor -LegacyWmiObject -ValueOnly</dev:code>
			<dev:remarks>
				<maml:para>This example gets the SDDL form of the security descriptor for the 
&apos;C:\Program Files&apos; folder and converts it to a Win32_SecurityDescriptor object.
</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>about_PowerShellAccessControl_Module</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Win32SecurityDescriptor</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>ConvertFrom-Win32SecurityDescriptor</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Disable-AclInheritance</command:name>
		<maml:description>
			<maml:para>Disables inheritance for discretionary and system ACLs on security descriptors.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Disable</command:verb>
		<command:noun>AclInheritance</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Disable-AclInheritance function disables inheritance for both discretionary 
(access) and system (auditing) access control lists. If it is called without 
the -DiscretionaryAcl and -SystemAcl switches (aliased as -Access and -Audit,
respectively), the function will behave as if the -DiscretionaryAcl switch was
provided, and the DACL inheritance will be disabled.

The function takes as input any combination of the following:
1. Security descriptors from Get-Acl
2. Security descriptors from the PowerShellAccessControl module 
   (Get-SecurityDescriptor/New-AdaptedSecurityDescriptor)
3. Certain types of objects or strings (when you pass a string or an object, 
   the function attempts to call Get-SecurityDescriptor on the input, so this 
   is technically the same as #2)

This function does the opposite of the Enable-AclInheritance function.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Disable-AclInheritance</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para>The security descriptor object whose inheritance will be disabled. This can be
a security descriptor object obtained from Get-SecurityDescriptor or
New-AdaptedSecurityDescriptor, a security descriptor object obtained from the
native Get-Acl cmdlet, or an object (or string representation of a path to an 
object) that Get-SecurityDescriptor can work with.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DiscretionaryAcl</maml:name>
				<maml:description>
					<maml:para>Causes inheritance to be changed for the discretionary ACL (access). This 
switch can be used at the same time as the -SystemAcl switch. If neither switch
is provided, the function behaves as if this switch was provided.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SystemAcl</maml:name>
				<maml:description>
					<maml:para>Causes inheritance to be changed for the system ACL (auditing). This switch can
be used at the same time as the -DiscretionaryAcl switch. If neither switch is
provided, the function behaves as if the -DiscretionaryAcl switch was provided.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the change to the security descriptor to be saved. By default, when a
security descriptor object is provided as input to the InputObject parameter, 
the in memory security descriptor is changed, and a separate function or cmdlet
call is required to save the change. Using the -Apply switch causes the change 
to be made without a separate function or cmdlet call.

If a non security descriptor object is provided as input and the -PassThru 
switch is not specified, the default behavior is to set this switch and prompt
the user before saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the modified security descriptor object. By default, this function does 
not generate any output. This parameter is useful when multiple security 
descriptor modifications need to be made in a single line (each call can be 
piped to the next one).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts 
about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PreserveExistingAces</maml:name>
				<maml:description>
					<maml:para>Converts any inherited ACEs to explicitly defined entries. If this switch isn&apos;t
provided a prompt is displayed asking for the expected behavior (unless the 
-Force switch is provided). The default behavior is to not explicitly define
any previously inherited ACEs.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Causes the function to prompt for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Disable-AclInheritance</maml:name>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to a resource whose inheritance is to be changed.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DiscretionaryAcl</maml:name>
				<maml:description>
					<maml:para>Causes inheritance to be changed for the discretionary ACL (access). This 
switch can be used at the same time as the -SystemAcl switch. If neither switch
is provided, the function behaves as if this switch was provided.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SystemAcl</maml:name>
				<maml:description>
					<maml:para>Causes inheritance to be changed for the system ACL (auditing). This switch can
be used at the same time as the -DiscretionaryAcl switch. If neither switch is
provided, the function behaves as if the -DiscretionaryAcl switch was provided.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the change to the security descriptor to be saved. By default, when a
security descriptor object is provided as input to the InputObject parameter, 
the in memory security descriptor is changed, and a separate function or cmdlet
call is required to save the change. Using the -Apply switch causes the change 
to be made without a separate function or cmdlet call.

If a non security descriptor object is provided as input and the -PassThru 
switch is not specified, the default behavior is to set this switch and prompt
the user before saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the modified security descriptor object. By default, this function does 
not generate any output. This parameter is useful when multiple security 
descriptor modifications need to be made in a single line (each call can be 
piped to the next one).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts 
about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PreserveExistingAces</maml:name>
				<maml:description>
					<maml:para>Converts any inherited ACEs to explicitly defined entries. If this switch isn&apos;t
provided a prompt is displayed asking for the expected behavior (unless the 
-Force switch is provided). The default behavior is to not explicitly define
any previously inherited ACEs.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Causes the function to prompt for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Disable-AclInheritance</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>LiteralPath</maml:name>
				<maml:description>
					<maml:para>Specifies the path to a resource whose inheritance is to be changed.

Unlike Path, the value of the LiteralPath parameter is used exactly as it is 
typed. No characters are interpreted as wildcards. If the path includes escape 
characters, enclose it in single quotation marks. Single quotation marks tell 
Windows PowerShell not to interpret any characters as escape sequences.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DiscretionaryAcl</maml:name>
				<maml:description>
					<maml:para>Causes inheritance to be changed for the discretionary ACL (access). This 
switch can be used at the same time as the -SystemAcl switch. If neither switch
is provided, the function behaves as if this switch was provided.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SystemAcl</maml:name>
				<maml:description>
					<maml:para>Causes inheritance to be changed for the system ACL (auditing). This switch can
be used at the same time as the -DiscretionaryAcl switch. If neither switch is
provided, the function behaves as if the -DiscretionaryAcl switch was provided.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the change to the security descriptor to be saved. By default, when a
security descriptor object is provided as input to the InputObject parameter, 
the in memory security descriptor is changed, and a separate function or cmdlet
call is required to save the change. Using the -Apply switch causes the change 
to be made without a separate function or cmdlet call.

If a non security descriptor object is provided as input and the -PassThru 
switch is not specified, the default behavior is to set this switch and prompt
the user before saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the modified security descriptor object. By default, this function does 
not generate any output. This parameter is useful when multiple security 
descriptor modifications need to be made in a single line (each call can be 
piped to the next one).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts 
about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PreserveExistingAces</maml:name>
				<maml:description>
					<maml:para>Converts any inherited ACEs to explicitly defined entries. If this switch isn&apos;t
provided a prompt is displayed asking for the expected behavior (unless the 
-Force switch is provided). The default behavior is to not explicitly define
any previously inherited ACEs.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Causes the function to prompt for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>InputObject</maml:name>
			<maml:description>
				<maml:para>The security descriptor object whose inheritance will be disabled. This can be
a security descriptor object obtained from Get-SecurityDescriptor or
New-AdaptedSecurityDescriptor, a security descriptor object obtained from the
native Get-Acl cmdlet, or an object (or string representation of a path to an 
object) that Get-SecurityDescriptor can work with.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DiscretionaryAcl</maml:name>
			<maml:description>
				<maml:para>Causes inheritance to be changed for the discretionary ACL (access). This 
switch can be used at the same time as the -SystemAcl switch. If neither switch
is provided, the function behaves as if this switch was provided.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>True</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SystemAcl</maml:name>
			<maml:description>
				<maml:para>Causes inheritance to be changed for the system ACL (auditing). This switch can
be used at the same time as the -DiscretionaryAcl switch. If neither switch is
provided, the function behaves as if the -DiscretionaryAcl switch was provided.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Apply</maml:name>
			<maml:description>
				<maml:para>Causes the change to the security descriptor to be saved. By default, when a
security descriptor object is provided as input to the InputObject parameter, 
the in memory security descriptor is changed, and a separate function or cmdlet
call is required to save the change. Using the -Apply switch causes the change 
to be made without a separate function or cmdlet call.

If a non security descriptor object is provided as input and the -PassThru 
switch is not specified, the default behavior is to set this switch and prompt
the user before saving the security descriptor.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Returns the modified security descriptor object. By default, this function does 
not generate any output. This parameter is useful when multiple security 
descriptor modifications need to be made in a single line (each call can be 
piped to the next one).</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts 
about saving the security descriptor.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PreserveExistingAces</maml:name>
			<maml:description>
				<maml:para>Converts any inherited ACEs to explicitly defined entries. If this switch isn&apos;t
provided a prompt is displayed asking for the expected behavior (unless the 
-Force switch is provided). The default behavior is to not explicitly define
any previously inherited ACEs.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Causes the function to prompt for confirmation before making any changes.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Specifies the path to a resource whose inheritance is to be changed.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>LiteralPath</maml:name>
			<maml:description>
				<maml:para>Specifies the path to a resource whose inheritance is to be changed.

Unlike Path, the value of the LiteralPath parameter is used exactly as it is 
typed. No characters are interpreted as wildcards. If the path includes escape 
characters, enclose it in single quotation marks. Single quotation marks tell 
Windows PowerShell not to interpret any characters as escape sequences.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
	</command:returnValue>
		</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------  Example 1  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-SecurityDescriptor HKCU:\Software\Subkey | Disable-AclInheritance -PassThru</dev:code>
			<dev:remarks>
				<maml:para>This example gets the security descriptor for the HKCU:\Software\Subkey 
registry key, then disables the discretionary ACL inheritance. Since the
-PreserveExistingAces switch was not specified, the user will be prompted about
what to do with the existing inherited ACEs. A value of $true or $false can be
provided to the switch: -PreserveExistingAces:$false
</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 2  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-Item HKCU:\Software\Subkey | Disable-AclInheritance -DiscretionaryAcl -PreserveExistingAces -PassThru</dev:code>
			<dev:remarks>
				<maml:para>This does the same thing as example #1, except a RegistryKey item is passed to 
the function through the pipeline instead of a security descriptor object. 
Also, existing inherited ACEs are converted to explicit entries since the
-PreserveExistingAces switch was specified. The -DiscretionaryAcl switch is 
supplied, but it is not necessary since it is the default behavior when neither
the -DiscretionaryAcl or -SystemAcl switches are supplied.

An alternate way to call the function is to use the -Path parameter:
PS C:\&gt; Disable-AclInheritance -Path HKCU:\Software\Subkey -Apply -Confirm</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 3  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; $Acl = Get-Acl C:\folder
PS C:\&gt; $Acl | Disable-AclInheritance -PreserveExistingAces:$false
PS C:\&gt; $Acl | Set-Acl
</dev:code>
			<dev:remarks>
				<maml:para>This is an example of using the Get-Acl and Set-Acl cmdlets, but letting the
PowerShell Access Control module&apos;s functions handle modifying the security
descriptor. Because the -PreserveExistingAces switch was specified, the user
will not be prompted to decide what to do with the existing inherited ACEs.
A value of $false was passed, so inherited ACEs will be removed from the SD.
The following single line command does the same thing, but without
relying on the Set-Acl cmdlet:

PS C:\&gt; Get-Acl C:\folder | Disable-AclInheritance -PreserveExistingAces:$false -Apply
</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>about_PowerShellAccessControl_Module</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Enable-AclInheritance</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-SecurityDescriptor</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-AdaptedSecurityDescriptor</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Acl</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-SecurityDescriptor</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Enable-AclInheritance</command:name>
		<maml:description>
			<maml:para>Enables inheritance for discretionary and system ACLs on security descriptors.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Enable</command:verb>
		<command:noun>AclInheritance</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Enabled-AclInheritance function enables inheritance for both discretionary 
(access) and system (auditing) access control lists. If it is called without 
the -DiscretionaryAcl and -SystemAcl switches (aliased as -Access and -Audit,
respectively), the function will behave as if the -DiscretionaryAcl switch was
provided, and the DACL inheritance will be enabled.

The function takes as input any combination of the following:
1. Security descriptors from Get-Acl
2. Security descriptors from the PowerShellAccessControl module 
   (Get-SecurityDescriptor/New-AdaptedSecurityDescriptor)
3. Certain types of objects or strings (when you pass a string or an object, 
   the function attempts to call Get-SecurityDescriptor on the input, so this 
   is technically the same as #2)

This function does the opposite of the Disable-AclInheritance function.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Enable-AclInheritance</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para>The security descriptor object whose inheritance will be disabled. This can be
a security descriptor object obtained from Get-SecurityDescriptor or
New-AdaptedSecurityDescriptor, a security descriptor object obtained from the
native Get-Acl cmdlet, or an object (or string representation of a path to an 
object) that Get-SecurityDescriptor can work with.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DiscretionaryAcl</maml:name>
				<maml:description>
					<maml:para>Causes inheritance to be changed for the discretionary ACL (access). This 
switch can be used at the same time as the -SystemAcl switch. If neither switch
is provided, the function behaves as if this switch was provided.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SystemAcl</maml:name>
				<maml:description>
					<maml:para>Causes inheritance to be changed for the system ACL (auditing). This switch can
be used at the same time as the -DiscretionaryAcl switch. If neither switch is
provided, the function behaves as if the -DiscretionaryAcl switch was provided.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the change to the security descriptor to be saved. By default, when a
security descriptor object is provided as input to the InputObject parameter, 
the in memory security descriptor is changed, and a separate function or cmdlet
call is required to save the change. Using the -Apply switch causes the change 
to be made without a separate function or cmdlet call.

If a non security descriptor object is provided as input and the -PassThru 
switch is not specified, the default behavior is to set this switch and prompt
the user before saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the modified security descriptor object. By default, this function does 
not generate any output. This parameter is useful when multiple security 
descriptor modifications need to be made in a single line (each call can be 
piped to the next one).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts 
about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Causes the function to prompt for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Enable-AclInheritance</maml:name>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to a resource whose inheritance is to be changed.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DiscretionaryAcl</maml:name>
				<maml:description>
					<maml:para>Causes inheritance to be changed for the discretionary ACL (access). This 
switch can be used at the same time as the -SystemAcl switch. If neither switch
is provided, the function behaves as if this switch was provided.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SystemAcl</maml:name>
				<maml:description>
					<maml:para>Causes inheritance to be changed for the system ACL (auditing). This switch can
be used at the same time as the -DiscretionaryAcl switch. If neither switch is
provided, the function behaves as if the -DiscretionaryAcl switch was provided.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the change to the security descriptor to be saved. By default, when a
security descriptor object is provided as input to the InputObject parameter, 
the in memory security descriptor is changed, and a separate function or cmdlet
call is required to save the change. Using the -Apply switch causes the change 
to be made without a separate function or cmdlet call.

If a non security descriptor object is provided as input and the -PassThru 
switch is not specified, the default behavior is to set this switch and prompt
the user before saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the modified security descriptor object. By default, this function does 
not generate any output. This parameter is useful when multiple security 
descriptor modifications need to be made in a single line (each call can be 
piped to the next one).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts 
about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Causes the function to prompt for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Enable-AclInheritance</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>LiteralPath</maml:name>
				<maml:description>
					<maml:para>Specifies the path to a resource whose inheritance is to be changed.

Unlike Path, the value of the LiteralPath parameter is used exactly as it is 
typed. No characters are interpreted as wildcards. If the path includes escape 
characters, enclose it in single quotation marks. Single quotation marks tell 
Windows PowerShell not to interpret any characters as escape sequences.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DiscretionaryAcl</maml:name>
				<maml:description>
					<maml:para>Causes inheritance to be changed for the discretionary ACL (access). This 
switch can be used at the same time as the -SystemAcl switch. If neither switch
is provided, the function behaves as if this switch was provided.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SystemAcl</maml:name>
				<maml:description>
					<maml:para>Causes inheritance to be changed for the system ACL (auditing). This switch can
be used at the same time as the -DiscretionaryAcl switch. If neither switch is
provided, the function behaves as if the -DiscretionaryAcl switch was provided.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the change to the security descriptor to be saved. By default, when a
security descriptor object is provided as input to the InputObject parameter, 
the in memory security descriptor is changed, and a separate function or cmdlet
call is required to save the change. Using the -Apply switch causes the change 
to be made without a separate function or cmdlet call.

If a non security descriptor object is provided as input and the -PassThru 
switch is not specified, the default behavior is to set this switch and prompt
the user before saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the modified security descriptor object. By default, this function does 
not generate any output. This parameter is useful when multiple security 
descriptor modifications need to be made in a single line (each call can be 
piped to the next one).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts 
about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Causes the function to prompt for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>InputObject</maml:name>
			<maml:description>
				<maml:para>The security descriptor object whose inheritance will be disabled. This can be
a security descriptor object obtained from Get-SecurityDescriptor or
New-AdaptedSecurityDescriptor, a security descriptor object obtained from the
native Get-Acl cmdlet, or an object (or string representation of a path to an 
object) that Get-SecurityDescriptor can work with.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DiscretionaryAcl</maml:name>
			<maml:description>
				<maml:para>Causes inheritance to be changed for the discretionary ACL (access). This 
switch can be used at the same time as the -SystemAcl switch. If neither switch
is provided, the function behaves as if this switch was provided.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SystemAcl</maml:name>
			<maml:description>
				<maml:para>Causes inheritance to be changed for the system ACL (auditing). This switch can
be used at the same time as the -DiscretionaryAcl switch. If neither switch is
provided, the function behaves as if the -DiscretionaryAcl switch was provided.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Apply</maml:name>
			<maml:description>
				<maml:para>Causes the change to the security descriptor to be saved. By default, when a
security descriptor object is provided as input to the InputObject parameter, 
the in memory security descriptor is changed, and a separate function or cmdlet
call is required to save the change. Using the -Apply switch causes the change 
to be made without a separate function or cmdlet call.

If a non security descriptor object is provided as input and the -PassThru 
switch is not specified, the default behavior is to set this switch and prompt
the user before saving the security descriptor.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Returns the modified security descriptor object. By default, this function does 
not generate any output. This parameter is useful when multiple security 
descriptor modifications need to be made in a single line (each call can be 
piped to the next one).</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts 
about saving the security descriptor.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Causes the function to prompt for confirmation before making any changes.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Specifies the path to a resource whose inheritance is to be changed.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>LiteralPath</maml:name>
			<maml:description>
				<maml:para>Specifies the path to a resource whose inheritance is to be changed.

Unlike Path, the value of the LiteralPath parameter is used exactly as it is 
typed. No characters are interpreted as wildcards. If the path includes escape 
characters, enclose it in single quotation marks. Single quotation marks tell 
Windows PowerShell not to interpret any characters as escape sequences.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
	</command:returnValue>
		</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------  Example 1  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-SecurityDescriptor HKCU:\Software\Subkey | Enable-AclInheritance -PassThru</dev:code>
			<dev:remarks>
				<maml:para>This example gets the security descriptor for the HKCU:\Software\Subkey 
registry key, then enables the discretionary ACL inheritance.
</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 2  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-Item HKCU:\Software\Subkey | Enable-AclInheritance -DiscretionaryAcl -PassThru</dev:code>
			<dev:remarks>
				<maml:para>This does the same thing as example #1, except a RegistryKey item is passed to 
the function through the pipeline instead of a security descriptor object. The 
-DiscretionaryAcl switch is supplied, but it is not necessary since it is the 
default behavior when neither the -DiscretionaryAcl or -SystemAcl switches are 
supplied.
</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 3  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Enable-AclInheritance -Path HKCU:\Software\Subkey -Apply -Confirm</dev:code>
			<dev:remarks>
				<maml:para>This does the same as example #1, except the path is passed through the -Path 
parameter instead of getting the security descriptor and passing it through 
the pipeline. Also, the updated security descriptor will be saved without 
having to call Set-SecurityDescriptor (if the confirmation prompts are 
answered).
</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 4  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; dir C:\folder -recurse | 
    Get-SecurityDescriptor -Audit | 
    Remove-AccessControlEntry -RemoveAllAccessEntries -RemoveAllAuditEntries -PassThru | 
    Enable-AclInheritance -DiscretionaryAcl -SystemAcl -PassThru | 
    Set-SecurityDescriptor
</dev:code>
			<dev:remarks>
				<maml:para>This will reset the security descriptors for all files and folders under the 
C:\folder folder. All explicitly defined discretionary and system ACEs will be 
removed, and any entries that apply to child containers and objects from 
C:\folder are propagated to child containers and objects.
</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 5  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; $Acl = Get-Acl C:\folder
PS C:\&gt; $Acl | Enable-AclInheritance
PS C:\&gt; $Acl | Set-Acl
</dev:code>
			<dev:remarks>
				<maml:para>This is an example of using the Get-Acl and Set-Acl cmdlets, but letting the
PowerShell Access Control module&apos;s functions handle modifying the security
descriptor. The following single line command does the same thing, but without
relying on the Set-Acl cmdlet:

PS C:\&gt; Get-Acl C:\folder | Enable-AclInheritance -Apply
</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>about_PowerShellAccessControl_Module</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Disable-AclInheritance</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-SecurityDescriptor</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-AdaptedSecurityDescriptor</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Acl</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-SecurityDescriptor</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Get-AccessControlEntry</command:name>
		<maml:description>
			<maml:para>Extracts access control entries found in security descriptor access control lists.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>AccessControlEntry</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>Get-AccessControlEntry is designed to extract access control entries (ACEs) 
from the access control lists (ACLs) of security descriptors (SDs). By default,
it will show ACEs from discretionary ACLs (which deal with allow and deny 
access rules) and ACEs from system ACLs (which deal with auditing rules).

Get-AccessControlEntry can be used with the following types of security 
descriptors (see the examples section for more information):
1. Security descriptors from Get-Acl
2. Security descriptors from the PowerShellAccessControl module 
   (Get-SecurityDescriptor/New-AdaptedSecurityDescriptor)
3. Certain types of objects or strings (when you pass a string or an object, 
   the function attempts to call Get-SecurityDescriptor on the input, so this 
   is technically the same as #2)
4. Win32_SecurityDescriptor WMI objects

Most of the functions parameters are shared with the New-AccessControlEntry
function and are used to filter only requested ACEs. The filtering parameters
can take arrays, and can be combined with other parameters to build complex
filtering conditions.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-AccessControlEntry</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="0">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para>Specifies the security descriptor that will have an access control entry added 
to it.

This parameter can be any combination of one or more of the following objects: 
1. A security descriptor object obtained through the Get-Acl cmdlet
2. A security descriptor object obtained through the Get-SecurityDescriptor or 
   New-AdaptedSecurityDescriptor functions
3. An object (including a path string) that the Get-SecurityDescriptor function 
   knows how to handle.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Audit</maml:name>
				<maml:description>
					<maml:para>A switch parameter that ensures that the security descriptor obtained from the
-InputObject parameter also includes the object&apos;s system access control list 
(SACL). This requires administrator privileges in most configurations. 

If the -InputObject contains a property named &apos;Audit&apos;, this switch parameter
is automatically set. To suppress this behavior, $false can be passed to the 
switch parameter, e.g., -Audit:$false.

If the -InputObject is already a security descriptor, this parameter is
ignored, i.e., it is only used when the -InputObject is used to get the
security descriptor, not when the security descriptor has been supplied.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Inherited</maml:name>
				<maml:description>
					<maml:para>When this switch is used, only inherited ACEs will be returned.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>NotInherited</maml:name>
				<maml:description>
					<maml:para>When this switch is used, only explicitly defined, i.e., not 
inherited, ACEs will be returned.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Specific</maml:name>
				<maml:description>
					<maml:para>A switch parameter that changes the behavior of most of the filtering 
conditions provided to the Get-AccessControlEntry function.

When this switch is specified, the following behaviors change:
- Access masks (including any of the access mask enumerations, e.g., FileRights
  RegistryRights, ServiceAccessRights, etc) must match exactly. By default,
  a -FileRights value of &apos;Read&apos; would match an ACE with an access mask of
  &apos;Modify&apos; because &apos;Read&apos; is a right that &apos;Modify&apos; contains. When -Specific is
  specified, though, matching ACEs would have to have the exact value of &apos;Read&apos;
- Non access mask enumerations behave the same as access masks (they are, after 
  all, converted to numeric values)
- When -ObjectAceType and/or -InheritedObjectAceType parameters are specified,
  the default behavior of the function is to still return ACEs that don&apos;t
  include ObjectAceTypes or InheritedObjectAceTypes if the returned ACEs still
  technically meet the condition specified. For example, specifying an
  -ObjectAceType that applies to a property would allow any ACE that allows
  reading or writing of &apos;All Properties&apos; would still be returned. If the
  -Specific switch is specified, though, the returned ACEs would be required
  to have an ObjectAceType.
</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
				<maml:name>ObjectAceType</maml:name>
				<maml:description>
					<maml:para>Specifies a property, property set, extended right, validated write, or class 
object that matching ACEs must contain. 

The parameter takes a string, a GUID (which can also be a string), or the 
output from the Get-ADObjectAceGuid function. If a string or GUID is provided, 
the Get-ADObjectAceGuid function is called internally.

If the -Specific switch is not specified, matching ACEs might not contain an
ObjectAceType. For example, if the &apos;Password-Reset&apos; extended right was 
provided, ACEs that allow &apos;All Extended Rights&apos; (ACEs that provide the 
&apos;Extended Right&apos; permission without an ObjectAceType) would be returned. When
the -Specific switch is provided with this parameter, all matching ACEs must
contain an ObjectAceType.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">Object[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
				<maml:name>InheritedObjectAceType</maml:name>
				<maml:description>
					<maml:para>Specifies a class object that matching ACEs must apply to.

The parameter takes a string, a GUID (which can also be a string), or the 
output from the Get-ADObjectAceGuid function. If a string or GUID is provided, 
the Get-ADObjectAceGuid function is called internally.

If the -Specific switch is not specified, matching ACEs might not contain an
InheritedObjectAceType. For example, if the &apos;user&apos; object was provided as
input, ACEs that have no InheritedObjectAceType would be returned since those
ACEs would apply to all objects. If the -Specific switch is specified, though,
all matching ACEs would have to have an InheritedObjectAceType property, and
they would have to be one of the inputs to the -InheritedObjectAce parameter.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">Object[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuditFlags</maml:name>
				<maml:description>
					<maml:para>Enumeration that specifies the type of audit to filter on. Valid values are 
None, Success, and Failure. More than one value can be supplied at a time.

If the -Specific switch isn&apos;t specified, exact matches aren&apos;t required. For
example, specifying a value of &apos;Success&apos; would match an ACE that had an
AuditFlags value of &apos;Success, Failure&apos;. If the -Specific switch is specified,
though, the previous example would require all ACEs to have the exact 
AuditFlags value of &apos;Success&apos; to be returned.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AuditFlags</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AceType</maml:name>
				<maml:description>
					<maml:para>Specifies the type of ACEs to be returned. Valid values are AccessAllowed, 
AccessDenied, and SystemAudit. More than one value can be provided.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>One or more principals that matching ACEs must contain. This can be a string 
representing a user, group, or SID. It can also be a 
[System.Security.Principal.NTAccount] or a 
[System.Security.Principal.SecurityIdentifier] object. Wildcards are also
permitted.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>FileRights</maml:name>
				<maml:description>
					<maml:para>The same as -AccessMask, except with a file system specific enumeration.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">FileSystemRights</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>FolderRights</maml:name>
				<maml:description>
					<maml:para>The same as -AccessMask, except with a file system specific enumeration.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">FileSystemRights</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>RegistryRights</maml:name>
				<maml:description>
					<maml:para>The same as -AccessMask, except with a registry specific enumeration.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">RegistryRights</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ActiveDirectoryRights</maml:name>
				<maml:description>
					<maml:para>The same as -AccessMask, except with an Active Directory specific enumeration.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ActiveDirectoryRights</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LogicalShareRights</maml:name>
				<maml:description>
					<maml:para>The same as -AccessMask, except with a share specific enumeration.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">LogicalShareRights</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PrinterRights</maml:name>
				<maml:description>
					<maml:para>The same as -AccessMask, except with a printer specific enumeration.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PrinterRights</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WmiNameSpaceRights</maml:name>
				<maml:description>
					<maml:para>The same as -AccessMask, except with a WMI specific enumeration.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">WmiNamespaceRights</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WsManAccessRights</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">WsManAccessRights</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ServiceAccessRights</maml:name>
				<maml:description>
					<maml:para>The same as -AccessMask, except with a service specific enumeration.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ServiceAccessRights</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ProcessAccessRights</maml:name>
				<maml:description>
					<maml:para>The same as -AccessMask, except with a process specific enumeration.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ProcessAccessRights</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccessMask</maml:name>
				<maml:description>
					<maml:para>Specifies the numeric access rights that all returned ACEs must contain. This 
function has several accessmask enumerations that it will take as input, but 
they all are converted to their numeric values.

If the -Specific switch isn&apos;t specified, matching access masks do not need to
exactly match the -AccessMask parameter. For example, if an -AccessMask of
131209 (numeric equivalent of -FileRights Read) is provided, an ACE with an
AccessMask of 197055 (numeric equivalent of -FileRights Modify) would match
that condition since 131209 is completely contained in 197055 (197055 -band
131209 is equal to 131209). If the -Specific switch is specified, though,
the -AccessMask provided would have to exactly match the access mask on an
ACE for the condition to be met.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>An enumeration that specifies where the returned ACEs apply. Valid values are
Object, ChildContainers, and ChildObjects.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OnlyApplyToThisContainer</maml:name>
				<maml:description>
					<maml:para>A switch that specifies whether or not returned ACEs must have the 
NoPropagateInherit propagation flag set.
</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="0">
			<maml:name>InputObject</maml:name>
			<maml:description>
				<maml:para>Specifies the security descriptor that will have an access control entry added 
to it.

This parameter can be any combination of one or more of the following objects: 
1. A security descriptor object obtained through the Get-Acl cmdlet
2. A security descriptor object obtained through the Get-SecurityDescriptor or 
   New-AdaptedSecurityDescriptor functions
3. An object (including a path string) that the Get-SecurityDescriptor function 
   knows how to handle.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Audit</maml:name>
			<maml:description>
				<maml:para>A switch parameter that ensures that the security descriptor obtained from the
-InputObject parameter also includes the object&apos;s system access control list 
(SACL). This requires administrator privileges in most configurations. 

If the -InputObject contains a property named &apos;Audit&apos;, this switch parameter
is automatically set. To suppress this behavior, $false can be passed to the 
switch parameter, e.g., -Audit:$false.

If the -InputObject is already a security descriptor, this parameter is
ignored, i.e., it is only used when the -InputObject is used to get the
security descriptor, not when the security descriptor has been supplied.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Inherited</maml:name>
			<maml:description>
				<maml:para>When this switch is used, only inherited ACEs will be returned.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NotInherited</maml:name>
			<maml:description>
				<maml:para>When this switch is used, only explicitly defined, i.e., not 
inherited, ACEs will be returned.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Specific</maml:name>
			<maml:description>
				<maml:para>A switch parameter that changes the behavior of most of the filtering 
conditions provided to the Get-AccessControlEntry function.

When this switch is specified, the following behaviors change:
- Access masks (including any of the access mask enumerations, e.g., FileRights
  RegistryRights, ServiceAccessRights, etc) must match exactly. By default,
  a -FileRights value of &apos;Read&apos; would match an ACE with an access mask of
  &apos;Modify&apos; because &apos;Read&apos; is a right that &apos;Modify&apos; contains. When -Specific is
  specified, though, matching ACEs would have to have the exact value of &apos;Read&apos;
- Non access mask enumerations behave the same as access masks (they are, after 
  all, converted to numeric values)
- When -ObjectAceType and/or -InheritedObjectAceType parameters are specified,
  the default behavior of the function is to still return ACEs that don&apos;t
  include ObjectAceTypes or InheritedObjectAceTypes if the returned ACEs still
  technically meet the condition specified. For example, specifying an
  -ObjectAceType that applies to a property would allow any ACE that allows
  reading or writing of &apos;All Properties&apos; would still be returned. If the
  -Specific switch is specified, though, the returned ACEs would be required
  to have an ObjectAceType.
</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>ObjectAceType</maml:name>
			<maml:description>
				<maml:para>Specifies a property, property set, extended right, validated write, or class 
object that matching ACEs must contain. 

The parameter takes a string, a GUID (which can also be a string), or the 
output from the Get-ADObjectAceGuid function. If a string or GUID is provided, 
the Get-ADObjectAceGuid function is called internally.

If the -Specific switch is not specified, matching ACEs might not contain an
ObjectAceType. For example, if the &apos;Password-Reset&apos; extended right was 
provided, ACEs that allow &apos;All Extended Rights&apos; (ACEs that provide the 
&apos;Extended Right&apos; permission without an ObjectAceType) would be returned. When
the -Specific switch is provided with this parameter, all matching ACEs must
contain an ObjectAceType.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Object[]</command:parameterValue>
			<dev:type>
				<maml:name>Object[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>InheritedObjectAceType</maml:name>
			<maml:description>
				<maml:para>Specifies a class object that matching ACEs must apply to.

The parameter takes a string, a GUID (which can also be a string), or the 
output from the Get-ADObjectAceGuid function. If a string or GUID is provided, 
the Get-ADObjectAceGuid function is called internally.

If the -Specific switch is not specified, matching ACEs might not contain an
InheritedObjectAceType. For example, if the &apos;user&apos; object was provided as
input, ACEs that have no InheritedObjectAceType would be returned since those
ACEs would apply to all objects. If the -Specific switch is specified, though,
all matching ACEs would have to have an InheritedObjectAceType property, and
they would have to be one of the inputs to the -InheritedObjectAce parameter.
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Object[]</command:parameterValue>
			<dev:type>
				<maml:name>Object[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuditFlags</maml:name>
			<maml:description>
				<maml:para>Enumeration that specifies the type of audit to filter on. Valid values are 
None, Success, and Failure. More than one value can be supplied at a time.

If the -Specific switch isn&apos;t specified, exact matches aren&apos;t required. For
example, specifying a value of &apos;Success&apos; would match an ACE that had an
AuditFlags value of &apos;Success, Failure&apos;. If the -Specific switch is specified,
though, the previous example would require all ACEs to have the exact 
AuditFlags value of &apos;Success&apos; to be returned.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">AuditFlags</command:parameterValue>
			<dev:type>
				<maml:name>AuditFlags</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>AceType</maml:name>
			<maml:description>
				<maml:para>Specifies the type of ACEs to be returned. Valid values are AccessAllowed, 
AccessDenied, and SystemAudit. More than one value can be provided.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Principal</maml:name>
			<maml:description>
				<maml:para>One or more principals that matching ACEs must contain. This can be a string 
representing a user, group, or SID. It can also be a 
[System.Security.Principal.NTAccount] or a 
[System.Security.Principal.SecurityIdentifier] object. Wildcards are also
permitted.
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FileRights</maml:name>
			<maml:description>
				<maml:para>The same as -AccessMask, except with a file system specific enumeration.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">FileSystemRights</command:parameterValue>
			<dev:type>
				<maml:name>FileSystemRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FolderRights</maml:name>
			<maml:description>
				<maml:para>The same as -AccessMask, except with a file system specific enumeration.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">FileSystemRights</command:parameterValue>
			<dev:type>
				<maml:name>FileSystemRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RegistryRights</maml:name>
			<maml:description>
				<maml:para>The same as -AccessMask, except with a registry specific enumeration.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">RegistryRights</command:parameterValue>
			<dev:type>
				<maml:name>RegistryRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ActiveDirectoryRights</maml:name>
			<maml:description>
				<maml:para>The same as -AccessMask, except with an Active Directory specific enumeration.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ActiveDirectoryRights</command:parameterValue>
			<dev:type>
				<maml:name>ActiveDirectoryRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LogicalShareRights</maml:name>
			<maml:description>
				<maml:para>The same as -AccessMask, except with a share specific enumeration.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">LogicalShareRights</command:parameterValue>
			<dev:type>
				<maml:name>LogicalShareRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PrinterRights</maml:name>
			<maml:description>
				<maml:para>The same as -AccessMask, except with a printer specific enumeration.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PrinterRights</command:parameterValue>
			<dev:type>
				<maml:name>PrinterRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WmiNameSpaceRights</maml:name>
			<maml:description>
				<maml:para>The same as -AccessMask, except with a WMI specific enumeration.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">WmiNamespaceRights</command:parameterValue>
			<dev:type>
				<maml:name>WmiNamespaceRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WsManAccessRights</maml:name>
			<maml:description>
				<maml:para></maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">WsManAccessRights</command:parameterValue>
			<dev:type>
				<maml:name>WsManAccessRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ServiceAccessRights</maml:name>
			<maml:description>
				<maml:para>The same as -AccessMask, except with a service specific enumeration.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ServiceAccessRights</command:parameterValue>
			<dev:type>
				<maml:name>ServiceAccessRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ProcessAccessRights</maml:name>
			<maml:description>
				<maml:para>The same as -AccessMask, except with a process specific enumeration.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ProcessAccessRights</command:parameterValue>
			<dev:type>
				<maml:name>ProcessAccessRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccessMask</maml:name>
			<maml:description>
				<maml:para>Specifies the numeric access rights that all returned ACEs must contain. This 
function has several accessmask enumerations that it will take as input, but 
they all are converted to their numeric values.

If the -Specific switch isn&apos;t specified, matching access masks do not need to
exactly match the -AccessMask parameter. For example, if an -AccessMask of
131209 (numeric equivalent of -FileRights Read) is provided, an ACE with an
AccessMask of 197055 (numeric equivalent of -FileRights Modify) would match
that condition since 131209 is completely contained in 197055 (197055 -band
131209 is equal to 131209). If the -Specific switch is specified, though,
the -AccessMask provided would have to exactly match the access mask on an
ACE for the condition to be met.
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AppliesTo</maml:name>
			<maml:description>
				<maml:para>An enumeration that specifies where the returned ACEs apply. Valid values are
Object, ChildContainers, and ChildObjects.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			<dev:type>
				<maml:name>AppliesTo</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OnlyApplyToThisContainer</maml:name>
			<maml:description>
				<maml:para>A switch that specifies whether or not returned ACEs must have the 
NoPropagateInherit propagation flag set.
</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
	</command:returnValue>
		</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------  Example 1  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-Acl C:\Windows | Get-AccessControlEntry</dev:code>
			<dev:remarks>
				<maml:para>This will display all discretionary ACEs for the C:\Windows folder. To also 
list the system ACEs, the -Audit switch could be provided to the Get-Acl 
command. 

Get-Acl isn&apos;t required to view the ACEs for C:\Windows. The following 
commands produce identical results:

PS C:\&gt; Get-SecurityDescriptor C:\Windows | Get-AccessControlEntry
PS C:\&gt; Get-AccessControlEntry C:\Windows
PS C:\&gt; &quot;C:\Windows&quot; | Get-AccessControlEntry
PS C:\&gt; Get-Item C:\Windows | Get-AccessControlEntry
PS C:\&gt; $Acl = Get-Acl C:\Windows; $Acl | Get-AccessControlEntry

To have system ACEs also returned, the -Audit switch can be provided to the
previous commands:

PS C:\&gt; Get-SecurityDescriptor C:\Windows -Audit | Get-AccessControlEntry
PS C:\&gt; Get-AccessControlEntry C:\Windows -Audit
PS C:\&gt; &quot;C:\Windows&quot; | Get-AccessControlEntry -Audit
PS C:\&gt; Get-Item C:\Windows | Get-AccessControlEntry -Audit
PS C:\&gt; $Acl = Get-Acl C:\Windows -Audit; $Acl | Get-AccessControlEntry</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 2  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-AccessControlEntry HKLM:\Software, C:\Windows, (Get-Service bits)</dev:code>
			<dev:remarks>
				<maml:para>This example shows that Get-AccessControlEntry can take multiple objects, and
the object types don&apos;t have to match. The previous command would list all
discretionary ACEs for the specified registry key, folder, and service.

The inputs could have been piped into the function, too, either as strings or
objects from Get-Item (the service was already an object).</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 3  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-Service | select -First 5 | 
    Get-AccessControlEntry -ServiceAccessRights Start, Stop</dev:code>
			<dev:remarks>
				<maml:para>This example gets the first five services returned from Get-Service and lists
the ACEs that include Start and Stop access rights. Since the -Specific switch
wasn&apos;t specified, ACEs with access rights that include more than Start and Stop
are also returned, e.g., ACEs with FullControl rights will be returned, too.

There is no limit to the number of filtering parameters that can be used. The
following command adds on to the previous command, but it only includes ACEs
that have a principal that contains the word &apos;Users&apos; and the &apos;Everyone&apos; group:

PS C:\&gt; Get-Service | 
    Get-AccessControlEntry -ServiceAccessRights Start, Stop -Principal *Users*, Everyone</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 4  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; dir C:\powershell -Recurse | 
    Get-AccessControlEntry -Audit -NotInherited -AceType SystemAudit -AuditFlags Failure -Specific</dev:code>
			<dev:remarks>
				<maml:para>This example recursively checks all subfolders and files of a directory called
&apos;C:\powershell&apos;. The function is being called with the -Audit switch, so the
SACL of each file or folder will be obtained. The function is also filtering
the returned ACEs so that only explicitly defined audit ACEs that are only
auditing failures will be returned. ACEs that are set to audit failures and
successes will not be returned because the -Specific switch was used. Without
that switch, those ACEs would be returned.</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 5  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-WmiObject Win32_Share | Get-AccessControlEntry -ErrorAction SilentlyContinue</dev:code>
			<dev:remarks>
				<maml:para>This will list the share permissions for all shares on the local computer. You
could also use the -ComputerName parameter on the Get-WmiObject cmdlet to view
the share permissions for a remote computer.

To view the NTFS permissions of the share, the command can be modified so
that the object being piped into Get-AccessControlEntry isn&apos;t a Win32_Share
object. Either of these commands should show the NTFS permissions:

PS C:\&gt; Get-WmiObject Win32_Share | select Path | Get-AccessControlEntry -ErrorAction SilentlyContinue
PS C:\&gt; Get-WmiObject Win32_Share | select -ExpandProperty Path | Get-AccessControlEntry -ErrorAction SilentlyContinue</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 6  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-SecurityDescriptor \\$env:COMPUTERNAME -ObjectType Printer | Get-AccessControlEntry</dev:code>
			<dev:remarks>
				<maml:para>Get-AccessControlEntry can&apos;t get every type of security descriptor. Calling
Get-SecurityDescriptor first gives you more control over the SD to retrieve.
This example gets the print server SD for the local computer.</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 7  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; $SD = Get-ADUser $env:username | Get-SecurityDescriptor
PS C:\&gt; $SD | Get-AccessControlEntry
</dev:code>
			<dev:remarks>
				<maml:para>This example requires the ActiveDirectory module as written. If you do not have 
this module, you can still use either an [adsi] object, or a string 
representation of the distinguished name for your user object. Simply pass 
either of those to the Get-SecurityDescriptor or Get-AccessControlEntry 
functions.
    
The previous command will show all discretionary ACEs for the current user&apos;s
AD user object. AD objects generally have much larger ACLs than other securable
objects, so there should be several ACEs returned.
    
Get-AccessControlEntry can be used to filter the returned ACEs. Here are some
examples of filtering:

PS C:\&gt; $SD | Get-AccessControlEntry -Principal *Admin*,Self, *Users

That will show ACEs that apply to principals that contain the work &apos;Admin&apos;, the
&apos;Self&apos; principal, and/or principals that end in &apos;Users&apos;.

PS C:\&gt; $SD | Get-AccessControlEntry -ObjectAceType (Get-ADObjectAceGuid -Name * -TypesToSearch ExtendedRight)

This will show only ACEs that apply to extended rights. That includes ACEs that
apply to specific extended rights and &apos;All Extended Rights&apos;. To only show ACEs 
that apply to specific extended rights (not &apos;All Extended Rights&apos;), include the 
-Specific switch.

NOTE: The Get-AccessControlEntry function builds a custom filtering script
      block based on the filtering parameters. Because of the design, filtering
      using the Get-ADObjectAceGuid function as input to -ObjectAceType is not
      recommended. It is recommended to supply one or more GUIDs or strings 
      (wildcards are allowed). This example wouldn&apos;t work if the -TypesToSearch
      included &apos;Propery&apos; or &apos;ClassObject&apos; because the filtering script block
      would be too large.

PS C:\&gt; $SD | Get-AccessControlEntry -ObjectAceType 00299570-246d-11d0-a768-00aa006e0529,Change-Password -InheritedObjectAceType user
PS C:\&gt; $SD | Get-AccessControlEntry -ObjectAceType 00299570-246d-11d0-a768-00aa006e0529,Change-Password -InheritedObjectAceType user -Specific

Those examples will show ACEs that deal with the Reset-Password extended right
(the GUID that&apos;s being passed to -ObjectAceType) and the Change-Password 
extended right (technically, it will match on any -ObjectAceType that has a 
friendly name of &apos;Change-Password&apos; since a string was provided) and that apply
to &apos;user&apos; objects. The first one will return ACEs that apply to all objects
(because all objects includes &apos;user&apos; objects) and &apos;All Extended Rights&apos;,
FullControl, or any other access mask that includes access to extended rights
without a specific ObjectAceType. The second one (with the -Specific switch),
will exclude ACEs that apply to all objects (the ACE MUST apply only to &apos;user&apos;
objects) and ACEs that don&apos;t have an ObjectAceType (so FullControl, etc ACEs
will not be included in the results).

PS C:\&gt; $SD | Get-AccessControlEntry -ObjectAceType &quot;(Change|Reset)-Password&quot;

Returns ACEs with an ObjectAceType of Change-Password or Reset-Password, or
that have an access mask that allow &apos;Perform All Extended Rights&apos;. It&apos;s an
example of using a regular expression as the input to -ObjectAceType.
</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 8  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Invoke-CimMethod -ClassName __SystemSecurity -MethodName GetSecurityDescriptor | 
    select -exp Descriptor | 
    Get-AccessControlEntry
</dev:code>
			<dev:remarks>
				<maml:para>This gets a Win32_SecurityDescriptor (technically a __SecurityDescriptor) WMI
object for the root/CIMV2 WMI namespace, and the raw WMI object is passed to
Get-AccessControlEntry. Unfortunately, the results will not show a descriptive
display  name or access masks (all access masks will be numeric).
</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>about_PowerShellAccessControl_Module</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-SecurityDescriptor</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Acl</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Get-ADObjectAceGuid</command:name>
		<maml:description>
			<maml:para>Used to lookup the names and/or GUIDs of Active Directory extended rights, 
properties, property sets, validated writes, and object classes.
</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADObjectAceGuid</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Get-ADObjectAceGuid function is used to lookup the names and/or GUIDs of 
Active Directory extended rights, properties, property sets, validated writes, 
and object classes. Active Directory access control lists (ACLs) can have 
object access control entries (ACEs) that deal with these special types, and 
this function can be used to create or decode those ACEs.

New-AccessControlEntry, Add-AccessControlEntry, Remove-AccessControlEntry, and
Get-AccessControlEntry will call this function internally when a string is 
provided to the -ObjectAceType or -InheritedObjectAceType properties (the &apos;*&apos; 
wildcard is allowed).

This function can also be called directly, and in PowerShell version 3 or
higher, IntelliSense will help get a single GUID. Type the following command
in the version 3 or higher ISE, and notice the autocompletion:

Get-ADObjectAceGuid -ExtendedRight 

NOTE: This function must be run from a computer that is joined to a domain.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADObjectAceGuid</maml:name>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>TypesToSearch</maml:name>
				<maml:description>
					<maml:para>This parameter allows the ObjectAceType search to be limited to certain types. 
By default, all types will be searched by the -Name or -Guid provided.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="false" position="0">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>The friendly name of an ObjectAceType to lookup. Wildcards (*) are allowed.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADObjectAceGuid</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Guid</maml:name>
				<maml:description>
					<maml:para>The GUID of an ObjectAceType to lookup.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Guid</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>TypesToSearch</maml:name>
				<maml:description>
					<maml:para>This parameter allows the ObjectAceType search to be limited to certain types. 
By default, all types will be searched by the -Name or -Guid provided.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="false" position="0">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>The friendly name of an ObjectAceType to lookup. Wildcards (*) are allowed.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADObjectAceGuid</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ExtendedRight</maml:name>
				<maml:description>
					<maml:para>A switch parameter that will cause the dynamic -Name parameter to only take
valid extended rights. When used in PowerShell version 3 or higher, tab
completion and/or IntelliSense makes this very useful. Typing this at the
command line should allow tab completion or IntelliSense to kick in (the
pipe symbol represents where the cursor should be):

Get-ADObjectAceGuid -ExtendedRight |
</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="false" position="0">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>The friendly name of an ObjectAceType to lookup. Wildcards (*) are allowed.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADObjectAceGuid</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ValidatedWrite</maml:name>
				<maml:description>
					<maml:para>A switch parameter that will cause the dynamic -Name parameter to only take
valid validated writes. When used in PowerShell version 3 or higher, tab
completion and/or IntelliSense makes this very useful. Typing this at the
command line should allow tab completion or IntelliSense to kick in (the
pipe symbol represents where the cursor should be):

Get-ADObjectAceGuid -ValidatedWrite |
</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="false" position="0">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>The friendly name of an ObjectAceType to lookup. Wildcards (*) are allowed.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADObjectAceGuid</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Property</maml:name>
				<maml:description>
					<maml:para>A switch parameter that will cause the dynamic -Name parameter to only take
valid property names. When used in PowerShell version 3 or higher, tab
completion and/or IntelliSense makes this very useful. Typing this at the
command line should allow tab completion or IntelliSense to kick in (the
pipe symbol represents where the cursor should be):

Get-ADObjectAceGuid -Property |
</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="false" position="0">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>The friendly name of an ObjectAceType to lookup. Wildcards (*) are allowed.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADObjectAceGuid</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PropertySet</maml:name>
				<maml:description>
					<maml:para>A switch parameter that will cause the dynamic -Name parameter to only take
valid property set names. When used in PowerShell version 3 or higher, tab
completion and/or IntelliSense makes this very useful. Typing this at the
command line should allow tab completion or IntelliSense to kick in (the
pipe symbol represents where the cursor should be):

Get-ADObjectAceGuid -PropertySet |
</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="false" position="0">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>The friendly name of an ObjectAceType to lookup. Wildcards (*) are allowed.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADObjectAceGuid</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ClassObject</maml:name>
				<maml:description>
					<maml:para>A switch parameter that will cause the dynamic -Name parameter to only take
valid class object names. When used in PowerShell version 3 or higher, tab
completion and/or IntelliSense makes this very useful. Typing this at the
command line should allow tab completion or IntelliSense to kick in (the
pipe symbol represents where the cursor should be):

Get-ADObjectAceGuid -ClassObject |
</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="false" position="0">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>The friendly name of an ObjectAceType to lookup. Wildcards (*) are allowed.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>TypesToSearch</maml:name>
			<maml:description>
				<maml:para>This parameter allows the ObjectAceType search to be limited to certain types. 
By default, all types will be searched by the -Name or -Guid provided.
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="true" pipelineInput="false" position="0">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>The friendly name of an ObjectAceType to lookup. Wildcards (*) are allowed.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Guid</maml:name>
			<maml:description>
				<maml:para>The GUID of an ObjectAceType to lookup.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Guid</command:parameterValue>
			<dev:type>
				<maml:name>Guid</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ExtendedRight</maml:name>
			<maml:description>
				<maml:para>A switch parameter that will cause the dynamic -Name parameter to only take
valid extended rights. When used in PowerShell version 3 or higher, tab
completion and/or IntelliSense makes this very useful. Typing this at the
command line should allow tab completion or IntelliSense to kick in (the
pipe symbol represents where the cursor should be):

Get-ADObjectAceGuid -ExtendedRight |
</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ValidatedWrite</maml:name>
			<maml:description>
				<maml:para>A switch parameter that will cause the dynamic -Name parameter to only take
valid validated writes. When used in PowerShell version 3 or higher, tab
completion and/or IntelliSense makes this very useful. Typing this at the
command line should allow tab completion or IntelliSense to kick in (the
pipe symbol represents where the cursor should be):

Get-ADObjectAceGuid -ValidatedWrite |
</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Property</maml:name>
			<maml:description>
				<maml:para>A switch parameter that will cause the dynamic -Name parameter to only take
valid property names. When used in PowerShell version 3 or higher, tab
completion and/or IntelliSense makes this very useful. Typing this at the
command line should allow tab completion or IntelliSense to kick in (the
pipe symbol represents where the cursor should be):

Get-ADObjectAceGuid -Property |
</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PropertySet</maml:name>
			<maml:description>
				<maml:para>A switch parameter that will cause the dynamic -Name parameter to only take
valid property set names. When used in PowerShell version 3 or higher, tab
completion and/or IntelliSense makes this very useful. Typing this at the
command line should allow tab completion or IntelliSense to kick in (the
pipe symbol represents where the cursor should be):

Get-ADObjectAceGuid -PropertySet |
</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ClassObject</maml:name>
			<maml:description>
				<maml:para>A switch parameter that will cause the dynamic -Name parameter to only take
valid class object names. When used in PowerShell version 3 or higher, tab
completion and/or IntelliSense makes this very useful. Typing this at the
command line should allow tab completion or IntelliSense to kick in (the
pipe symbol represents where the cursor should be):

Get-ADObjectAceGuid -ClassObject |
</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
	</command:returnValue>
		</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>Switch parameters control what type of lookup is performed. The &apos;Name&apos; 
parameter is dynamic, and its possible values change depending on the switch 
provided.
</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------  Example 1  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-ADObjectAceGuid -ExtendedRight Unexpire-Password</dev:code>
			<dev:remarks>
				<maml:para>This looks up the ObjectAceType for the &apos;Unexpire-Password&apos; extended right. The
returned object will contain the GUID, the name, and the type, which in this
example is &apos;ExtendedRight&apos;. In PowerShell version 3 or higher, IntelliSense and
tab completion are available after pressing space after the -ExtendedRight
switch has been provided.
</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 2  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-ADObjectAceGuid *Password
</dev:code>
			<dev:remarks>
				<maml:para>This example searches for any ObjectAceTypes that end in the word &apos;Password&apos;.
The results will include &apos;Unexpire-Password&apos; from the previous example. There
will be several other results, not necessarily all extended rights like the
previous example.
</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 3  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-ADObjectAceGuid *Password -TypesToSearch ExtendedRight, Property</dev:code>
			<dev:remarks>
				<maml:para>This example searches for any ObjectAceTypes that end in the word &apos;Password&apos;.
The results will only include extended rights and properties because the
-TypesToSearch parameter was specified.
</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>about_PowerShellAccessControl_Module</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-AccessControlEntry</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-AccessControlEntry</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-AccessControlEntry</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-AccessControlEntry</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Get-EffectiveAccess</command:name>
		<maml:description>
			<maml:para>Gets the effective access rights for a securable object.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>EffectiveAccess</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Get-EffectiveAccess function determines the effective access to a specified 
principal for a given set of security descriptors or securable objects. By 
default, the function returns a custom object that contains the display name
for the securable object (DisplayName), the principal whose access is being 
checked (IdentityReference), and a string representation of the effective 
rights the principal has to the securable object (EffectiveAccess). 

If the -ListAllRights switch is specified, the function&apos;s output changes.
Multiple objects are returned for each principal, each with the following
properties: the principal whose access is being checked (IdentityReference), 
the display name for the securable object (DisplayName), a string 
representation of a single permission from the object&apos;s access mask 
enumeration (Permission), a boolean property showing whether or not the 
permission is granted (Allowed), and a property showing why the permission was
denied, if it was denied (LimitedBy). 

If any -ObjectAceTypes are specified (for Active Directory objects), then extra 
custom objects are returned. When the -ListAllRights switch isn&apos;t used, custom
objects will only be returned for -ObjectAceTypes that the principal is granted
access to. If -ListAllRights is used, then every ObjectAceType will produce at
least one extra custom object.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-EffectiveAccess</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para>Specifies and object whose effective access is requested.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>The principal(s) that the function will use to perform the access check. This 
can be a string representing a user, group, or SID. It can also be a 
[System.Security.Principal.NTAccount] or a 
[System.Security.Principal.SecurityIdentifier] object.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ListAllRights</maml:name>
				<maml:description>
					<maml:para>Instead of returning a single string representation of the granted permissions 
(and extra objects for each ObjectAcetype), multiple custom objects are
returned, one for each single permission in the securable object&apos;s access mask
enumeration, with a boolean value (Allowed) specifying whether or not the
specific permission is granted. This output resembles the &apos;Effective Access&apos;
tab in the Windows ACL Editor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="named">
				<maml:name>ObjectAceTypes</maml:name>
				<maml:description>
					<maml:para>Specifies properties, property sets, extended rights, validated writes, and/or 
class objects. The principal&apos;s effective access will be checked against each
one.

The parameter takes one or more strings, GUIDs (which can also be strings), or 
output from the Get-ADObjectAceGuid function. If a string or GUID is provided, 
the Get-ADObjectAceGuid function is called internally.

Wildcards are permitted.

NOTE: This parameter is only checked if the securable object being checked is
an Active Directory object.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-EffectiveAccess</maml:name>
			<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByPropertyName)" position="0">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to a resource (or resources) whose effective access is 
requested.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>The principal(s) that the function will use to perform the access check. This 
can be a string representing a user, group, or SID. It can also be a 
[System.Security.Principal.NTAccount] or a 
[System.Security.Principal.SecurityIdentifier] object.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ListAllRights</maml:name>
				<maml:description>
					<maml:para>Instead of returning a single string representation of the granted permissions 
(and extra objects for each ObjectAcetype), multiple custom objects are
returned, one for each single permission in the securable object&apos;s access mask
enumeration, with a boolean value (Allowed) specifying whether or not the
specific permission is granted. This output resembles the &apos;Effective Access&apos;
tab in the Windows ACL Editor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="named">
				<maml:name>ObjectAceTypes</maml:name>
				<maml:description>
					<maml:para>Specifies properties, property sets, extended rights, validated writes, and/or 
class objects. The principal&apos;s effective access will be checked against each
one.

The parameter takes one or more strings, GUIDs (which can also be strings), or 
output from the Get-ADObjectAceGuid function. If a string or GUID is provided, 
the Get-ADObjectAceGuid function is called internally.

Wildcards are permitted.

NOTE: This parameter is only checked if the securable object being checked is
an Active Directory object.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-EffectiveAccess</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>LiteralPath</maml:name>
				<maml:description>
					<maml:para>Specifies the path to a resource (or resources) whose effective access is 
requested.

Unlike Path, the value of the LiteralPath parameter is used exactly as it is 
typed. No characters are interpreted as wildcards. If the path includes escape
characters, enclose it in single quotation marks. Single quotation marks tell 
Windows PowerShell not to interpret any characters as escape sequences.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>The principal(s) that the function will use to perform the access check. This 
can be a string representing a user, group, or SID. It can also be a 
[System.Security.Principal.NTAccount] or a 
[System.Security.Principal.SecurityIdentifier] object.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ListAllRights</maml:name>
				<maml:description>
					<maml:para>Instead of returning a single string representation of the granted permissions 
(and extra objects for each ObjectAcetype), multiple custom objects are
returned, one for each single permission in the securable object&apos;s access mask
enumeration, with a boolean value (Allowed) specifying whether or not the
specific permission is granted. This output resembles the &apos;Effective Access&apos;
tab in the Windows ACL Editor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="named">
				<maml:name>ObjectAceTypes</maml:name>
				<maml:description>
					<maml:para>Specifies properties, property sets, extended rights, validated writes, and/or 
class objects. The principal&apos;s effective access will be checked against each
one.

The parameter takes one or more strings, GUIDs (which can also be strings), or 
output from the Get-ADObjectAceGuid function. If a string or GUID is provided, 
the Get-ADObjectAceGuid function is called internally.

Wildcards are permitted.

NOTE: This parameter is only checked if the securable object being checked is
an Active Directory object.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>InputObject</maml:name>
			<maml:description>
				<maml:para>Specifies and object whose effective access is requested.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Principal</maml:name>
			<maml:description>
				<maml:para>The principal(s) that the function will use to perform the access check. This 
can be a string representing a user, group, or SID. It can also be a 
[System.Security.Principal.NTAccount] or a 
[System.Security.Principal.SecurityIdentifier] object.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ListAllRights</maml:name>
			<maml:description>
				<maml:para>Instead of returning a single string representation of the granted permissions 
(and extra objects for each ObjectAcetype), multiple custom objects are
returned, one for each single permission in the securable object&apos;s access mask
enumeration, with a boolean value (Allowed) specifying whether or not the
specific permission is granted. This output resembles the &apos;Effective Access&apos;
tab in the Windows ACL Editor.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="named">
			<maml:name>ObjectAceTypes</maml:name>
			<maml:description>
				<maml:para>Specifies properties, property sets, extended rights, validated writes, and/or 
class objects. The principal&apos;s effective access will be checked against each
one.

The parameter takes one or more strings, GUIDs (which can also be strings), or 
output from the Get-ADObjectAceGuid function. If a string or GUID is provided, 
the Get-ADObjectAceGuid function is called internally.

Wildcards are permitted.

NOTE: This parameter is only checked if the securable object being checked is
an Active Directory object.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByPropertyName)" position="0">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Specifies the path to a resource (or resources) whose effective access is 
requested.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>LiteralPath</maml:name>
			<maml:description>
				<maml:para>Specifies the path to a resource (or resources) whose effective access is 
requested.

Unlike Path, the value of the LiteralPath parameter is used exactly as it is 
typed. No characters are interpreted as wildcards. If the path includes escape
characters, enclose it in single quotation marks. Single quotation marks tell 
Windows PowerShell not to interpret any characters as escape sequences.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
	</command:returnValue>
		</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------  Example 1  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-EffectiveAccess</dev:code>
			<dev:remarks>
				<maml:para>This will get the effective access of the current directory in the current 
provider for the current user.
</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 2  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-EffectiveAccess -ListAllRights</dev:code>
			<dev:remarks>
				<maml:para>This will get the effective access of the current directory in the current 
provider for the current user. The return value will break down all access 
rights and show which ones were granted and which ones were not granted.
</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 3  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; dir c:\folder | Get-EffectiveAccess</dev:code>
			<dev:remarks>
				<maml:para>This will get the effective access mask for the current user for all child 
items under the &apos;C:\folder&apos; folder.
</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 4  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; dir c:\folder | Get-EffectiveAccess -Principal User1, User2</dev:code>
			<dev:remarks>
				<maml:para>This will get the effective access mask for the User1 and User2 users for all 
child items under the &apos;C:\folder&apos; folder.
</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 5  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-Service | Get-EffectiveAccess</dev:code>
			<dev:remarks>
				<maml:para>This will get the effective access that the current user has on every service.</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 6  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-ADUser username | Get-EffectiveAccess -Principal username2 -ObjectAceType *password*
</dev:code>
			<dev:remarks>
				<maml:para>This will list the effective access that the &apos;username2&apos; user has over the
object for the &apos;username&apos; user. After the effective access is listed, one or
more effective access objects will be returned for every ObjectAceType that
&apos;username2&apos; has any rights for and that matches the &apos;*password*&apos; search string.
</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>about_PowerShellAccessControl_Module</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-AccessControlEntry</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Get-MandatoryIntegrityLabel</command:name>
		<maml:description>
			<maml:para>Gets the mandatory integrity label of an object.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>MandatoryIntegrityLabel</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Get-MandatoryIntegrityLabel function gets the mandatory integrity label 
(MIL) of an object (or multiple objects). The output of the function shows the 
MIL as an ACE (similar to how Get-SecurityDescriptor returns the Access and 
Audit properties).

If a MIL is not set, the function returns null (the system would treat that 
object as having medium integrity).</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-MandatoryIntegrityLabel</maml:name>
			<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByPropertyName)" position="0">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to a resource to get the mandatory integrity label.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-MandatoryIntegrityLabel</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para>Specifies an object whose mandatory integrity label is retrieved.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-MandatoryIntegrityLabel</maml:name>
			<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByPropertyName)" position="0">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to a resource to get the mandatory integrity label.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ObjectType</maml:name>
				<maml:description>
					<maml:para>Using this parameter along with the -Path parameter allows a specific object 
type to be specified. Non-filesystem paths must be in a format that PowerShell 
doesn&apos;t natively understand. See the &apos;SE_OBJECT_TYPE enumeration&apos; link in the
RelatedLinks section for more information about the format.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ResourceType</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-MandatoryIntegrityLabel</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>LiteralPath</maml:name>
				<maml:description>
					<maml:para>Specifies the path to a resource to get the mandatory integrity label.

Unlike Path, the value of the LiteralPath parameter is used exactly as it is 
typed. No characters are interpreted as wildcards. If the path includes escape 
characters, enclose it in single quotation marks. Single quotation marks tell 
Windows PowerShell not to interpret any characters as escape sequences.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByPropertyName)" position="0">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Specifies the path to a resource to get the mandatory integrity label.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>InputObject</maml:name>
			<maml:description>
				<maml:para>Specifies an object whose mandatory integrity label is retrieved.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ObjectType</maml:name>
			<maml:description>
				<maml:para>Using this parameter along with the -Path parameter allows a specific object 
type to be specified. Non-filesystem paths must be in a format that PowerShell 
doesn&apos;t natively understand. See the &apos;SE_OBJECT_TYPE enumeration&apos; link in the
RelatedLinks section for more information about the format.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ResourceType</command:parameterValue>
			<dev:type>
				<maml:name>ResourceType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>LiteralPath</maml:name>
			<maml:description>
				<maml:para>Specifies the path to a resource to get the mandatory integrity label.

Unlike Path, the value of the LiteralPath parameter is used exactly as it is 
typed. No characters are interpreted as wildcards. If the path includes escape 
characters, enclose it in single quotation marks. Single quotation marks tell 
Windows PowerShell not to interpret any characters as escape sequences.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
	</command:returnValue>
		</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------  Example 1  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-Process -Id $pid | Get-MandatoryIntegrityLabel</dev:code>
			<dev:remarks>
				<maml:para>This gets the mandatory integrity label of the current PowerShell session&apos;s 
process.
</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 2  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; dir &quot;$env:USERPROFILE\AppData\LocalLow&quot; | Get-MandatoryIntegrityLabel</dev:code>
			<dev:remarks>
				<maml:para>This will get the MIL for all files/folders directly inside of the &apos;LocalLow&apos; 
folder.
</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Mandatory Integrity Control</maml:linkText>
			<maml:uri>http://msdn.microsoft.com/en-us/library/windows/desktop/bb648648(v=vs.85).aspx</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>SE_OBJECT_TYPE enumeration</maml:linkText>
			<maml:uri>http://msdn.microsoft.com/en-us/library/windows/desktop/aa379593(v=vs.85).aspx</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Get-SecurityDescriptor</command:name>
		<maml:description>
			<maml:para>Similar to Get-Acl, the Get-SecurityDescriptor function gets the security 
descriptor for a resource. It supports more objects than Get-Acl, and the SD 
returned is of a different type than Get-Acl.
</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>SecurityDescriptor</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>Get-SecurityDescriptor is used to get security descriptors for several 
different types of objects. It is used the way that Get-Acl is used, except it 
can handle a larger list of object types.

Some of the objects this function can take as input include the following:
  - System.Diagnostics.Process (returned from Get-Process)
  - System.ServiceProcess.ServiceController (returned from Get-Service)
  - WMI instances of certain classes:
     * Win32_Printer
     * Win32_Service
     * Win32_Process
     * Win32_Share
     * Win32_LogicalShareSecuritySetting
     * __SystemSecurity
     * Win32_SecurityDescriptor/__SecurityDescriptor
  - WsMan objects

The function also takes specially crafted paths for several different types of 
objects (see the -ObjectType parameter for details).

For more information about the objects that are returned, see the help for the 
New-AdaptedSecurityDescriptor function.
</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-SecurityDescriptor</maml:name>
			<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByPropertyName)" position="0">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to a resource. Get-SecurityDescriptor gets the security 
descriptor of the resource indicated by the path. Wildcards are permitted 
(unless the -ObjectType parameter is also used). If the -Path parameter is
omitted, Get-SecurityDescriptor gets the security descriptor of the current 
location of the current provider.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Audit</maml:name>
				<maml:description>
					<maml:para>By default, only the discretionary ACL (which deals with object access) is 
returned. When this switch is used, the system ACL (which deals with object 
auditing) is also returned. On a default Windows installation, administrator 
access is required to use this switch.
</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-SecurityDescriptor</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para>Gets the security descriptor for the specified object. Enter a variable that 
contains the object or a command that gets the object.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Audit</maml:name>
				<maml:description>
					<maml:para>By default, only the discretionary ACL (which deals with object access) is 
returned. When this switch is used, the system ACL (which deals with object 
auditing) is also returned. On a default Windows installation, administrator 
access is required to use this switch.
</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-SecurityDescriptor</maml:name>
			<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByPropertyName)" position="0">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to a resource. Get-SecurityDescriptor gets the security 
descriptor of the resource indicated by the path. Wildcards are permitted 
(unless the -ObjectType parameter is also used). If the -Path parameter is
omitted, Get-SecurityDescriptor gets the security descriptor of the current 
location of the current provider.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ObjectType</maml:name>
				<maml:description>
					<maml:para>Get-SecurityDescriptor attempts to determine the object type of the object 
specified in the Path, LiteralPath, or InputObject. Using this parameter allows 
the user to specify a specific object type. Non-filesystem paths must be in a 
format that PowerShell doesn&apos;t natively understand. See the following link for 
path formatting information: 
http://msdn.microsoft.com/en-us/library/windows/desktop/aa379593(v=vs.85).aspx
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ResourceType</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Audit</maml:name>
				<maml:description>
					<maml:para>By default, only the discretionary ACL (which deals with object access) is 
returned. When this switch is used, the system ACL (which deals with object 
auditing) is also returned. On a default Windows installation, administrator 
access is required to use this switch.
</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>IsContainer</maml:name>
				<maml:description>
					<maml:para>When specifying the ObjectType, this parameter can also be used to specify 
whether or not the security descriptor belongs to a container object, e.g., 
folder, registry key, WMI namespace, etc.
</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-SecurityDescriptor</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>LiteralPath</maml:name>
				<maml:description>
					<maml:para>Specifies the path to a resource. Unlike Path, the value of the LiteralPath 
parameter is used exactly as it is typed. No characters are interpreted as 
wildcards. If the path includes escape characters, enclose it in single 
quotation marks. Single quotation marks tell Windows PowerShell not to 
interpret any characters as escape sequences.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Audit</maml:name>
				<maml:description>
					<maml:para>By default, only the discretionary ACL (which deals with object access) is 
returned. When this switch is used, the system ACL (which deals with object 
auditing) is also returned. On a default Windows installation, administrator 
access is required to use this switch.
</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByPropertyName)" position="0">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Specifies the path to a resource. Get-SecurityDescriptor gets the security 
descriptor of the resource indicated by the path. Wildcards are permitted 
(unless the -ObjectType parameter is also used). If the -Path parameter is
omitted, Get-SecurityDescriptor gets the security descriptor of the current 
location of the current provider.
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Current location in current provider</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Audit</maml:name>
			<maml:description>
				<maml:para>By default, only the discretionary ACL (which deals with object access) is 
returned. When this switch is used, the system ACL (which deals with object 
auditing) is also returned. On a default Windows installation, administrator 
access is required to use this switch.
</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>InputObject</maml:name>
			<maml:description>
				<maml:para>Gets the security descriptor for the specified object. Enter a variable that 
contains the object or a command that gets the object.
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ObjectType</maml:name>
			<maml:description>
				<maml:para>Get-SecurityDescriptor attempts to determine the object type of the object 
specified in the Path, LiteralPath, or InputObject. Using this parameter allows 
the user to specify a specific object type. Non-filesystem paths must be in a 
format that PowerShell doesn&apos;t natively understand. See the following link for 
path formatting information: 
http://msdn.microsoft.com/en-us/library/windows/desktop/aa379593(v=vs.85).aspx
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ResourceType</command:parameterValue>
			<dev:type>
				<maml:name>ResourceType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>IsContainer</maml:name>
			<maml:description>
				<maml:para>When specifying the ObjectType, this parameter can also be used to specify 
whether or not the security descriptor belongs to a container object, e.g., 
folder, registry key, WMI namespace, etc.
</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>LiteralPath</maml:name>
			<maml:description>
				<maml:para>Specifies the path to a resource. Unlike Path, the value of the LiteralPath 
parameter is used exactly as it is typed. No characters are interpreted as 
wildcards. If the path includes escape characters, enclose it in single 
quotation marks. Single quotation marks tell Windows PowerShell not to 
interpret any characters as escape sequences.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
	</command:returnValue>
		</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------  Example 1  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-SecurityDescriptor HKCU:\Software</dev:code>
			<dev:remarks>
				<maml:para>This will get the security descriptor for the &apos;Software&apos; key in the current user&apos;s registry hive. Since the -Audit switch was not supplied, only access entries will be returned.</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 2  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-SecurityDescriptor &apos;C:\Program Files&apos; -Audit | Format-List</dev:code>
			<dev:remarks>
				<maml:para>This will get the security descriptor for the &apos;Program Files&apos; folder. Since the -Audit switch was  supplied, both access and audit entries will be returned (administrator privileges are required). The results are returned in a formatted list, which shows more information than the default table format shows.</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 3  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-Process -Id $pid | Get-SecurityDescriptor</dev:code>
			<dev:remarks>
				<maml:para>This will show the security descriptor for the current PowerShell session. Any process where the .Handle property is available can be viewed.</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 4  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; dir WSMan:\localhost -Recurse | where { $_.Name -eq &apos;Sddl&apos; } | Get-SecurityDescriptor</dev:code>
			<dev:remarks>
				<maml:para>Shows any WSMan leaf objects that contain SDDL.</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 5  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; (Get-Service b*), (Get-Printer | select -first 1), (dir C:\Windows | select -first 3) | Get-SecurityDescriptor</dev:code>
			<dev:remarks>
				<maml:para>This example gets the security descriptor for all services that start with the letter &apos;b&apos;, for the first printer returned from Get-Printer (requires Windows 8.x), and from the first three objects returned by Get-ChildItem for the &apos;C:\Windows&apos; directory. Notice that Get-SecurityDescriptor can get SDs for different types of objects in the same call.</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 6  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-SecurityDescriptor -Path \\RemoteMachine\MACHINE\Software\Adobe -ObjectType RegistryWow6432Key -IsContainer</dev:code>
			<dev:remarks>
				<maml:para>This must be run against a 64-bit computer. This will get the security descriptor of the HKLM:\SOFTWARE\Wow6432Node\Adobe registry key on the &apos;RemoteMachine&apos; computer. Notice how the -ObjectType parameter was used. 

This could have been run against the local machine by either putting the local machine name in the first section, or removing the &apos;\\RemoteMachine\&apos; part of the path. 

Also, a normal registry path could have been used if the -ObjectType parameter was specified as &apos;RegistryKey&apos;</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 7  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-SecurityDescriptor -Path \\ServerName\Share -ObjectType LMShare -Audit</dev:code>
			<dev:remarks>
				<maml:para>This gets the security descriptor for a share named &apos;Share&apos; on a server named &apos;ServerName&apos; (these are not the NTFS permissions). 

If the server was a Windows system, the following command would do the same thing: 
Get-WmiObject Win32_Share -Filter &quot;Name=&apos;Share&apos;&quot; -ComputerName ServerName | Get-SecurityInformation</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 8  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-SecurityDescriptor -Path &quot;\\?\C:\path_longer_than_260_characters_here&quot; -ObjectType FileObject</dev:code>
			<dev:remarks>
				<maml:para>This would get the security descriptor for a file or folder that has a path with more than 260 characters in it. You have to make sure to prepend &apos;\\?\&apos; to the path, and specify the -ObjectType for this to work. A future version of the module may take the -ObjectType and special path prefix requirement away.</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>about_PowerShellAccessControl_Module</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-SecurityDescriptor</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-AccessControlEntry</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-AccessControlEntry</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Disable-AclInheritance</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Enable-AclInheritance</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Object Types</maml:linkText>
			<maml:uri>http://msdn.microsoft.com/en-us/library/windows/desktop/aa379593(v=vs.85).aspx</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Get-Win32SecurityDescriptor</command:name>
		<maml:description>
			<maml:para>Gets a security descriptor from a WMI/CIM object.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>Win32SecurityDescriptor</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Get-Win32SecurityDescriptor function gets an instance of the Win32_SecurityDescriptor class from a WMI/CIM object. The WMI/CIM object&apos;s class must have the GetSecurityDescriptor method available to it (you may find a list of these by running the following command on a V3 machine):

Get-CimClass -MethodName GetSecurityDescriptor

The function works with both the pre-V3 &quot;WMI cmdlets&quot; and the newer &quot;CIM cmdlets&quot;.

The function returns a custom object that always contains a Win32_SecurityDescriptor instance, and alternately contains the SDDL and/or binary representation of the security descriptor.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-Win32SecurityDescriptor</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="0">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para>The WMI object/CIM instance to get the security descriptor from</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Sddl</maml:name>
				<maml:description>
					<maml:para>Causes the function to also return the SDDL representation of the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>BinarySD</maml:name>
				<maml:description>
					<maml:para>Causes the function to also return the binary representation of the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SddlOld</maml:name>
				<maml:description>
					<maml:para>Temporary (for testing) switch that returns SDDL using the Win32_SecurityDescriptorHelper WMI class (see Notes for this function)</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>BinarySDOld</maml:name>
				<maml:description>
					<maml:para>Temporary (for testing) switch that returns the binary SD using the Win32_SecurityDescriptorHelper WMI class (see Notes for this function)</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="0">
			<maml:name>InputObject</maml:name>
			<maml:description>
				<maml:para>The WMI object/CIM instance to get the security descriptor from</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Sddl</maml:name>
			<maml:description>
				<maml:para>Causes the function to also return the SDDL representation of the security descriptor.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>BinarySD</maml:name>
			<maml:description>
				<maml:para>Causes the function to also return the binary representation of the security descriptor.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SddlOld</maml:name>
			<maml:description>
				<maml:para>Temporary (for testing) switch that returns SDDL using the Win32_SecurityDescriptorHelper WMI class (see Notes for this function)</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>BinarySDOld</maml:name>
			<maml:description>
				<maml:para>Temporary (for testing) switch that returns the binary SD using the Win32_SecurityDescriptorHelper WMI class (see Notes for this function)</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
	</command:returnValue>
		</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>There is a bug in the Win32_SecurityDescriptorHelper methods for converting to SDDL and binary formats that prevents object inheritance from being honored. If you inspect the Win32SD object for an object that has some inherited ACEs, you will notice that the AceFlags do properly show inheritance.
The SDDL or binary forms will not carry this over. Because of that, you&apos;ll notice the SddlOld and BinarySDOld switch parameters. Those use the old, buggy method (they were what I originally used for the Sddl and BinarySD switches). I&apos;m keeping them around for a little more testing, but they are the secondary method for getting the alternate representations. They&apos;ll be removed in a future version of the PowerShellAccessControl module.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------  Example 1  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-WmiObject Win32_Printer | Get-Win32SecurityDescriptor</dev:code>
			<dev:remarks>
				<maml:para>This example will get the security descriptor for each printer installed on the current machine. The descriptor object will be contained in each returned object&apos;s .Win32SD property.</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 2  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-CimInstance Win32_Printer | Get-Win32SecurityDescriptor -Sddl</dev:code>
			<dev:remarks>
				<maml:para>The same as example #1, except Get-CimInstance is used instead of Get-WmiObject, and an extra property containing the SDDL representation of the security descriptor will be attached to each object returned.</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 3  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-CimInstance Win32_Printer | Get-Win32SecurityDescriptor -Sddl -BinarySD</dev:code>
			<dev:remarks>
				<maml:para>The same as example #2, except an extra property containing the binary representation of the security descriptor will be attached to each object returned.</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>New-AccessControlEntry</command:name>
		<maml:description>
			<maml:para>Creates a new access control entry for a securable object. It can be used to create both discretionary (access) and system (audit) entries.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>AccessControlEntry</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The New-AccessControlEntry function creates access control entries (ACEs) for 
use with access control lists (ACLs) on security descriptors (SDs).

When used with the -RegistryRights, -FolderRights, -FileRights, or 
-ActiveDirectoryRights parameters (without the -GenericAce switch), the ACE 
returned can be used with security descriptor objects that were obtained using 
the Get-Acl cmdlet or the Get-SecurityDescriptor function. When any of the 
other *Rights parameters or the -AccessMask parameter is used, the ACE returned 
can be used with security descriptor objects that were obtained using the 
Get-SecurityDescriptor function.

By default, the function creates an access allowed ACE. To create an access 
denied ACE, supply the -AceType parameter with the string &apos;AccessDenied&apos;. To 
create an audit ACE, supply the -AceType parameter with the string 
&apos;SystemAudit&apos;, and use the -AuditSuccess and/or -AuditFailure switch 
parameters.

Every ACE definition must contain an access mask, except when an Active 
Directory ACE is being created that contains and -ObjectAceType (more on that 
below). The access mask can be a numeric value (provided through the 
-AccessMask parameter), or an enumeration (provided through the many *Rights 
parameters). 

When creating an Active Directory ACE that contains an -ObjectAceType, the 
-ActiveDirectoryRights or -AcccessMask parameters are optional. If the 
-ObjectAceType corresponds to an extended right or a validated write, the 
ExtendedRight or Self access masks are automatically used, respectively, when 
no access mask is provided. If the -ObjectAceType corresponds to a class object 
or a property/property set, the CreateChild or ReadProperty access masks are 
automatically used, respectively, when no access mask is provided. Note that 
valid access masks are CreateChild and/or DeleteChild for class objects and 
ReadProperty and/or WriteProperty for properties/property sets, so it is 
advisable to provide an access mask with those -ObjectAceTypes.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-AccessControlEntry</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
				<maml:name>AceType</maml:name>
				<maml:description>
					<maml:para>Specifies the type of ACE to create. Valid values are AccessAllowed, 
AccessDenied, and SystemAudit. When SystemAudit is used, at least one of the 
-AuditSuccess or -AuditFailure switches must also be used.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>The principal that this ACE will apply to. This can be a string representing 
a user, group, or SID. It can also be a [System.Security.Principal.NTAccount] 
or a [System.Security.Principal.SecurityIdentifier] object.

To supply a principal on a remote system, provide a string the following 
format: &quot;COMPUTERNAME\PRINCIPAL STRING&quot;, e.g., Computer1\RemoteUser (account 
name) or Computer1\S-1-1-0 (SID).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>FileRights</maml:name>
				<maml:description>
					<maml:para>Specifies the access mask for the ACE using a file system specific enumeration.
The only difference between this parameter and the -FolderRighs parameter is 
that -FolderRights has a different -AppliesTo default. If the -FileRights 
parameter is used without an -AppliesTo parameter, the default -AppliesTo value 
of Object is used.

If this parameter is used, the object output by the function will be either a 
FileSystemAccessRule or a FileSystemAuditRule type (unless the -Generic switch 
is used).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">FileSystemRights</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>Controls inheritance and propagation flags for the ACE. By default, the ACE 
will only apply to the object it belongs to (unless you use the -FolderRights, 
-RegistryRights, -WmiNamespaceRights, or -ActiveDirectoryRights parameters). 

By default, -FolderRights apply to the Object, ChildContainers, and 
ChildObjects (or the folder, sub-folders and files) and -RegistryRights, 
-WmiNamespaceRights, and -ActiveDirectoryRights apply to the Object and 
ChildContainers.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OnlyApplyToThisContainer</maml:name>
				<maml:description>
					<maml:para>When this switch parameter is enabled, only direct children will inherit the 
ACE. Children of the direct children will not inherit it.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>GenericAce</maml:name>
				<maml:description>
					<maml:para>When the -FileRights, -FolderRights, -RegistryRights, or -ActiveDirectoryRights 
parameters are used to provide the access mask, specialized .NET rule types are 
created that can be used with security descriptor objects from the Get-Acl 
cmdlet (the type depends on the parameter used). This switch will prevent the 
specialized rule types from being created, though, and the ACE will be either a 
CommonAce or ObjectAce object.

The specialized rule types can be used directly with Add-AccessControlEntry, 
Remove-AccessControlEntry, and the methods on security descriptor objects 
returned from Get-SecurityDescriptor, so there is usually no need for users to 
use this switch. It is used internally by the module to do ACE conversions.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>New-AccessControlEntry</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
				<maml:name>AceType</maml:name>
				<maml:description>
					<maml:para>Specifies the type of ACE to create. Valid values are AccessAllowed, 
AccessDenied, and SystemAudit. When SystemAudit is used, at least one of the 
-AuditSuccess or -AuditFailure switches must also be used.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>The principal that this ACE will apply to. This can be a string representing 
a user, group, or SID. It can also be a [System.Security.Principal.NTAccount] 
or a [System.Security.Principal.SecurityIdentifier] object.

To supply a principal on a remote system, provide a string the following 
format: &quot;COMPUTERNAME\PRINCIPAL STRING&quot;, e.g., Computer1\RemoteUser (account 
name) or Computer1\S-1-1-0 (SID).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>FolderRights</maml:name>
				<maml:description>
					<maml:para>Specifies the access mask for the ACE using a file system specific enumeration. 
The only difference between this parameter and the -FileRighs parameter is that 
-FileRights has a different -AppliesTo default. If the -FolderRights parameter 
is used without an -AppliesTo parameter, the default -AppliesTo value of 
Object, ChildContainers, ChildObjects is used.

If this parameter is used, the object output by the function will be either a 
FileSystemAccessRule or a FileSystemAuditRule type (unless the -Generic switch 
is used).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">FileSystemRights</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>Controls inheritance and propagation flags for the ACE. By default, the ACE 
will only apply to the object it belongs to (unless you use the -FolderRights, 
-RegistryRights, -WmiNamespaceRights, or -ActiveDirectoryRights parameters). 

By default, -FolderRights apply to the Object, ChildContainers, and 
ChildObjects (or the folder, sub-folders and files) and -RegistryRights, 
-WmiNamespaceRights, and -ActiveDirectoryRights apply to the Object and 
ChildContainers.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OnlyApplyToThisContainer</maml:name>
				<maml:description>
					<maml:para>When this switch parameter is enabled, only direct children will inherit the 
ACE. Children of the direct children will not inherit it.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>GenericAce</maml:name>
				<maml:description>
					<maml:para>When the -FileRights, -FolderRights, -RegistryRights, or -ActiveDirectoryRights 
parameters are used to provide the access mask, specialized .NET rule types are 
created that can be used with security descriptor objects from the Get-Acl 
cmdlet (the type depends on the parameter used). This switch will prevent the 
specialized rule types from being created, though, and the ACE will be either a 
CommonAce or ObjectAce object.

The specialized rule types can be used directly with Add-AccessControlEntry, 
Remove-AccessControlEntry, and the methods on security descriptor objects 
returned from Get-SecurityDescriptor, so there is usually no need for users to 
use this switch. It is used internally by the module to do ACE conversions.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>New-AccessControlEntry</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
				<maml:name>AceType</maml:name>
				<maml:description>
					<maml:para>Specifies the type of ACE to create. Valid values are AccessAllowed, 
AccessDenied, and SystemAudit. When SystemAudit is used, at least one of the 
-AuditSuccess or -AuditFailure switches must also be used.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>The principal that this ACE will apply to. This can be a string representing 
a user, group, or SID. It can also be a [System.Security.Principal.NTAccount] 
or a [System.Security.Principal.SecurityIdentifier] object.

To supply a principal on a remote system, provide a string the following 
format: &quot;COMPUTERNAME\PRINCIPAL STRING&quot;, e.g., Computer1\RemoteUser (account 
name) or Computer1\S-1-1-0 (SID).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>RegistryRights</maml:name>
				<maml:description>
					<maml:para>Specifies the access mask for the ACE using a registry specific enumeration. 
Using this parameter will also cause the default -AppliesTo setting to change 
to the Object and ChildContainers, and the output object to be either a 
RegistryAccessRule or RegistryAuditRule type (unless the -Generic switch is 
used).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">RegistryRights</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>Controls inheritance and propagation flags for the ACE. By default, the ACE 
will only apply to the object it belongs to (unless you use the -FolderRights, 
-RegistryRights, -WmiNamespaceRights, or -ActiveDirectoryRights parameters). 

By default, -FolderRights apply to the Object, ChildContainers, and 
ChildObjects (or the folder, sub-folders and files) and -RegistryRights, 
-WmiNamespaceRights, and -ActiveDirectoryRights apply to the Object and 
ChildContainers.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OnlyApplyToThisContainer</maml:name>
				<maml:description>
					<maml:para>When this switch parameter is enabled, only direct children will inherit the 
ACE. Children of the direct children will not inherit it.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>GenericAce</maml:name>
				<maml:description>
					<maml:para>When the -FileRights, -FolderRights, -RegistryRights, or -ActiveDirectoryRights 
parameters are used to provide the access mask, specialized .NET rule types are 
created that can be used with security descriptor objects from the Get-Acl 
cmdlet (the type depends on the parameter used). This switch will prevent the 
specialized rule types from being created, though, and the ACE will be either a 
CommonAce or ObjectAce object.

The specialized rule types can be used directly with Add-AccessControlEntry, 
Remove-AccessControlEntry, and the methods on security descriptor objects 
returned from Get-SecurityDescriptor, so there is usually no need for users to 
use this switch. It is used internally by the module to do ACE conversions.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>New-AccessControlEntry</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
				<maml:name>AceType</maml:name>
				<maml:description>
					<maml:para>Specifies the type of ACE to create. Valid values are AccessAllowed, 
AccessDenied, and SystemAudit. When SystemAudit is used, at least one of the 
-AuditSuccess or -AuditFailure switches must also be used.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>The principal that this ACE will apply to. This can be a string representing 
a user, group, or SID. It can also be a [System.Security.Principal.NTAccount] 
or a [System.Security.Principal.SecurityIdentifier] object.

To supply a principal on a remote system, provide a string the following 
format: &quot;COMPUTERNAME\PRINCIPAL STRING&quot;, e.g., Computer1\RemoteUser (account 
name) or Computer1\S-1-1-0 (SID).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ActiveDirectoryRights</maml:name>
				<maml:description>
					<maml:para>Specifies the access mask for the ACE using an Active Directory specific 
enumeration. Using this parameter will also cause the default -AppliesTo 
setting to change to the Object and ChildContainers, and the output object to 
be either an ActiveDirectoryAccessRule or ActiveDirectoryAuditRule type (unless
the -Generic switch is used).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ActiveDirectoryRights</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>Controls inheritance and propagation flags for the ACE. By default, the ACE 
will only apply to the object it belongs to (unless you use the -FolderRights, 
-RegistryRights, -WmiNamespaceRights, or -ActiveDirectoryRights parameters). 

By default, -FolderRights apply to the Object, ChildContainers, and 
ChildObjects (or the folder, sub-folders and files) and -RegistryRights, 
-WmiNamespaceRights, and -ActiveDirectoryRights apply to the Object and 
ChildContainers.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OnlyApplyToThisContainer</maml:name>
				<maml:description>
					<maml:para>When this switch parameter is enabled, only direct children will inherit the 
ACE. Children of the direct children will not inherit it.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ObjectAceType</maml:name>
				<maml:description>
					<maml:para>Specifies a property, property set, extended right, validated write, or class 
object that this ACE will apply to. 

The parameter takes a string, a GUID (which can also be a string), or the 
output from the Get-ADObjectAceGuid function. If a string or GUID is provided, 
the Get-ADObjectAceGuid function is called internally.

Wildcards are permitted. If more than one result is returned, the user will be 
prompted to select the proper object ACE GUID.

It is possible for more than one result to be returned with a string input, 
even if no wildcards were specified. This can happen if the name or GUID are 
shared among types (property, class object, extended right, validated write, 
etc). To prevent the prompt in a script, use a call to Get-ADObjectAceGuid with
the -TypesToSearch parameter limiting the returned type. See the help for that 
function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>InheritedObjectAceType</maml:name>
				<maml:description>
					<maml:para>Specifies the type of object that this ACE will apply to, e.g., organizational 
unit, user object, etc.

The parameter takes a string, a GUID (which can also be a string), or the 
output from the Get-ADObjectAceGuid function. If a string or GUID is provided, 
the Get-ADObjectAceGuid function is called internally.

Wildcards are permitted. If more than one result is returned, the user will be 
prompted to select the proper object ACE GUID.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>GenericAce</maml:name>
				<maml:description>
					<maml:para>When the -FileRights, -FolderRights, -RegistryRights, or -ActiveDirectoryRights 
parameters are used to provide the access mask, specialized .NET rule types are 
created that can be used with security descriptor objects from the Get-Acl 
cmdlet (the type depends on the parameter used). This switch will prevent the 
specialized rule types from being created, though, and the ACE will be either a 
CommonAce or ObjectAce object.

The specialized rule types can be used directly with Add-AccessControlEntry, 
Remove-AccessControlEntry, and the methods on security descriptor objects 
returned from Get-SecurityDescriptor, so there is usually no need for users to 
use this switch. It is used internally by the module to do ACE conversions.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>New-AccessControlEntry</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
				<maml:name>AceType</maml:name>
				<maml:description>
					<maml:para>Specifies the type of ACE to create. Valid values are AccessAllowed, 
AccessDenied, and SystemAudit. When SystemAudit is used, at least one of the 
-AuditSuccess or -AuditFailure switches must also be used.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>The principal that this ACE will apply to. This can be a string representing 
a user, group, or SID. It can also be a [System.Security.Principal.NTAccount] 
or a [System.Security.Principal.SecurityIdentifier] object.

To supply a principal on a remote system, provide a string the following 
format: &quot;COMPUTERNAME\PRINCIPAL STRING&quot;, e.g., Computer1\RemoteUser (account 
name) or Computer1\S-1-1-0 (SID).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AccessMask</maml:name>
				<maml:description>
					<maml:para>Allows for any numeric value for the AccessMask. This is usually used when 
creating an ACE for an object that the PowerShellAccessControl module doesn&apos;t 
already handle.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>Controls inheritance and propagation flags for the ACE. By default, the ACE 
will only apply to the object it belongs to (unless you use the -FolderRights, 
-RegistryRights, -WmiNamespaceRights, or -ActiveDirectoryRights parameters). 

By default, -FolderRights apply to the Object, ChildContainers, and 
ChildObjects (or the folder, sub-folders and files) and -RegistryRights, 
-WmiNamespaceRights, and -ActiveDirectoryRights apply to the Object and 
ChildContainers.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OnlyApplyToThisContainer</maml:name>
				<maml:description>
					<maml:para>When this switch parameter is enabled, only direct children will inherit the 
ACE. Children of the direct children will not inherit it.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ObjectAceType</maml:name>
				<maml:description>
					<maml:para>Specifies a property, property set, extended right, validated write, or class 
object that this ACE will apply to. 

The parameter takes a string, a GUID (which can also be a string), or the 
output from the Get-ADObjectAceGuid function. If a string or GUID is provided, 
the Get-ADObjectAceGuid function is called internally.

Wildcards are permitted. If more than one result is returned, the user will be 
prompted to select the proper object ACE GUID.

It is possible for more than one result to be returned with a string input, 
even if no wildcards were specified. This can happen if the name or GUID are 
shared among types (property, class object, extended right, validated write, 
etc). To prevent the prompt in a script, use a call to Get-ADObjectAceGuid with
the -TypesToSearch parameter limiting the returned type. See the help for that 
function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>InheritedObjectAceType</maml:name>
				<maml:description>
					<maml:para>Specifies the type of object that this ACE will apply to, e.g., organizational 
unit, user object, etc.

The parameter takes a string, a GUID (which can also be a string), or the 
output from the Get-ADObjectAceGuid function. If a string or GUID is provided, 
the Get-ADObjectAceGuid function is called internally.

Wildcards are permitted. If more than one result is returned, the user will be 
prompted to select the proper object ACE GUID.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AceFlags</maml:name>
				<maml:description>
					<maml:para>This parameter is for advanced use only. It allows the -AppliesTo, 
-OnlyApplyToThisContainer, -AuditSuccess, and/or -AuditFailure parameters to be
omitted when used to define a generic access control entry. If this parameter 
is provided along with the other parameters, the other parameters will take 
precedence, e.g., if -AppliesTo is provided, and it specifies Object, but 
-AceFlags is provided and it specifies that the ACE should apply to the Object 
and ChildContainers, the resulting ACE will use the -AppliesTo variable, and 
will apply only to the Object.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AceFlags</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>GenericAce</maml:name>
				<maml:description>
					<maml:para>When the -FileRights, -FolderRights, -RegistryRights, or -ActiveDirectoryRights 
parameters are used to provide the access mask, specialized .NET rule types are 
created that can be used with security descriptor objects from the Get-Acl 
cmdlet (the type depends on the parameter used). This switch will prevent the 
specialized rule types from being created, though, and the ACE will be either a 
CommonAce or ObjectAce object.

The specialized rule types can be used directly with Add-AccessControlEntry, 
Remove-AccessControlEntry, and the methods on security descriptor objects 
returned from Get-SecurityDescriptor, so there is usually no need for users to 
use this switch. It is used internally by the module to do ACE conversions.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>New-AccessControlEntry</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
				<maml:name>AceType</maml:name>
				<maml:description>
					<maml:para>Specifies the type of ACE to create. Valid values are AccessAllowed, 
AccessDenied, and SystemAudit. When SystemAudit is used, at least one of the 
-AuditSuccess or -AuditFailure switches must also be used.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>The principal that this ACE will apply to. This can be a string representing 
a user, group, or SID. It can also be a [System.Security.Principal.NTAccount] 
or a [System.Security.Principal.SecurityIdentifier] object.

To supply a principal on a remote system, provide a string the following 
format: &quot;COMPUTERNAME\PRINCIPAL STRING&quot;, e.g., Computer1\RemoteUser (account 
name) or Computer1\S-1-1-0 (SID).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>Controls inheritance and propagation flags for the ACE. By default, the ACE 
will only apply to the object it belongs to (unless you use the -FolderRights, 
-RegistryRights, -WmiNamespaceRights, or -ActiveDirectoryRights parameters). 

By default, -FolderRights apply to the Object, ChildContainers, and 
ChildObjects (or the folder, sub-folders and files) and -RegistryRights, 
-WmiNamespaceRights, and -ActiveDirectoryRights apply to the Object and 
ChildContainers.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OnlyApplyToThisContainer</maml:name>
				<maml:description>
					<maml:para>When this switch parameter is enabled, only direct children will inherit the 
ACE. Children of the direct children will not inherit it.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ObjectAceType</maml:name>
				<maml:description>
					<maml:para>Specifies a property, property set, extended right, validated write, or class 
object that this ACE will apply to. 

The parameter takes a string, a GUID (which can also be a string), or the 
output from the Get-ADObjectAceGuid function. If a string or GUID is provided, 
the Get-ADObjectAceGuid function is called internally.

Wildcards are permitted. If more than one result is returned, the user will be 
prompted to select the proper object ACE GUID.

It is possible for more than one result to be returned with a string input, 
even if no wildcards were specified. This can happen if the name or GUID are 
shared among types (property, class object, extended right, validated write, 
etc). To prevent the prompt in a script, use a call to Get-ADObjectAceGuid with
the -TypesToSearch parameter limiting the returned type. See the help for that 
function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>InheritedObjectAceType</maml:name>
				<maml:description>
					<maml:para>Specifies the type of object that this ACE will apply to, e.g., organizational 
unit, user object, etc.

The parameter takes a string, a GUID (which can also be a string), or the 
output from the Get-ADObjectAceGuid function. If a string or GUID is provided, 
the Get-ADObjectAceGuid function is called internally.

Wildcards are permitted. If more than one result is returned, the user will be 
prompted to select the proper object ACE GUID.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>New-AccessControlEntry</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
				<maml:name>AceType</maml:name>
				<maml:description>
					<maml:para>Specifies the type of ACE to create. Valid values are AccessAllowed, 
AccessDenied, and SystemAudit. When SystemAudit is used, at least one of the 
-AuditSuccess or -AuditFailure switches must also be used.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>The principal that this ACE will apply to. This can be a string representing 
a user, group, or SID. It can also be a [System.Security.Principal.NTAccount] 
or a [System.Security.Principal.SecurityIdentifier] object.

To supply a principal on a remote system, provide a string the following 
format: &quot;COMPUTERNAME\PRINCIPAL STRING&quot;, e.g., Computer1\RemoteUser (account 
name) or Computer1\S-1-1-0 (SID).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>Controls inheritance and propagation flags for the ACE. By default, the ACE 
will only apply to the object it belongs to (unless you use the -FolderRights, 
-RegistryRights, -WmiNamespaceRights, or -ActiveDirectoryRights parameters). 

By default, -FolderRights apply to the Object, ChildContainers, and 
ChildObjects (or the folder, sub-folders and files) and -RegistryRights, 
-WmiNamespaceRights, and -ActiveDirectoryRights apply to the Object and 
ChildContainers.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OnlyApplyToThisContainer</maml:name>
				<maml:description>
					<maml:para>When this switch parameter is enabled, only direct children will inherit the 
ACE. Children of the direct children will not inherit it.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LogicalShareRights</maml:name>
				<maml:description>
					<maml:para>Specifies the access mask for the ACE using a share specific enumeration.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">LogicalShareRights</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>New-AccessControlEntry</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
				<maml:name>AceType</maml:name>
				<maml:description>
					<maml:para>Specifies the type of ACE to create. Valid values are AccessAllowed, 
AccessDenied, and SystemAudit. When SystemAudit is used, at least one of the 
-AuditSuccess or -AuditFailure switches must also be used.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>The principal that this ACE will apply to. This can be a string representing 
a user, group, or SID. It can also be a [System.Security.Principal.NTAccount] 
or a [System.Security.Principal.SecurityIdentifier] object.

To supply a principal on a remote system, provide a string the following 
format: &quot;COMPUTERNAME\PRINCIPAL STRING&quot;, e.g., Computer1\RemoteUser (account 
name) or Computer1\S-1-1-0 (SID).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>Controls inheritance and propagation flags for the ACE. By default, the ACE 
will only apply to the object it belongs to (unless you use the -FolderRights, 
-RegistryRights, -WmiNamespaceRights, or -ActiveDirectoryRights parameters). 

By default, -FolderRights apply to the Object, ChildContainers, and 
ChildObjects (or the folder, sub-folders and files) and -RegistryRights, 
-WmiNamespaceRights, and -ActiveDirectoryRights apply to the Object and 
ChildContainers.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OnlyApplyToThisContainer</maml:name>
				<maml:description>
					<maml:para>When this switch parameter is enabled, only direct children will inherit the 
ACE. Children of the direct children will not inherit it.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PrinterRights</maml:name>
				<maml:description>
					<maml:para>Specifies the access mask for the ACE using a printer specific enumeration.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PrinterRights</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>New-AccessControlEntry</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
				<maml:name>AceType</maml:name>
				<maml:description>
					<maml:para>Specifies the type of ACE to create. Valid values are AccessAllowed, 
AccessDenied, and SystemAudit. When SystemAudit is used, at least one of the 
-AuditSuccess or -AuditFailure switches must also be used.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>The principal that this ACE will apply to. This can be a string representing 
a user, group, or SID. It can also be a [System.Security.Principal.NTAccount] 
or a [System.Security.Principal.SecurityIdentifier] object.

To supply a principal on a remote system, provide a string the following 
format: &quot;COMPUTERNAME\PRINCIPAL STRING&quot;, e.g., Computer1\RemoteUser (account 
name) or Computer1\S-1-1-0 (SID).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>Controls inheritance and propagation flags for the ACE. By default, the ACE 
will only apply to the object it belongs to (unless you use the -FolderRights, 
-RegistryRights, -WmiNamespaceRights, or -ActiveDirectoryRights parameters). 

By default, -FolderRights apply to the Object, ChildContainers, and 
ChildObjects (or the folder, sub-folders and files) and -RegistryRights, 
-WmiNamespaceRights, and -ActiveDirectoryRights apply to the Object and 
ChildContainers.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OnlyApplyToThisContainer</maml:name>
				<maml:description>
					<maml:para>When this switch parameter is enabled, only direct children will inherit the 
ACE. Children of the direct children will not inherit it.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WmiNamespaceRights</maml:name>
				<maml:description>
					<maml:para>Specifies the access mask for the ACE using a WMI specific enumeration. Using 
this parameter will also cause the default -AppliesTo setting to change to the 
Object and ChildContainers.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">WmiNamespaceRights</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>New-AccessControlEntry</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
				<maml:name>AceType</maml:name>
				<maml:description>
					<maml:para>Specifies the type of ACE to create. Valid values are AccessAllowed, 
AccessDenied, and SystemAudit. When SystemAudit is used, at least one of the 
-AuditSuccess or -AuditFailure switches must also be used.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>The principal that this ACE will apply to. This can be a string representing 
a user, group, or SID. It can also be a [System.Security.Principal.NTAccount] 
or a [System.Security.Principal.SecurityIdentifier] object.

To supply a principal on a remote system, provide a string the following 
format: &quot;COMPUTERNAME\PRINCIPAL STRING&quot;, e.g., Computer1\RemoteUser (account 
name) or Computer1\S-1-1-0 (SID).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>Controls inheritance and propagation flags for the ACE. By default, the ACE 
will only apply to the object it belongs to (unless you use the -FolderRights, 
-RegistryRights, -WmiNamespaceRights, or -ActiveDirectoryRights parameters). 

By default, -FolderRights apply to the Object, ChildContainers, and 
ChildObjects (or the folder, sub-folders and files) and -RegistryRights, 
-WmiNamespaceRights, and -ActiveDirectoryRights apply to the Object and 
ChildContainers.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OnlyApplyToThisContainer</maml:name>
				<maml:description>
					<maml:para>When this switch parameter is enabled, only direct children will inherit the 
ACE. Children of the direct children will not inherit it.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WsManAccessRights</maml:name>
				<maml:description>
					<maml:para>Specifies the access mask for the ACE using a WsMan specific enumeration.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">WsManAccessRights</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>New-AccessControlEntry</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
				<maml:name>AceType</maml:name>
				<maml:description>
					<maml:para>Specifies the type of ACE to create. Valid values are AccessAllowed, 
AccessDenied, and SystemAudit. When SystemAudit is used, at least one of the 
-AuditSuccess or -AuditFailure switches must also be used.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>The principal that this ACE will apply to. This can be a string representing 
a user, group, or SID. It can also be a [System.Security.Principal.NTAccount] 
or a [System.Security.Principal.SecurityIdentifier] object.

To supply a principal on a remote system, provide a string the following 
format: &quot;COMPUTERNAME\PRINCIPAL STRING&quot;, e.g., Computer1\RemoteUser (account 
name) or Computer1\S-1-1-0 (SID).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>Controls inheritance and propagation flags for the ACE. By default, the ACE 
will only apply to the object it belongs to (unless you use the -FolderRights, 
-RegistryRights, -WmiNamespaceRights, or -ActiveDirectoryRights parameters). 

By default, -FolderRights apply to the Object, ChildContainers, and 
ChildObjects (or the folder, sub-folders and files) and -RegistryRights, 
-WmiNamespaceRights, and -ActiveDirectoryRights apply to the Object and 
ChildContainers.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OnlyApplyToThisContainer</maml:name>
				<maml:description>
					<maml:para>When this switch parameter is enabled, only direct children will inherit the 
ACE. Children of the direct children will not inherit it.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ServiceAccessRights</maml:name>
				<maml:description>
					<maml:para>Specifies the access mask for the ACE using a service specific enumeration.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ServiceAccessRights</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>New-AccessControlEntry</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
				<maml:name>AceType</maml:name>
				<maml:description>
					<maml:para>Specifies the type of ACE to create. Valid values are AccessAllowed, 
AccessDenied, and SystemAudit. When SystemAudit is used, at least one of the 
-AuditSuccess or -AuditFailure switches must also be used.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>The principal that this ACE will apply to. This can be a string representing 
a user, group, or SID. It can also be a [System.Security.Principal.NTAccount] 
or a [System.Security.Principal.SecurityIdentifier] object.

To supply a principal on a remote system, provide a string the following 
format: &quot;COMPUTERNAME\PRINCIPAL STRING&quot;, e.g., Computer1\RemoteUser (account 
name) or Computer1\S-1-1-0 (SID).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>Controls inheritance and propagation flags for the ACE. By default, the ACE 
will only apply to the object it belongs to (unless you use the -FolderRights, 
-RegistryRights, -WmiNamespaceRights, or -ActiveDirectoryRights parameters). 

By default, -FolderRights apply to the Object, ChildContainers, and 
ChildObjects (or the folder, sub-folders and files) and -RegistryRights, 
-WmiNamespaceRights, and -ActiveDirectoryRights apply to the Object and 
ChildContainers.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OnlyApplyToThisContainer</maml:name>
				<maml:description>
					<maml:para>When this switch parameter is enabled, only direct children will inherit the 
ACE. Children of the direct children will not inherit it.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>GenericAceRights</maml:name>
				<maml:description>
					<maml:para>Specifies the access mask for the ACE using the generic access rights enumeration.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">GenericAceRights</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>New-AccessControlEntry</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
				<maml:name>AceType</maml:name>
				<maml:description>
					<maml:para>Specifies the type of ACE to create. Valid values are AccessAllowed, 
AccessDenied, and SystemAudit. When SystemAudit is used, at least one of the 
-AuditSuccess or -AuditFailure switches must also be used.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>The principal that this ACE will apply to. This can be a string representing 
a user, group, or SID. It can also be a [System.Security.Principal.NTAccount] 
or a [System.Security.Principal.SecurityIdentifier] object.

To supply a principal on a remote system, provide a string the following 
format: &quot;COMPUTERNAME\PRINCIPAL STRING&quot;, e.g., Computer1\RemoteUser (account 
name) or Computer1\S-1-1-0 (SID).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>Controls inheritance and propagation flags for the ACE. By default, the ACE 
will only apply to the object it belongs to (unless you use the -FolderRights, 
-RegistryRights, -WmiNamespaceRights, or -ActiveDirectoryRights parameters). 

By default, -FolderRights apply to the Object, ChildContainers, and 
ChildObjects (or the folder, sub-folders and files) and -RegistryRights, 
-WmiNamespaceRights, and -ActiveDirectoryRights apply to the Object and 
ChildContainers.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OnlyApplyToThisContainer</maml:name>
				<maml:description>
					<maml:para>When this switch parameter is enabled, only direct children will inherit the 
ACE. Children of the direct children will not inherit it.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>StandardAccessRights</maml:name>
				<maml:description>
					<maml:para>Specifies the access mask for the ACE using the standard access rights enumeration.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">StandardAccessRights</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>New-AccessControlEntry</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
				<maml:name>AceType</maml:name>
				<maml:description>
					<maml:para>Specifies the type of ACE to create. Valid values are AccessAllowed, 
AccessDenied, and SystemAudit. When SystemAudit is used, at least one of the 
-AuditSuccess or -AuditFailure switches must also be used.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>The principal that this ACE will apply to. This can be a string representing 
a user, group, or SID. It can also be a [System.Security.Principal.NTAccount] 
or a [System.Security.Principal.SecurityIdentifier] object.

To supply a principal on a remote system, provide a string the following 
format: &quot;COMPUTERNAME\PRINCIPAL STRING&quot;, e.g., Computer1\RemoteUser (account 
name) or Computer1\S-1-1-0 (SID).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>Controls inheritance and propagation flags for the ACE. By default, the ACE 
will only apply to the object it belongs to (unless you use the -FolderRights, 
-RegistryRights, -WmiNamespaceRights, or -ActiveDirectoryRights parameters). 

By default, -FolderRights apply to the Object, ChildContainers, and 
ChildObjects (or the folder, sub-folders and files) and -RegistryRights, 
-WmiNamespaceRights, and -ActiveDirectoryRights apply to the Object and 
ChildContainers.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OnlyApplyToThisContainer</maml:name>
				<maml:description>
					<maml:para>When this switch parameter is enabled, only direct children will inherit the 
ACE. Children of the direct children will not inherit it.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ProcessAccessRights</maml:name>
				<maml:description>
					<maml:para>Specifies the access mask for the ACE using a process specific enumeration.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ProcessAccessRights</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="0">
			<maml:name>AceType</maml:name>
			<maml:description>
				<maml:para>Specifies the type of ACE to create. Valid values are AccessAllowed, 
AccessDenied, and SystemAudit. When SystemAudit is used, at least one of the 
-AuditSuccess or -AuditFailure switches must also be used.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>AccessAllowed</dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
			<maml:name>Principal</maml:name>
			<maml:description>
				<maml:para>The principal that this ACE will apply to. This can be a string representing 
a user, group, or SID. It can also be a [System.Security.Principal.NTAccount] 
or a [System.Security.Principal.SecurityIdentifier] object.

To supply a principal on a remote system, provide a string the following 
format: &quot;COMPUTERNAME\PRINCIPAL STRING&quot;, e.g., Computer1\RemoteUser (account 
name) or Computer1\S-1-1-0 (SID).</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FileRights</maml:name>
			<maml:description>
				<maml:para>Specifies the access mask for the ACE using a file system specific enumeration.
The only difference between this parameter and the -FolderRighs parameter is 
that -FolderRights has a different -AppliesTo default. If the -FileRights 
parameter is used without an -AppliesTo parameter, the default -AppliesTo value 
of Object is used.

If this parameter is used, the object output by the function will be either a 
FileSystemAccessRule or a FileSystemAuditRule type (unless the -Generic switch 
is used).</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">FileSystemRights</command:parameterValue>
			<dev:type>
				<maml:name>FileSystemRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AppliesTo</maml:name>
			<maml:description>
				<maml:para>Controls inheritance and propagation flags for the ACE. By default, the ACE 
will only apply to the object it belongs to (unless you use the -FolderRights, 
-RegistryRights, -WmiNamespaceRights, or -ActiveDirectoryRights parameters). 

By default, -FolderRights apply to the Object, ChildContainers, and 
ChildObjects (or the folder, sub-folders and files) and -RegistryRights, 
-WmiNamespaceRights, and -ActiveDirectoryRights apply to the Object and 
ChildContainers.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			<dev:type>
				<maml:name>AppliesTo</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>OnlyApplyToThisContainer</maml:name>
			<maml:description>
				<maml:para>When this switch parameter is enabled, only direct children will inherit the 
ACE. Children of the direct children will not inherit it.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GenericAce</maml:name>
			<maml:description>
				<maml:para>When the -FileRights, -FolderRights, -RegistryRights, or -ActiveDirectoryRights 
parameters are used to provide the access mask, specialized .NET rule types are 
created that can be used with security descriptor objects from the Get-Acl 
cmdlet (the type depends on the parameter used). This switch will prevent the 
specialized rule types from being created, though, and the ACE will be either a 
CommonAce or ObjectAce object.

The specialized rule types can be used directly with Add-AccessControlEntry, 
Remove-AccessControlEntry, and the methods on security descriptor objects 
returned from Get-SecurityDescriptor, so there is usually no need for users to 
use this switch. It is used internally by the module to do ACE conversions.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FolderRights</maml:name>
			<maml:description>
				<maml:para>Specifies the access mask for the ACE using a file system specific enumeration. 
The only difference between this parameter and the -FileRighs parameter is that 
-FileRights has a different -AppliesTo default. If the -FolderRights parameter 
is used without an -AppliesTo parameter, the default -AppliesTo value of 
Object, ChildContainers, ChildObjects is used.

If this parameter is used, the object output by the function will be either a 
FileSystemAccessRule or a FileSystemAuditRule type (unless the -Generic switch 
is used).</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">FileSystemRights</command:parameterValue>
			<dev:type>
				<maml:name>FileSystemRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RegistryRights</maml:name>
			<maml:description>
				<maml:para>Specifies the access mask for the ACE using a registry specific enumeration. 
Using this parameter will also cause the default -AppliesTo setting to change 
to the Object and ChildContainers, and the output object to be either a 
RegistryAccessRule or RegistryAuditRule type (unless the -Generic switch is 
used).</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">RegistryRights</command:parameterValue>
			<dev:type>
				<maml:name>RegistryRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ActiveDirectoryRights</maml:name>
			<maml:description>
				<maml:para>Specifies the access mask for the ACE using an Active Directory specific 
enumeration. Using this parameter will also cause the default -AppliesTo 
setting to change to the Object and ChildContainers, and the output object to 
be either an ActiveDirectoryAccessRule or ActiveDirectoryAuditRule type (unless
the -Generic switch is used).</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ActiveDirectoryRights</command:parameterValue>
			<dev:type>
				<maml:name>ActiveDirectoryRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ObjectAceType</maml:name>
			<maml:description>
				<maml:para>Specifies a property, property set, extended right, validated write, or class 
object that this ACE will apply to. 

The parameter takes a string, a GUID (which can also be a string), or the 
output from the Get-ADObjectAceGuid function. If a string or GUID is provided, 
the Get-ADObjectAceGuid function is called internally.

Wildcards are permitted. If more than one result is returned, the user will be 
prompted to select the proper object ACE GUID.

It is possible for more than one result to be returned with a string input, 
even if no wildcards were specified. This can happen if the name or GUID are 
shared among types (property, class object, extended right, validated write, 
etc). To prevent the prompt in a script, use a call to Get-ADObjectAceGuid with
the -TypesToSearch parameter limiting the returned type. See the help for that 
function for more information.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>InheritedObjectAceType</maml:name>
			<maml:description>
				<maml:para>Specifies the type of object that this ACE will apply to, e.g., organizational 
unit, user object, etc.

The parameter takes a string, a GUID (which can also be a string), or the 
output from the Get-ADObjectAceGuid function. If a string or GUID is provided, 
the Get-ADObjectAceGuid function is called internally.

Wildcards are permitted. If more than one result is returned, the user will be 
prompted to select the proper object ACE GUID.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AccessMask</maml:name>
			<maml:description>
				<maml:para>Allows for any numeric value for the AccessMask. This is usually used when 
creating an ACE for an object that the PowerShellAccessControl module doesn&apos;t 
already handle.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AceFlags</maml:name>
			<maml:description>
				<maml:para>This parameter is for advanced use only. It allows the -AppliesTo, 
-OnlyApplyToThisContainer, -AuditSuccess, and/or -AuditFailure parameters to be
omitted when used to define a generic access control entry. If this parameter 
is provided along with the other parameters, the other parameters will take 
precedence, e.g., if -AppliesTo is provided, and it specifies Object, but 
-AceFlags is provided and it specifies that the ACE should apply to the Object 
and ChildContainers, the resulting ACE will use the -AppliesTo variable, and 
will apply only to the Object.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">AceFlags</command:parameterValue>
			<dev:type>
				<maml:name>AceFlags</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LogicalShareRights</maml:name>
			<maml:description>
				<maml:para>Specifies the access mask for the ACE using a share specific enumeration.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">LogicalShareRights</command:parameterValue>
			<dev:type>
				<maml:name>LogicalShareRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PrinterRights</maml:name>
			<maml:description>
				<maml:para>Specifies the access mask for the ACE using a printer specific enumeration.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PrinterRights</command:parameterValue>
			<dev:type>
				<maml:name>PrinterRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WmiNamespaceRights</maml:name>
			<maml:description>
				<maml:para>Specifies the access mask for the ACE using a WMI specific enumeration. Using 
this parameter will also cause the default -AppliesTo setting to change to the 
Object and ChildContainers.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">WmiNamespaceRights</command:parameterValue>
			<dev:type>
				<maml:name>WmiNamespaceRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WsManAccessRights</maml:name>
			<maml:description>
				<maml:para>Specifies the access mask for the ACE using a WsMan specific enumeration.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">WsManAccessRights</command:parameterValue>
			<dev:type>
				<maml:name>WsManAccessRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ServiceAccessRights</maml:name>
			<maml:description>
				<maml:para>Specifies the access mask for the ACE using a service specific enumeration.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ServiceAccessRights</command:parameterValue>
			<dev:type>
				<maml:name>ServiceAccessRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GenericAceRights</maml:name>
			<maml:description>
				<maml:para>Specifies the access mask for the ACE using the generic access rights enumeration.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">GenericAceRights</command:parameterValue>
			<dev:type>
				<maml:name>GenericAceRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>StandardAccessRights</maml:name>
			<maml:description>
				<maml:para>Specifies the access mask for the ACE using the standard access rights enumeration.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">StandardAccessRights</command:parameterValue>
			<dev:type>
				<maml:name>StandardAccessRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ProcessAccessRights</maml:name>
			<maml:description>
				<maml:para>Specifies the access mask for the ACE using a process specific enumeration.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ProcessAccessRights</command:parameterValue>
			<dev:type>
				<maml:name>ProcessAccessRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para>The return type varies depending on the parameters. If the -Generic switch is used, or any access mask parameter other than -FileRights, -FolderRights, -RegistryRights, or -ActiveDirectoryRights is used, the return type is 
System.Security.AccessControl.CommonAce (or System.Security.AccessControl.ObjectAce when certain Active Directory ACEs are created).

Otherwise, the return type is listed below (the parameter for the access mask is listed on the left, and the return types are listed on the right):
FileRights or FolderRights -&gt; FileSystemAccessRule/FileSystemAuditRule

RegistryRights -&gt; RegistryAccessRule/RegistryAuditRule

ActiveDirectoryRights -&gt; ActiveDirectoryAccessRule/ActiveDirectoryAuditRule</maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
	</command:returnValue>
		</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>This function can be used to create ACEs that can be directly used with .NET 
security descriptor objects obtained from Get-Acl.</maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------  Example 1  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; $SD = Get-Acl -Audit C:\powershell
$access = New-AccessControlEntry -FolderRights Modify -Principal Users
$audit = New-AccessControlEntry -AceType SystemAudit -FolderRights FullControl -Principal Users -AuditFailure
$SD.AddAccessRule($access)
$SD.AddAuditRule($audit)
$SD.Access
$SD.Audit</dev:code>
			<dev:remarks>
				<maml:para>These commands get the security descriptor for a folder named &apos;c:\powershell&apos; using the native Get-Acl cmdlet (the Get-SecurityDescriptor function could be used instead). Then two ACEs are created: one to allow Modify rights for the Users group, the other to audit failures for any access. Then the rules are added to the SD, and finally the ACLs are listed to show that the SDs have been modified. Note that this example does not set the SD on the file (think of this as opening the permissions GUI in explorer and not clicking Apply). Set-Acl would be required to make the changes permanent.

NOTE: Because of the -Audit switch parameter, the user must be an administrator. You can leave the audit changes out of the example if you&apos;re not running this as an administrator.</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 2  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; $SD = Get-SecurityDescriptor -Audit C:\powershell\file.txt
$access = New-AccessControlEntry -FileRights Modify -Principal Users
$audit = New-AccessControlEntry -AceType SystemAudit -FileRights FullControl -Principal Users -AuditFailure
$SD.AddAccessRule($access)
$SD.AddAuditRule($audit)
$SD.Access
$SD.Audit
$SD | Format-List</dev:code>
			<dev:remarks>
				<maml:para>Very similar to example #1, except Get-SecurityDescriptor is used (see help on that function for more info). Also, the ACEs are created by using -FileRights parameter instead of -FolderRights. This changes what the ACE applies to by default (you can explicitly change this behavior by using the -AppliesTo parameter).</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 3  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; $SD = Get-Item HKCU:\SOFTWARE | Get-SecurityDescriptor
$SD.AddAccessRule((New-AccessControlEntry -RegistryRights FullControl -Principal Users -OnlyApplyToThisContainer -AceType AccessDenied))
$SD   # View the ACL
$SD.Access # View the ACL with more detail</dev:code>
			<dev:remarks>
				<maml:para>This command adds a Deny ACE for the Users group that will apply only to the current key (subkeys won&apos;t inherit the ACE) to the DACL. It then displays the DACL two different ways.

NOTE: This doesn&apos;t actually modify the SD that was obtained in the first line. It simply modifies the copy in memory. You still have to apply the SD back to the object. See Set-Acl or Set-SecurityDescriptor for more info.</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 4  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; New-AccessControlEntry -AceType SystemAudit -ServiceAccessRights Start, Stop -Principal Users -AuditSuccess -AuditFailure</dev:code>
			<dev:remarks>
				<maml:para>This command creates an ACE that will audit successful and failed start and stop attempts by the Users group for the &apos;BITS&apos; service.</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 5  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; New-AccessControlEntry -WmiNamespaceRights RemoteEnable -Principal $env:USERNAME -OnlyApplyToThisContainer</dev:code>
			<dev:remarks>
				<maml:para>This example creates an ACE with the WMI &apos;Remote Enable&apos; access mask for the current user. The ACE will only be applied to the object and direct child objects. Grandchild object will not inherit this entry.</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 6  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; $SD = Get-ADUser $env:USERNAME | Get-SecurityDescriptor
PS C:\&gt; $SD | Get-AccessControlEntry
</dev:code>
			<dev:remarks>
				<maml:para>This example requires the ActiveDirectory module as written. If you do not have 
this module, you can still use either an [adsi] object, or a string 
representation of the distinguished name for your user object. Simply pass 
either of those to the Get-AccessControlEntry function.

The previous command will show all discretionary ACEs for the current user&apos;s
AD user object. AD objects generally have much larger ACLs than other securable
objects, so there should be several ACEs returned.

Get-AccessControlEntry can be used to filter the returned ACEs. Here are some
examples of filtering (make sure that $SD has been defined):

PS C:\&gt; $SD | Get-AccessControlEntry -InheritedObjectAceType user

PS C:\&gt; $SD | Get-AccessControlEntry -InheritedObjectAceType user -Specific

PS C:\&gt; $SD | Get-AccessControlEntry -ObjectAceType *password*
PS C:\&gt; $SD | Get-AccessControlEntry -ObjectAceType (Get-ADObjectAceGuid)
</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>about_PowerShellAccessControl_Module</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADObjectAceGuid</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-SecurityDescriptor</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Acl</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-SecurityDescriptor</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>New-AdaptedSecurityDescriptor</command:name>
		<maml:description>
			<maml:para>Creates an adapted view of a security descriptor from its SDDL or binary form.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>AdaptedSecurityDescriptor</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>New-AdaptedSecurityDescriptor attempts to take the SDDL or binary form of a security descriptor and provide an object that resembles the objects returned from calls to Get-Acl.

This function is for advanced use when Get-SecurityDescriptor can&apos;t handle the object you&apos;re using.

The following properties/methods are created on the SD object:
  * Path - The path to the object that the SD belongs to
  * DisplayName - A description of the object that the security descriptor belongs to (sometimes the same as the Path property)
  * SecurityDescriptor - The underlying SecurityDescriptor object
  * AddAccessRule() - Adds a rule that was created using New-AccessControlEntry
  * AddAuditRule() - See AddAccessRule()
  * GetAccessMaskEnumeration() - Gets the access mask enumeration
  * GetSecurityDescriptorBinaryForm() - Gets the SD in binary form
  * RemoveAccessRule() - Removes a specific access or audit rule (the ACE is supplied as a parameter)
  * RemoveAuditRule() - See RemoveAccessRule()
  * Access - Provide a list of the ACEs in the DACL
  * Audit - Provide a list of the ACEs in the SACL
  * AccessToString - Provide a string that contains some of the Access informaton
  * AuditToString - Provide a string that contains some of the Audit information
  * Group - The owning group (not really used)
  * Owner - The owner of the object
  * Sddl - The SDDL representaton of the SD

When the default formatting is used, the following information is shown for each ACE:
 - The type (AccessAllowed, AccessDenied, Success Audit, Failure Audit)
 - The IdentityReference
 - The access mask
 - Whether or not the ACE is inherited
 - What the ACE applies to (the formatting system shows a shorthand for this):
     O = This object, e.g., a folder object
     CC = child containers, e.g., sub folder objects
     CO = child leaf objects, e.g., files
 - Whether or not the ACE only applies to direct children</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-AdaptedSecurityDescriptor</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
				<maml:name>Sddl</maml:name>
				<maml:description>
					<maml:para>SDDL form of security descriptor</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AccessMaskEnumeration</maml:name>
				<maml:description>
					<maml:para>An enumeration that is used to translate the numeric access mask to friendly text when viewing the access and/or audit entries of the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Type</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>The path to the security descriptor. This is used for identifying the object that the security descriptor belongs to.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ObjectType</maml:name>
				<maml:description>
					<maml:para>This keeps track of the type of object that the security descriptor belongs to. This property (and the -SdPath property) is important for the Set-SecurityDescriptor function. If the security descriptor isn&apos;t going to be saved, then this property isn&apos;t as important.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ResourceType</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>SdPath</maml:name>
				<maml:description>
					<maml:para>This keeps track of the path to the object that the security descriptor belongs to. This property (and the -ObjectType property) is important for the Set-SecurityDescriptor function. If the security descriptor isn&apos;t going to be saved, then this property isn&apos;t as important. This property differs from the -Path property because some ObjectTypes have different path formats than the PowerShell providers can handle.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>A friendly name for the object that the security descriptor belongs to.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>IsContainer</maml:name>
				<maml:description>
					<maml:para>Specifies whether or not the security descriptor belongs to a container, e.g., folder, registry key, WMI namespace, or any other securable object that can have children. If this isn&apos;t specified, it&apos;s assumed that the security descriptor belongs to an object that is not a container.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>IsDsObject</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DsObjectClass</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>New-AdaptedSecurityDescriptor</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
				<maml:name>BinarySD</maml:name>
				<maml:description>
					<maml:para>Binary form of security descriptor</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">Byte[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AccessMaskEnumeration</maml:name>
				<maml:description>
					<maml:para>An enumeration that is used to translate the numeric access mask to friendly text when viewing the access and/or audit entries of the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Type</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>The path to the security descriptor. This is used for identifying the object that the security descriptor belongs to.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ObjectType</maml:name>
				<maml:description>
					<maml:para>This keeps track of the type of object that the security descriptor belongs to. This property (and the -SdPath property) is important for the Set-SecurityDescriptor function. If the security descriptor isn&apos;t going to be saved, then this property isn&apos;t as important.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ResourceType</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>SdPath</maml:name>
				<maml:description>
					<maml:para>This keeps track of the path to the object that the security descriptor belongs to. This property (and the -ObjectType property) is important for the Set-SecurityDescriptor function. If the security descriptor isn&apos;t going to be saved, then this property isn&apos;t as important. This property differs from the -Path property because some ObjectTypes have different path formats than the PowerShell providers can handle.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>A friendly name for the object that the security descriptor belongs to.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>IsContainer</maml:name>
				<maml:description>
					<maml:para>Specifies whether or not the security descriptor belongs to a container, e.g., folder, registry key, WMI namespace, or any other securable object that can have children. If this isn&apos;t specified, it&apos;s assumed that the security descriptor belongs to an object that is not a container.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>IsDsObject</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DsObjectClass</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Sddl</maml:name>
			<maml:description>
				<maml:para>SDDL form of security descriptor</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AccessMaskEnumeration</maml:name>
			<maml:description>
				<maml:para>An enumeration that is used to translate the numeric access mask to friendly text when viewing the access and/or audit entries of the security descriptor.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Type</command:parameterValue>
			<dev:type>
				<maml:name>Type</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>The path to the security descriptor. This is used for identifying the object that the security descriptor belongs to.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ObjectType</maml:name>
			<maml:description>
				<maml:para>This keeps track of the type of object that the security descriptor belongs to. This property (and the -SdPath property) is important for the Set-SecurityDescriptor function. If the security descriptor isn&apos;t going to be saved, then this property isn&apos;t as important.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ResourceType</command:parameterValue>
			<dev:type>
				<maml:name>ResourceType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>SdPath</maml:name>
			<maml:description>
				<maml:para>This keeps track of the path to the object that the security descriptor belongs to. This property (and the -ObjectType property) is important for the Set-SecurityDescriptor function. If the security descriptor isn&apos;t going to be saved, then this property isn&apos;t as important. This property differs from the -Path property because some ObjectTypes have different path formats than the PowerShell providers can handle.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>A friendly name for the object that the security descriptor belongs to.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>IsContainer</maml:name>
			<maml:description>
				<maml:para>Specifies whether or not the security descriptor belongs to a container, e.g., folder, registry key, WMI namespace, or any other securable object that can have children. If this isn&apos;t specified, it&apos;s assumed that the security descriptor belongs to an object that is not a container.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>IsDsObject</maml:name>
			<maml:description>
				<maml:para></maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DsObjectClass</maml:name>
			<maml:description>
				<maml:para></maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>BinarySD</maml:name>
			<maml:description>
				<maml:para>Binary form of security descriptor</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Byte[]</command:parameterValue>
			<dev:type>
				<maml:name>Byte[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
	</command:returnValue>
		</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------  Example 1  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-CimInstance Win32_LogicalShareSecuritySetting | Get-Win32SecurityDescriptor -Sddl | New-AdaptedSecurityDescriptor</dev:code>
			<dev:remarks>
				<maml:para>This will get a list of all shares on the computer, and get an &quot;adapted&quot; security descriptor for each one. Since no extra information was provided, there will be no path information or display name associated with the security descriptor. Also, the access control entries will show numeric access masks since an access mask enumeration wasn&apos;t supplied. See example #2 for an example where this information is provided.</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 2  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-CimInstance Win32_LogicalShareSecuritySetting | Get-Win32SecurityDescriptor -Sddl | foreach { New-AdaptedSecurityDescriptor -AccessMaskEnumeration ([PowerShellAccessControl.LogicalShareRights]) -Path $_.Path -Sddl $_.Sddl }</dev:code>
			<dev:remarks>
				<maml:para>This is the same as example #1, except the resulting security descriptors will be easier to read, and they will have path information that shows the object that owns the security descriptor.

NOTE: The Get-SecurityDescriptor function should be used to get share information instead of New-AdaptedSecurityDescriptor</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 3  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; New-AdaptedSecurityDescriptor -BinarySD (gp HKLM:\SOFTWARE\Microsoft\Ole | select -exp MachineAccessRestriction)</dev:code>
			<dev:remarks>
				<maml:para>This is an example of converting a binary security descriptor into a more readable security descriptor.</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>about_PowerShellAccessControl_Module</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Remove-AccessControlEntry</command:name>
		<maml:description>
			<maml:para>Remove an access control entry to a security descriptor.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>AccessControlEntry</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>Remove-AccessControlEntry allows the removal of access control entries (ACEs) from either the discretionary access control list (DACL), which deals with object access, or the system access control list (SACL), which deals with object auditing).

The function will automatically determine which ACL to modify by inspecting the ACE object.

There are four major ways to use this function:
1. Remove a specific set of permissions from any existing matching ACEs
   This is the default behavior when you supply a security object and an ACE (which can be specified
   through the -AceObject parameter, through the ACE creation parameters (which resemble
   New-AccessControlEntry), or from output from the Get-AccessControlEntry function. 

   An example would be to remove &apos;Write&apos; allow access from the &apos;Users&apos; group when an existing ACE that
   grants &apos;Read&apos; and &apos;Write&apos; access already exists. After running this function, the existing ACE would
   only grant &apos;Read&apos; access. See the examples section for more information.

2. Remove a specific ACE
   This is the same as #1 above, except the -Specific switch is applied. Using the example mentioned,
   running the function with the -Specific switch wouldn&apos;t modify the ACL since the supplied ACE with
   &apos;Write&apos; permission wouldn&apos;t match the existing ACE with &apos;Read&apos; and &apos;Write&apos; permission. See the
   examples section for more information.

3. Remove a specific principal from an ACL
   To remove a specific principal from either ACL, provide a user/group name or a security identifier to
   the -PurgePrincipal parameter. You can also specify the -PurgeAccessRules and/or the -PurgeAuditRules
   to specify which ACLs to remove the principal from (if neither is specified, the function behaves as
   if -PurgeAccessRules was specified).

4. Remove all ACEs from an ACL
   To clear all entries from an ACL, specify the -RemoveAllAccessEntries and/or -RemoveAllAuditEntries
   switch parameters. It is possible to use one at a time, or both at the same time.

The function determines which ACL to remove the ACE from by looking at the ACE&apos;s AceType (either AccessAllowed, AccessDenied, or SystemAudit). It can also look at some other specific rule types, e.g., FileSystemAccessRules, FileSystemAuditRules, RegistryAccessRules, and RegistryAuditRules, and determine which ACL to remove them from.

The function has several different usage scenarios. It will always need to be able to determine two parameters: the SDObject and the AceObject. For more information, please read the detailed parameter information for each in the &apos;Parameters&apos; section. The &apos;Examples&apos; section also provides some examples of each scenario.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-AccessControlEntry</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>SDObject</maml:name>
				<maml:description>
					<maml:para>Specifies the security descriptor that will have an access control entry 
removed from it.

This parameter can be any combination of one or more of the following objects: 
1. A security descriptor object obtained through the Get-Acl cmdlet
2. A security descriptor object obtained through the Get-SecurityDescriptor or 
   New-AdaptedSecurityDescriptor functions
3. An object (including a path string) that the Get-SecurityDescriptor function 
   knows how to handle.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AceObject</maml:name>
				<maml:description>
					<maml:para>This is one or more ACEs to be removed from the security descriptor. Each ACE 
will be removed from each security descriptor in the -SDObject parameter (which 
means more than one -AceObject and/or -SDObject can be provided).

The -AceObject objects can be created via the New-AccessControlEntry, they can 
come from the Access and/or Audit properties of a security descriptor, or they 
can come from Get-AccessControlEntry.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">Object[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the security descriptor to be saved to the securable object. By default,
when a security descriptor object is provided as input to the SDObject 
parameter, the in memory security descriptor is changed, and a separate call to
Set-SecurityDescriptor saves the changes. Using the -Apply switch causes the 
change to be made without a separate call to Set-SecurityDescriptor.

If a non security descriptor object is provided as input  and the -PassThru 
switch is not specified, the default behavior is to set this switch and prompt 
the user before saving the security descriptor (the -Force parameter would
suppress the prompt).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts 
about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the modified security descriptor object. By default, this function does 
not generate any output. This parameter is useful when multiple security 
descriptor modifications need to be made in a single line (each call can be 
piped to the next one).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Specific</maml:name>
				<maml:description>
					<maml:para>Only remove an ACE if it exactly matches the ACE provided in -AceObject or 
through the ACE creation parameters. By default, the function will remove the 
specific access rights from an existing ACE that matches the principal and ACE 
type. For example, under the default behavior, if an ACE granting &apos;FullControl&apos;
exists for the &apos;Users&apos; principal, and the -AceObject passed to this function
has access of &apos;Write&apos;, then only the &apos;Write&apos; access will be removed from the
ACE that exists. If the -Specific switch is specified, though, the example
presented wouldn&apos;t make a change since the &apos;FullConrol&apos; ACE doesn&apos;t match the
&apos;Write&apos; access mask.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Causes the function to prompt for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Remove-AccessControlEntry</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>SDObject</maml:name>
				<maml:description>
					<maml:para>Specifies the security descriptor that will have an access control entry 
removed from it.

This parameter can be any combination of one or more of the following objects: 
1. A security descriptor object obtained through the Get-Acl cmdlet
2. A security descriptor object obtained through the Get-SecurityDescriptor or 
   New-AdaptedSecurityDescriptor functions
3. An object (including a path string) that the Get-SecurityDescriptor function 
   knows how to handle.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>RemoveAllAccessEntries</maml:name>
				<maml:description>
					<maml:para>Remove all discretionary ACEs from the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>RemoveAllAuditEntries</maml:name>
				<maml:description>
					<maml:para>Remove all system ACEs from the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the security descriptor to be saved to the securable object. By default,
when a security descriptor object is provided as input to the SDObject 
parameter, the in memory security descriptor is changed, and a separate call to
Set-SecurityDescriptor saves the changes. Using the -Apply switch causes the 
change to be made without a separate call to Set-SecurityDescriptor.

If a non security descriptor object is provided as input  and the -PassThru 
switch is not specified, the default behavior is to set this switch and prompt 
the user before saving the security descriptor (the -Force parameter would
suppress the prompt).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts 
about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the modified security descriptor object. By default, this function does 
not generate any output. This parameter is useful when multiple security 
descriptor modifications need to be made in a single line (each call can be 
piped to the next one).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Causes the function to prompt for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Remove-AccessControlEntry</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>SDObject</maml:name>
				<maml:description>
					<maml:para>Specifies the security descriptor that will have an access control entry 
removed from it.

This parameter can be any combination of one or more of the following objects: 
1. A security descriptor object obtained through the Get-Acl cmdlet
2. A security descriptor object obtained through the Get-SecurityDescriptor or 
   New-AdaptedSecurityDescriptor functions
3. An object (including a path string) that the Get-SecurityDescriptor function 
   knows how to handle.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PurgeAccessRules</maml:name>
				<maml:description>
					<maml:para>Removes every discretionary (Access) ACE that applies to the principal 
specified in the -Principal parameter.
</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PurgeAuditRules</maml:name>
				<maml:description>
					<maml:para>Removes every system (Audit) ACE that applies to the principal 
specified in the -Principal parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the security descriptor to be saved to the securable object. By default,
when a security descriptor object is provided as input to the SDObject 
parameter, the in memory security descriptor is changed, and a separate call to
Set-SecurityDescriptor saves the changes. Using the -Apply switch causes the 
change to be made without a separate call to Set-SecurityDescriptor.

If a non security descriptor object is provided as input  and the -PassThru 
switch is not specified, the default behavior is to set this switch and prompt 
the user before saving the security descriptor (the -Force parameter would
suppress the prompt).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts 
about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the modified security descriptor object. By default, this function does 
not generate any output. This parameter is useful when multiple security 
descriptor modifications need to be made in a single line (each call can be 
piped to the next one).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Causes the function to prompt for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Remove-AccessControlEntry</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>SDObject</maml:name>
				<maml:description>
					<maml:para>Specifies the security descriptor that will have an access control entry 
removed from it.

This parameter can be any combination of one or more of the following objects: 
1. A security descriptor object obtained through the Get-Acl cmdlet
2. A security descriptor object obtained through the Get-SecurityDescriptor or 
   New-AdaptedSecurityDescriptor functions
3. An object (including a path string) that the Get-SecurityDescriptor function 
   knows how to handle.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the security descriptor to be saved to the securable object. By default,
when a security descriptor object is provided as input to the SDObject 
parameter, the in memory security descriptor is changed, and a separate call to
Set-SecurityDescriptor saves the changes. Using the -Apply switch causes the 
change to be made without a separate call to Set-SecurityDescriptor.

If a non security descriptor object is provided as input  and the -PassThru 
switch is not specified, the default behavior is to set this switch and prompt 
the user before saving the security descriptor (the -Force parameter would
suppress the prompt).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts 
about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the modified security descriptor object. By default, this function does 
not generate any output. This parameter is useful when multiple security 
descriptor modifications need to be made in a single line (each call can be 
piped to the next one).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Specific</maml:name>
				<maml:description>
					<maml:para>Only remove an ACE if it exactly matches the ACE provided in -AceObject or 
through the ACE creation parameters. By default, the function will remove the 
specific access rights from an existing ACE that matches the principal and ACE 
type. For example, under the default behavior, if an ACE granting &apos;FullControl&apos;
exists for the &apos;Users&apos; principal, and the -AceObject passed to this function
has access of &apos;Write&apos;, then only the &apos;Write&apos; access will be removed from the
ACE that exists. If the -Specific switch is specified, though, the example
presented wouldn&apos;t make a change since the &apos;FullConrol&apos; ACE doesn&apos;t match the
&apos;Write&apos; access mask.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AceType</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OnlyApplyToThisContainer</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WsManAccessRights</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">WsManAccessRights</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Causes the function to prompt for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Remove-AccessControlEntry</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>SDObject</maml:name>
				<maml:description>
					<maml:para>Specifies the security descriptor that will have an access control entry 
removed from it.

This parameter can be any combination of one or more of the following objects: 
1. A security descriptor object obtained through the Get-Acl cmdlet
2. A security descriptor object obtained through the Get-SecurityDescriptor or 
   New-AdaptedSecurityDescriptor functions
3. An object (including a path string) that the Get-SecurityDescriptor function 
   knows how to handle.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the security descriptor to be saved to the securable object. By default,
when a security descriptor object is provided as input to the SDObject 
parameter, the in memory security descriptor is changed, and a separate call to
Set-SecurityDescriptor saves the changes. Using the -Apply switch causes the 
change to be made without a separate call to Set-SecurityDescriptor.

If a non security descriptor object is provided as input  and the -PassThru 
switch is not specified, the default behavior is to set this switch and prompt 
the user before saving the security descriptor (the -Force parameter would
suppress the prompt).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts 
about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the modified security descriptor object. By default, this function does 
not generate any output. This parameter is useful when multiple security 
descriptor modifications need to be made in a single line (each call can be 
piped to the next one).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Specific</maml:name>
				<maml:description>
					<maml:para>Only remove an ACE if it exactly matches the ACE provided in -AceObject or 
through the ACE creation parameters. By default, the function will remove the 
specific access rights from an existing ACE that matches the principal and ACE 
type. For example, under the default behavior, if an ACE granting &apos;FullControl&apos;
exists for the &apos;Users&apos; principal, and the -AceObject passed to this function
has access of &apos;Write&apos;, then only the &apos;Write&apos; access will be removed from the
ACE that exists. If the -Specific switch is specified, though, the example
presented wouldn&apos;t make a change since the &apos;FullConrol&apos; ACE doesn&apos;t match the
&apos;Write&apos; access mask.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AceType</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OnlyApplyToThisContainer</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ProcessAccessRights</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ProcessAccessRights</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Causes the function to prompt for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Remove-AccessControlEntry</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>SDObject</maml:name>
				<maml:description>
					<maml:para>Specifies the security descriptor that will have an access control entry 
removed from it.

This parameter can be any combination of one or more of the following objects: 
1. A security descriptor object obtained through the Get-Acl cmdlet
2. A security descriptor object obtained through the Get-SecurityDescriptor or 
   New-AdaptedSecurityDescriptor functions
3. An object (including a path string) that the Get-SecurityDescriptor function 
   knows how to handle.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the security descriptor to be saved to the securable object. By default,
when a security descriptor object is provided as input to the SDObject 
parameter, the in memory security descriptor is changed, and a separate call to
Set-SecurityDescriptor saves the changes. Using the -Apply switch causes the 
change to be made without a separate call to Set-SecurityDescriptor.

If a non security descriptor object is provided as input  and the -PassThru 
switch is not specified, the default behavior is to set this switch and prompt 
the user before saving the security descriptor (the -Force parameter would
suppress the prompt).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts 
about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the modified security descriptor object. By default, this function does 
not generate any output. This parameter is useful when multiple security 
descriptor modifications need to be made in a single line (each call can be 
piped to the next one).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Specific</maml:name>
				<maml:description>
					<maml:para>Only remove an ACE if it exactly matches the ACE provided in -AceObject or 
through the ACE creation parameters. By default, the function will remove the 
specific access rights from an existing ACE that matches the principal and ACE 
type. For example, under the default behavior, if an ACE granting &apos;FullControl&apos;
exists for the &apos;Users&apos; principal, and the -AceObject passed to this function
has access of &apos;Write&apos;, then only the &apos;Write&apos; access will be removed from the
ACE that exists. If the -Specific switch is specified, though, the example
presented wouldn&apos;t make a change since the &apos;FullConrol&apos; ACE doesn&apos;t match the
&apos;Write&apos; access mask.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AceType</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OnlyApplyToThisContainer</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ServiceAccessRights</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ServiceAccessRights</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Causes the function to prompt for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Remove-AccessControlEntry</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>SDObject</maml:name>
				<maml:description>
					<maml:para>Specifies the security descriptor that will have an access control entry 
removed from it.

This parameter can be any combination of one or more of the following objects: 
1. A security descriptor object obtained through the Get-Acl cmdlet
2. A security descriptor object obtained through the Get-SecurityDescriptor or 
   New-AdaptedSecurityDescriptor functions
3. An object (including a path string) that the Get-SecurityDescriptor function 
   knows how to handle.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the security descriptor to be saved to the securable object. By default,
when a security descriptor object is provided as input to the SDObject 
parameter, the in memory security descriptor is changed, and a separate call to
Set-SecurityDescriptor saves the changes. Using the -Apply switch causes the 
change to be made without a separate call to Set-SecurityDescriptor.

If a non security descriptor object is provided as input  and the -PassThru 
switch is not specified, the default behavior is to set this switch and prompt 
the user before saving the security descriptor (the -Force parameter would
suppress the prompt).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts 
about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the modified security descriptor object. By default, this function does 
not generate any output. This parameter is useful when multiple security 
descriptor modifications need to be made in a single line (each call can be 
piped to the next one).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Specific</maml:name>
				<maml:description>
					<maml:para>Only remove an ACE if it exactly matches the ACE provided in -AceObject or 
through the ACE creation parameters. By default, the function will remove the 
specific access rights from an existing ACE that matches the principal and ACE 
type. For example, under the default behavior, if an ACE granting &apos;FullControl&apos;
exists for the &apos;Users&apos; principal, and the -AceObject passed to this function
has access of &apos;Write&apos;, then only the &apos;Write&apos; access will be removed from the
ACE that exists. If the -Specific switch is specified, though, the example
presented wouldn&apos;t make a change since the &apos;FullConrol&apos; ACE doesn&apos;t match the
&apos;Write&apos; access mask.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AceType</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OnlyApplyToThisContainer</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WmiNameSpaceRights</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">WmiNamespaceRights</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Causes the function to prompt for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Remove-AccessControlEntry</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>SDObject</maml:name>
				<maml:description>
					<maml:para>Specifies the security descriptor that will have an access control entry 
removed from it.

This parameter can be any combination of one or more of the following objects: 
1. A security descriptor object obtained through the Get-Acl cmdlet
2. A security descriptor object obtained through the Get-SecurityDescriptor or 
   New-AdaptedSecurityDescriptor functions
3. An object (including a path string) that the Get-SecurityDescriptor function 
   knows how to handle.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the security descriptor to be saved to the securable object. By default,
when a security descriptor object is provided as input to the SDObject 
parameter, the in memory security descriptor is changed, and a separate call to
Set-SecurityDescriptor saves the changes. Using the -Apply switch causes the 
change to be made without a separate call to Set-SecurityDescriptor.

If a non security descriptor object is provided as input  and the -PassThru 
switch is not specified, the default behavior is to set this switch and prompt 
the user before saving the security descriptor (the -Force parameter would
suppress the prompt).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts 
about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the modified security descriptor object. By default, this function does 
not generate any output. This parameter is useful when multiple security 
descriptor modifications need to be made in a single line (each call can be 
piped to the next one).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Specific</maml:name>
				<maml:description>
					<maml:para>Only remove an ACE if it exactly matches the ACE provided in -AceObject or 
through the ACE creation parameters. By default, the function will remove the 
specific access rights from an existing ACE that matches the principal and ACE 
type. For example, under the default behavior, if an ACE granting &apos;FullControl&apos;
exists for the &apos;Users&apos; principal, and the -AceObject passed to this function
has access of &apos;Write&apos;, then only the &apos;Write&apos; access will be removed from the
ACE that exists. If the -Specific switch is specified, though, the example
presented wouldn&apos;t make a change since the &apos;FullConrol&apos; ACE doesn&apos;t match the
&apos;Write&apos; access mask.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AceType</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OnlyApplyToThisContainer</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PrinterRights</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PrinterRights</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Causes the function to prompt for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Remove-AccessControlEntry</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>SDObject</maml:name>
				<maml:description>
					<maml:para>Specifies the security descriptor that will have an access control entry 
removed from it.

This parameter can be any combination of one or more of the following objects: 
1. A security descriptor object obtained through the Get-Acl cmdlet
2. A security descriptor object obtained through the Get-SecurityDescriptor or 
   New-AdaptedSecurityDescriptor functions
3. An object (including a path string) that the Get-SecurityDescriptor function 
   knows how to handle.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the security descriptor to be saved to the securable object. By default,
when a security descriptor object is provided as input to the SDObject 
parameter, the in memory security descriptor is changed, and a separate call to
Set-SecurityDescriptor saves the changes. Using the -Apply switch causes the 
change to be made without a separate call to Set-SecurityDescriptor.

If a non security descriptor object is provided as input  and the -PassThru 
switch is not specified, the default behavior is to set this switch and prompt 
the user before saving the security descriptor (the -Force parameter would
suppress the prompt).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts 
about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the modified security descriptor object. By default, this function does 
not generate any output. This parameter is useful when multiple security 
descriptor modifications need to be made in a single line (each call can be 
piped to the next one).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Specific</maml:name>
				<maml:description>
					<maml:para>Only remove an ACE if it exactly matches the ACE provided in -AceObject or 
through the ACE creation parameters. By default, the function will remove the 
specific access rights from an existing ACE that matches the principal and ACE 
type. For example, under the default behavior, if an ACE granting &apos;FullControl&apos;
exists for the &apos;Users&apos; principal, and the -AceObject passed to this function
has access of &apos;Write&apos;, then only the &apos;Write&apos; access will be removed from the
ACE that exists. If the -Specific switch is specified, though, the example
presented wouldn&apos;t make a change since the &apos;FullConrol&apos; ACE doesn&apos;t match the
&apos;Write&apos; access mask.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AceType</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OnlyApplyToThisContainer</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LogicalShareRights</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">LogicalShareRights</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Causes the function to prompt for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Remove-AccessControlEntry</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>SDObject</maml:name>
				<maml:description>
					<maml:para>Specifies the security descriptor that will have an access control entry 
removed from it.

This parameter can be any combination of one or more of the following objects: 
1. A security descriptor object obtained through the Get-Acl cmdlet
2. A security descriptor object obtained through the Get-SecurityDescriptor or 
   New-AdaptedSecurityDescriptor functions
3. An object (including a path string) that the Get-SecurityDescriptor function 
   knows how to handle.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the security descriptor to be saved to the securable object. By default,
when a security descriptor object is provided as input to the SDObject 
parameter, the in memory security descriptor is changed, and a separate call to
Set-SecurityDescriptor saves the changes. Using the -Apply switch causes the 
change to be made without a separate call to Set-SecurityDescriptor.

If a non security descriptor object is provided as input  and the -PassThru 
switch is not specified, the default behavior is to set this switch and prompt 
the user before saving the security descriptor (the -Force parameter would
suppress the prompt).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts 
about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the modified security descriptor object. By default, this function does 
not generate any output. This parameter is useful when multiple security 
descriptor modifications need to be made in a single line (each call can be 
piped to the next one).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Specific</maml:name>
				<maml:description>
					<maml:para>Only remove an ACE if it exactly matches the ACE provided in -AceObject or 
through the ACE creation parameters. By default, the function will remove the 
specific access rights from an existing ACE that matches the principal and ACE 
type. For example, under the default behavior, if an ACE granting &apos;FullControl&apos;
exists for the &apos;Users&apos; principal, and the -AceObject passed to this function
has access of &apos;Write&apos;, then only the &apos;Write&apos; access will be removed from the
ACE that exists. If the -Specific switch is specified, though, the example
presented wouldn&apos;t make a change since the &apos;FullConrol&apos; ACE doesn&apos;t match the
&apos;Write&apos; access mask.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AceType</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OnlyApplyToThisContainer</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ObjectAceType</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>InheritedObjectAceType</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Causes the function to prompt for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Remove-AccessControlEntry</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>SDObject</maml:name>
				<maml:description>
					<maml:para>Specifies the security descriptor that will have an access control entry 
removed from it.

This parameter can be any combination of one or more of the following objects: 
1. A security descriptor object obtained through the Get-Acl cmdlet
2. A security descriptor object obtained through the Get-SecurityDescriptor or 
   New-AdaptedSecurityDescriptor functions
3. An object (including a path string) that the Get-SecurityDescriptor function 
   knows how to handle.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the security descriptor to be saved to the securable object. By default,
when a security descriptor object is provided as input to the SDObject 
parameter, the in memory security descriptor is changed, and a separate call to
Set-SecurityDescriptor saves the changes. Using the -Apply switch causes the 
change to be made without a separate call to Set-SecurityDescriptor.

If a non security descriptor object is provided as input  and the -PassThru 
switch is not specified, the default behavior is to set this switch and prompt 
the user before saving the security descriptor (the -Force parameter would
suppress the prompt).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts 
about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the modified security descriptor object. By default, this function does 
not generate any output. This parameter is useful when multiple security 
descriptor modifications need to be made in a single line (each call can be 
piped to the next one).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Specific</maml:name>
				<maml:description>
					<maml:para>Only remove an ACE if it exactly matches the ACE provided in -AceObject or 
through the ACE creation parameters. By default, the function will remove the 
specific access rights from an existing ACE that matches the principal and ACE 
type. For example, under the default behavior, if an ACE granting &apos;FullControl&apos;
exists for the &apos;Users&apos; principal, and the -AceObject passed to this function
has access of &apos;Write&apos;, then only the &apos;Write&apos; access will be removed from the
ACE that exists. If the -Specific switch is specified, though, the example
presented wouldn&apos;t make a change since the &apos;FullConrol&apos; ACE doesn&apos;t match the
&apos;Write&apos; access mask.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AceType</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ActiveDirectoryRights</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ActiveDirectoryRights</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OnlyApplyToThisContainer</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ObjectAceType</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>InheritedObjectAceType</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Causes the function to prompt for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Remove-AccessControlEntry</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>SDObject</maml:name>
				<maml:description>
					<maml:para>Specifies the security descriptor that will have an access control entry 
removed from it.

This parameter can be any combination of one or more of the following objects: 
1. A security descriptor object obtained through the Get-Acl cmdlet
2. A security descriptor object obtained through the Get-SecurityDescriptor or 
   New-AdaptedSecurityDescriptor functions
3. An object (including a path string) that the Get-SecurityDescriptor function 
   knows how to handle.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the security descriptor to be saved to the securable object. By default,
when a security descriptor object is provided as input to the SDObject 
parameter, the in memory security descriptor is changed, and a separate call to
Set-SecurityDescriptor saves the changes. Using the -Apply switch causes the 
change to be made without a separate call to Set-SecurityDescriptor.

If a non security descriptor object is provided as input  and the -PassThru 
switch is not specified, the default behavior is to set this switch and prompt 
the user before saving the security descriptor (the -Force parameter would
suppress the prompt).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts 
about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the modified security descriptor object. By default, this function does 
not generate any output. This parameter is useful when multiple security 
descriptor modifications need to be made in a single line (each call can be 
piped to the next one).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Specific</maml:name>
				<maml:description>
					<maml:para>Only remove an ACE if it exactly matches the ACE provided in -AceObject or 
through the ACE creation parameters. By default, the function will remove the 
specific access rights from an existing ACE that matches the principal and ACE 
type. For example, under the default behavior, if an ACE granting &apos;FullControl&apos;
exists for the &apos;Users&apos; principal, and the -AceObject passed to this function
has access of &apos;Write&apos;, then only the &apos;Write&apos; access will be removed from the
ACE that exists. If the -Specific switch is specified, though, the example
presented wouldn&apos;t make a change since the &apos;FullConrol&apos; ACE doesn&apos;t match the
&apos;Write&apos; access mask.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AceType</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>RegistryRights</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">RegistryRights</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OnlyApplyToThisContainer</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Causes the function to prompt for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Remove-AccessControlEntry</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>SDObject</maml:name>
				<maml:description>
					<maml:para>Specifies the security descriptor that will have an access control entry 
removed from it.

This parameter can be any combination of one or more of the following objects: 
1. A security descriptor object obtained through the Get-Acl cmdlet
2. A security descriptor object obtained through the Get-SecurityDescriptor or 
   New-AdaptedSecurityDescriptor functions
3. An object (including a path string) that the Get-SecurityDescriptor function 
   knows how to handle.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the security descriptor to be saved to the securable object. By default,
when a security descriptor object is provided as input to the SDObject 
parameter, the in memory security descriptor is changed, and a separate call to
Set-SecurityDescriptor saves the changes. Using the -Apply switch causes the 
change to be made without a separate call to Set-SecurityDescriptor.

If a non security descriptor object is provided as input  and the -PassThru 
switch is not specified, the default behavior is to set this switch and prompt 
the user before saving the security descriptor (the -Force parameter would
suppress the prompt).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts 
about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the modified security descriptor object. By default, this function does 
not generate any output. This parameter is useful when multiple security 
descriptor modifications need to be made in a single line (each call can be 
piped to the next one).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Specific</maml:name>
				<maml:description>
					<maml:para>Only remove an ACE if it exactly matches the ACE provided in -AceObject or 
through the ACE creation parameters. By default, the function will remove the 
specific access rights from an existing ACE that matches the principal and ACE 
type. For example, under the default behavior, if an ACE granting &apos;FullControl&apos;
exists for the &apos;Users&apos; principal, and the -AceObject passed to this function
has access of &apos;Write&apos;, then only the &apos;Write&apos; access will be removed from the
ACE that exists. If the -Specific switch is specified, though, the example
presented wouldn&apos;t make a change since the &apos;FullConrol&apos; ACE doesn&apos;t match the
&apos;Write&apos; access mask.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AceType</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>FolderRights</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">FileSystemRights</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OnlyApplyToThisContainer</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Causes the function to prompt for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Remove-AccessControlEntry</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>SDObject</maml:name>
				<maml:description>
					<maml:para>Specifies the security descriptor that will have an access control entry 
removed from it.

This parameter can be any combination of one or more of the following objects: 
1. A security descriptor object obtained through the Get-Acl cmdlet
2. A security descriptor object obtained through the Get-SecurityDescriptor or 
   New-AdaptedSecurityDescriptor functions
3. An object (including a path string) that the Get-SecurityDescriptor function 
   knows how to handle.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the security descriptor to be saved to the securable object. By default,
when a security descriptor object is provided as input to the SDObject 
parameter, the in memory security descriptor is changed, and a separate call to
Set-SecurityDescriptor saves the changes. Using the -Apply switch causes the 
change to be made without a separate call to Set-SecurityDescriptor.

If a non security descriptor object is provided as input  and the -PassThru 
switch is not specified, the default behavior is to set this switch and prompt 
the user before saving the security descriptor (the -Force parameter would
suppress the prompt).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts 
about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the modified security descriptor object. By default, this function does 
not generate any output. This parameter is useful when multiple security 
descriptor modifications need to be made in a single line (each call can be 
piped to the next one).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Specific</maml:name>
				<maml:description>
					<maml:para>Only remove an ACE if it exactly matches the ACE provided in -AceObject or 
through the ACE creation parameters. By default, the function will remove the 
specific access rights from an existing ACE that matches the principal and ACE 
type. For example, under the default behavior, if an ACE granting &apos;FullControl&apos;
exists for the &apos;Users&apos; principal, and the -AceObject passed to this function
has access of &apos;Write&apos;, then only the &apos;Write&apos; access will be removed from the
ACE that exists. If the -Specific switch is specified, though, the example
presented wouldn&apos;t make a change since the &apos;FullConrol&apos; ACE doesn&apos;t match the
&apos;Write&apos; access mask.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AceType</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>FileRights</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">FileSystemRights</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OnlyApplyToThisContainer</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Causes the function to prompt for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Remove-AccessControlEntry</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>SDObject</maml:name>
				<maml:description>
					<maml:para>Specifies the security descriptor that will have an access control entry 
removed from it.

This parameter can be any combination of one or more of the following objects: 
1. A security descriptor object obtained through the Get-Acl cmdlet
2. A security descriptor object obtained through the Get-SecurityDescriptor or 
   New-AdaptedSecurityDescriptor functions
3. An object (including a path string) that the Get-SecurityDescriptor function 
   knows how to handle.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the security descriptor to be saved to the securable object. By default,
when a security descriptor object is provided as input to the SDObject 
parameter, the in memory security descriptor is changed, and a separate call to
Set-SecurityDescriptor saves the changes. Using the -Apply switch causes the 
change to be made without a separate call to Set-SecurityDescriptor.

If a non security descriptor object is provided as input  and the -PassThru 
switch is not specified, the default behavior is to set this switch and prompt 
the user before saving the security descriptor (the -Force parameter would
suppress the prompt).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts 
about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the modified security descriptor object. By default, this function does 
not generate any output. This parameter is useful when multiple security 
descriptor modifications need to be made in a single line (each call can be 
piped to the next one).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Specific</maml:name>
				<maml:description>
					<maml:para>Only remove an ACE if it exactly matches the ACE provided in -AceObject or 
through the ACE creation parameters. By default, the function will remove the 
specific access rights from an existing ACE that matches the principal and ACE 
type. For example, under the default behavior, if an ACE granting &apos;FullControl&apos;
exists for the &apos;Users&apos; principal, and the -AceObject passed to this function
has access of &apos;Write&apos;, then only the &apos;Write&apos; access will be removed from the
ACE that exists. If the -Specific switch is specified, though, the example
presented wouldn&apos;t make a change since the &apos;FullConrol&apos; ACE doesn&apos;t match the
&apos;Write&apos; access mask.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AceType</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AccessMask</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OnlyApplyToThisContainer</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ObjectAceType</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>InheritedObjectAceType</maml:name>
				<maml:description>
					<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Causes the function to prompt for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>SDObject</maml:name>
			<maml:description>
				<maml:para>Specifies the security descriptor that will have an access control entry 
removed from it.

This parameter can be any combination of one or more of the following objects: 
1. A security descriptor object obtained through the Get-Acl cmdlet
2. A security descriptor object obtained through the Get-SecurityDescriptor or 
   New-AdaptedSecurityDescriptor functions
3. An object (including a path string) that the Get-SecurityDescriptor function 
   knows how to handle.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>AceObject</maml:name>
			<maml:description>
				<maml:para>This is one or more ACEs to be removed from the security descriptor. Each ACE 
will be removed from each security descriptor in the -SDObject parameter (which 
means more than one -AceObject and/or -SDObject can be provided).

The -AceObject objects can be created via the New-AccessControlEntry, they can 
come from the Access and/or Audit properties of a security descriptor, or they 
can come from Get-AccessControlEntry.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Object[]</command:parameterValue>
			<dev:type>
				<maml:name>Object[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Apply</maml:name>
			<maml:description>
				<maml:para>Causes the security descriptor to be saved to the securable object. By default,
when a security descriptor object is provided as input to the SDObject 
parameter, the in memory security descriptor is changed, and a separate call to
Set-SecurityDescriptor saves the changes. Using the -Apply switch causes the 
change to be made without a separate call to Set-SecurityDescriptor.

If a non security descriptor object is provided as input  and the -PassThru 
switch is not specified, the default behavior is to set this switch and prompt 
the user before saving the security descriptor (the -Force parameter would
suppress the prompt).</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts 
about saving the security descriptor.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Returns the modified security descriptor object. By default, this function does 
not generate any output. This parameter is useful when multiple security 
descriptor modifications need to be made in a single line (each call can be 
piped to the next one).</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Specific</maml:name>
			<maml:description>
				<maml:para>Only remove an ACE if it exactly matches the ACE provided in -AceObject or 
through the ACE creation parameters. By default, the function will remove the 
specific access rights from an existing ACE that matches the principal and ACE 
type. For example, under the default behavior, if an ACE granting &apos;FullControl&apos;
exists for the &apos;Users&apos; principal, and the -AceObject passed to this function
has access of &apos;Write&apos;, then only the &apos;Write&apos; access will be removed from the
ACE that exists. If the -Specific switch is specified, though, the example
presented wouldn&apos;t make a change since the &apos;FullConrol&apos; ACE doesn&apos;t match the
&apos;Write&apos; access mask.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Causes the function to prompt for confirmation before making any changes.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RemoveAllAccessEntries</maml:name>
			<maml:description>
				<maml:para>Remove all discretionary ACEs from the security descriptor.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RemoveAllAuditEntries</maml:name>
			<maml:description>
				<maml:para>Remove all system ACEs from the security descriptor.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PurgeAccessRules</maml:name>
			<maml:description>
				<maml:para>Removes every discretionary (Access) ACE that applies to the principal 
specified in the -Principal parameter.
</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PurgeAuditRules</maml:name>
			<maml:description>
				<maml:para>Removes every system (Audit) ACE that applies to the principal 
specified in the -Principal parameter.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Principal</maml:name>
			<maml:description>
				<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AceType</maml:name>
			<maml:description>
				<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AppliesTo</maml:name>
			<maml:description>
				<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">AppliesTo</command:parameterValue>
			<dev:type>
				<maml:name>AppliesTo</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>OnlyApplyToThisContainer</maml:name>
			<maml:description>
				<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WsManAccessRights</maml:name>
			<maml:description>
				<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">WsManAccessRights</command:parameterValue>
			<dev:type>
				<maml:name>WsManAccessRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ProcessAccessRights</maml:name>
			<maml:description>
				<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ProcessAccessRights</command:parameterValue>
			<dev:type>
				<maml:name>ProcessAccessRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ServiceAccessRights</maml:name>
			<maml:description>
				<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ServiceAccessRights</command:parameterValue>
			<dev:type>
				<maml:name>ServiceAccessRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WmiNameSpaceRights</maml:name>
			<maml:description>
				<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">WmiNamespaceRights</command:parameterValue>
			<dev:type>
				<maml:name>WmiNamespaceRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PrinterRights</maml:name>
			<maml:description>
				<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PrinterRights</command:parameterValue>
			<dev:type>
				<maml:name>PrinterRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LogicalShareRights</maml:name>
			<maml:description>
				<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">LogicalShareRights</command:parameterValue>
			<dev:type>
				<maml:name>LogicalShareRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ObjectAceType</maml:name>
			<maml:description>
				<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>InheritedObjectAceType</maml:name>
			<maml:description>
				<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ActiveDirectoryRights</maml:name>
			<maml:description>
				<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ActiveDirectoryRights</command:parameterValue>
			<dev:type>
				<maml:name>ActiveDirectoryRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RegistryRights</maml:name>
			<maml:description>
				<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">RegistryRights</command:parameterValue>
			<dev:type>
				<maml:name>RegistryRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FolderRights</maml:name>
			<maml:description>
				<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">FileSystemRights</command:parameterValue>
			<dev:type>
				<maml:name>FileSystemRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FileRights</maml:name>
			<maml:description>
				<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">FileSystemRights</command:parameterValue>
			<dev:type>
				<maml:name>FileSystemRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AccessMask</maml:name>
			<maml:description>
				<maml:para>This parameter is passed directly to the New-AccessControlEntry function. 
Please see the help for that function for more information.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
	</command:returnValue>
		</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------  Example 1  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; dir C:\folder -recurse | Get-SecurityDescriptor -Audit | Remove-AccessControlEntry -RemoveAllAccessEntries -RemoveAllAuditEntries -PassThru | Enable-AclInheritance -DiscretionaryAcl -SystemAcl -PassThru | Set-SecurityDescriptor</dev:code>
			<dev:remarks>
				<maml:para>This will reset the security descriptors for all files and folders under the C:\folder folder. All explicitly defined discretionary and system ACEs will be removed, and any entries that apply to child containers and objects from c:\folder are propagated.</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 2  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; $TargetFolder = &apos;C:\Folder1&apos; 

PS C:\&gt; $TargetFolder | Remove-AccessControlEntry -RemoveAllAccessEntries

PS C:\&gt; $TargetFolder | Get-AccessControlEntry -NotInherited | Remove-AccessControlEntry</dev:code>
			<dev:remarks>
				<maml:para>This will remove all explicitly defined discretionary ACEs from the &apos;C:\Folder1&apos; folder. The last two lines show two different ways to do this.</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 3  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; gwmi Win32_Share | Get-AccessControlEntry -LogicalShareRights FullControl -ErrorAction SilentlyContinue | Remove-AccessControlEntry -WhatIf</dev:code>
			<dev:remarks>
				<maml:para>NOTE: This probably wouldn&apos;t be a good command to run without the -WhatIf parameter, since it will remove any ACEs with share rights of &apos;Full Control&apos; (even though they could be added back). The example uses -WhatIf, so it should be safe.

This example will get all of the shares on the machine (it can be run against a remote machine if the -ComputerName parameter is passed to Get-WmiObject), and searches for any ACEs with the &apos;Full Control&apos; share rights. Any entries that are found are removed from the share(s).</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 4  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-Service b* | Remove-AccessControlEntry (New-AccessControlEntry -Principal Users -ServiceAccessRights Start, Stop) -WhatIf

Get-Service b* | Remove-AccessControlEntry -Principal Users -ServiceAccessRights Start, Stop -WhatIf</dev:code>
			<dev:remarks>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 5  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; $Demo = New-Item -Path &quot;$env:TEMP\pac_demo&quot; -ItemType directory
PS C:\&gt; $Demo | Add-AccessControlEntry -Principal Users -FolderRights Modify -Force
PS C:\&gt; $Demo | Remove-AccessControlEntry -Principal Users -FolderRights Write,Delete</dev:code>
			<dev:remarks>
				<maml:para>This example creates a new folder under the current user&apos;s temp directory. Then it adds an ACE that gives &apos;Users&apos; modify rights to the folder. Next, it removes the &apos;Write&apos; and &apos;Delete&apos; rights for the &apos;Users&apos; group, which will leave an ACE with &apos;ReadAndExecute&apos; rights.</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 6  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; $Demo = New-Item -Path &quot;$env:TEMP\pac_demo&quot; -ItemType directory
PS C:\&gt; $Demo | Add-AccessControlEntry -Principal Users -FolderRights Modify -Force
PS C:\&gt; $Demo | Remove-AccessControlEntry -Principal Users -FolderRights Write,Delete -Specific</dev:code>
			<dev:remarks>
				<maml:para>This is the same as the previous example, except the call to Remove-AccessControlEntry won&apos;t remove anything since there is no ACE that has only &apos;Write&apos; and &apos;Delete&apos; permissions. If the -FolderRights parameter were changed to &apos;Modify&apos;, then the ACE that was created by using Add-AccessControlEntry would be deleted.</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 7  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; $Demo = New-Item -Path &quot;$env:TEMP\pac_demo&quot; -ItemType directory
PS C:\&gt; $Demo | Add-AccessControlEntry -Principal Users -FolderRights Modify -Force
PS C:\&gt; $Demo | Remove-AccessControlEntry -PurgePrincipal Users</dev:code>
			<dev:remarks>
				<maml:para>This is similar to the previous to examples, except it uses the -PurgePrincipal parameter. Since &apos;Users&apos; was passed to it, it will remove any ACE that applies to &apos;Users&apos; (Allow or Deny) from the discretionary ACL. The -PurgeAuditRules switch could have also been used.</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>about_PowerShellAccessControl_Module</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-SecurityDescriptor</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-SecurityDescriptor</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-AccessControlEntry</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-AccessControlEntry</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Acl</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Repair-AclCanonicalOrder</command:name>
		<maml:description>
			<maml:para>Repairs a discretionary ACL&apos;s ACE order.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Repair</command:verb>
		<command:noun>AclCanonicalOrder</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Repair-AclCanonicalOrder function repairs a DACL whose ACEs are not in canonical ordering. The example sections shows an example of how ACE entries can lose canonical ordering.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Repair-AclCanonicalOrder</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para>This can be either a security descriptor object obtained from Get-SecurityDescriptor, or an object that owns the security descriptor whose DACL is to be reordered. If it is an object that owns the security descriptor, Get-SecurityDescriptor will be called against it internally.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DiscretionaryAcl</maml:name>
				<maml:description>
					<maml:para>Causes the DACL to be re-ordered for the specified object/security descriptor. This switch can be used at the same time as the -SystemAcl switch.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SystemAcl</maml:name>
				<maml:description>
					<maml:para>Causes the SACL to be re-ordered for the specified object/security descriptor. This switch can be used at the same time as the -DiscretionaryAcl switch.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the security descriptor to be saved. By default, when a security descriptor object is provided as input to the InputObject parameter, the in memory security descriptor is changed, and a separate call to Set-SecurityDescriptor saves the changes. Using the -Apply switch causes the change to be made without a separate call to Set-SecurityDescriptor.

If a non security descriptor object is provided as input, and the -PassThru switch is not specified, the default behavior is to set this switch and prompt the user before saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the newly modified security descriptor object. By default, this function does not generate any output.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Repair-AclCanonicalOrder</maml:name>
			<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue, ByPropertyName)" position="0">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to a resource whose DACL is to be changed.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DiscretionaryAcl</maml:name>
				<maml:description>
					<maml:para>Causes the DACL to be re-ordered for the specified object/security descriptor. This switch can be used at the same time as the -SystemAcl switch.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SystemAcl</maml:name>
				<maml:description>
					<maml:para>Causes the SACL to be re-ordered for the specified object/security descriptor. This switch can be used at the same time as the -DiscretionaryAcl switch.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the security descriptor to be saved. By default, when a security descriptor object is provided as input to the InputObject parameter, the in memory security descriptor is changed, and a separate call to Set-SecurityDescriptor saves the changes. Using the -Apply switch causes the change to be made without a separate call to Set-SecurityDescriptor.

If a non security descriptor object is provided as input, and the -PassThru switch is not specified, the default behavior is to set this switch and prompt the user before saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the newly modified security descriptor object. By default, this function does not generate any output.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Repair-AclCanonicalOrder</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>LiteralPath</maml:name>
				<maml:description>
					<maml:para>Specifies the path to a resource whose DACL is to be changed.

Unlike Path, the value of the LiteralPath parameter is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DiscretionaryAcl</maml:name>
				<maml:description>
					<maml:para>Causes the DACL to be re-ordered for the specified object/security descriptor. This switch can be used at the same time as the -SystemAcl switch.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SystemAcl</maml:name>
				<maml:description>
					<maml:para>Causes the SACL to be re-ordered for the specified object/security descriptor. This switch can be used at the same time as the -DiscretionaryAcl switch.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the security descriptor to be saved. By default, when a security descriptor object is provided as input to the InputObject parameter, the in memory security descriptor is changed, and a separate call to Set-SecurityDescriptor saves the changes. Using the -Apply switch causes the change to be made without a separate call to Set-SecurityDescriptor.

If a non security descriptor object is provided as input, and the -PassThru switch is not specified, the default behavior is to set this switch and prompt the user before saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the newly modified security descriptor object. By default, this function does not generate any output.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>InputObject</maml:name>
			<maml:description>
				<maml:para>This can be either a security descriptor object obtained from Get-SecurityDescriptor, or an object that owns the security descriptor whose DACL is to be reordered. If it is an object that owns the security descriptor, Get-SecurityDescriptor will be called against it internally.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DiscretionaryAcl</maml:name>
			<maml:description>
				<maml:para>Causes the DACL to be re-ordered for the specified object/security descriptor. This switch can be used at the same time as the -SystemAcl switch.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SystemAcl</maml:name>
			<maml:description>
				<maml:para>Causes the SACL to be re-ordered for the specified object/security descriptor. This switch can be used at the same time as the -DiscretionaryAcl switch.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Apply</maml:name>
			<maml:description>
				<maml:para>Causes the security descriptor to be saved. By default, when a security descriptor object is provided as input to the InputObject parameter, the in memory security descriptor is changed, and a separate call to Set-SecurityDescriptor saves the changes. Using the -Apply switch causes the change to be made without a separate call to Set-SecurityDescriptor.

If a non security descriptor object is provided as input, and the -PassThru switch is not specified, the default behavior is to set this switch and prompt the user before saving the security descriptor.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Returns the newly modified security descriptor object. By default, this function does not generate any output.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts about saving the security descriptor.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Prompts you for confirmation before making any changes.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="true (ByValue, ByPropertyName)" position="0">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Specifies the path to a resource whose DACL is to be changed.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>LiteralPath</maml:name>
			<maml:description>
				<maml:para>Specifies the path to a resource whose DACL is to be changed.

Unlike Path, the value of the LiteralPath parameter is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
	</command:returnValue>
		</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------  Example 1  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; # Create folders:
PS C:\&gt; $DemoParent = New-Item -Path &quot;$env:temp\break_canonical_order&quot; -ItemType directory
PS C:\&gt; $DemoChild = New-Item -Path &quot;$DemoParent\child_folder&quot; -ItemType directory

# Set permissions to break canonical ordering:
PS C:\&gt; $DemoParent | Add-AccessControlEntry -Principal Guests -FolderRights FullControl -AceType AccessDenied -Force
PS C:\&gt; $DemoChild | Add-AccessControlEntry -Principal Users -FolderRights Read -PassThru | Disable-AclInheritance -PreserveExistingAces -Apply -Force

# Confirm DACL is not in canonical order:
PS C:\&gt; $DemoChild | Get-SecurityDescriptor | fl AccessToString, AreAccessRulesCanonical

# Fix it and confirm:
PS C:\&gt; $DemoChild | Repair-AclCanonicalOrder
PS C:\&gt; $DemoChild | Get-SecurityDescriptor | fl AccessToString, AreAccessRulesCanonical</dev:code>
			<dev:remarks>
				<maml:para>This example will set up a folder whose DACL is not in canonical order, and then it will fix it.</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Set-Owner</command:name>
		<maml:description>
			<maml:para>Changes the owner of a securable object.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>Owner</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>Set-Owner allows the changing of a securable object&apos;s owner. An administrator can take ownership or assign ownership to another user or group (as long as they have the proper privileges). A regular user can take ownership of an object in certain circumstances (specifically if they have the WRITE_DAC access right assigned, which should be contained in a FullControl ACE).</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-Owner</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>The new owner of the object. This can be a string representing a user, group, or SID. It can also be a [System.Security.Principal.NTAccount] or a [System.Security.Principal.SecurityIdentifier] object.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to a resource whose owner should be changed. Wildcards are 
permitted (unless the -ObjectType parameter is also used).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the modified owner information to be saved. By default, when a security descriptor object is provided as input to the SDObject parameter, the in memory security descriptor is changed, and a separate call to Set-SecurityDescriptor saves the changes. Using the -Apply switch causes the change to be made without a separate call to Set-SecurityDescriptor. It will also only attempt to set the owner (any DACL and/or SACL changes will be ignored).

If a non security descriptor object is provided as input, and the -PassThru switch is not specified, the default behavior is to set this switch and prompt the user before saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts about saving the owner.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the newly modified security descriptor object. By default, this function does not generate any output.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-Owner</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>The new owner of the object. This can be a string representing a user, group, or SID. It can also be a [System.Security.Principal.NTAccount] or a [System.Security.Principal.SecurityIdentifier] object.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the modified owner information to be saved. By default, when a security descriptor object is provided as input to the SDObject parameter, the in memory security descriptor is changed, and a separate call to Set-SecurityDescriptor saves the changes. Using the -Apply switch causes the change to be made without a separate call to Set-SecurityDescriptor. It will also only attempt to set the owner (any DACL and/or SACL changes will be ignored).

If a non security descriptor object is provided as input, and the -PassThru switch is not specified, the default behavior is to set this switch and prompt the user before saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts about saving the owner.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the newly modified security descriptor object. By default, this function does not generate any output.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-Owner</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>The new owner of the object. This can be a string representing a user, group, or SID. It can also be a [System.Security.Principal.NTAccount] or a [System.Security.Principal.SecurityIdentifier] object.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to a resource whose owner should be changed. Wildcards are 
permitted (unless the -ObjectType parameter is also used).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ObjectType</maml:name>
				<maml:description>
					<maml:para>When a security descriptor object isn&apos;t specified to Set-Owner, the function will call Get-SecurityDescriptor, which will attempt to determine the object type of the object specified in the Path, LiteralPath, or SDObject. Using this parameter allows you to specify a specific object type. Non-filesystem paths must be in a format that PowerShell doesn&apos;t natively understand. See the following link for path formatting information: http://msdn.microsoft.com/en-us/library/windows/desktop/aa379593(v=vs.85).aspx</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ResourceType</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>IsContainer</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the modified owner information to be saved. By default, when a security descriptor object is provided as input to the SDObject parameter, the in memory security descriptor is changed, and a separate call to Set-SecurityDescriptor saves the changes. Using the -Apply switch causes the change to be made without a separate call to Set-SecurityDescriptor. It will also only attempt to set the owner (any DACL and/or SACL changes will be ignored).

If a non security descriptor object is provided as input, and the -PassThru switch is not specified, the default behavior is to set this switch and prompt the user before saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts about saving the owner.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the newly modified security descriptor object. By default, this function does not generate any output.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-Owner</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>Principal</maml:name>
				<maml:description>
					<maml:para>The new owner of the object. This can be a string representing a user, group, or SID. It can also be a [System.Security.Principal.NTAccount] or a [System.Security.Principal.SecurityIdentifier] object.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>LiteralPath</maml:name>
				<maml:description>
					<maml:para>Specifies the path to a resource whose owner should be changed.

Unlike Path, the value of the LiteralPath parameter is used exactly as it is 
typed. No characters are interpreted as wildcards. If the path includes escape
characters, enclose it in single quotation marks. Single quotation marks tell 
Windows PowerShell not to interpret any characters as escape sequences.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Apply</maml:name>
				<maml:description>
					<maml:para>Causes the modified owner information to be saved. By default, when a security descriptor object is provided as input to the SDObject parameter, the in memory security descriptor is changed, and a separate call to Set-SecurityDescriptor saves the changes. Using the -Apply switch causes the change to be made without a separate call to Set-SecurityDescriptor. It will also only attempt to set the owner (any DACL and/or SACL changes will be ignored).

If a non security descriptor object is provided as input, and the -PassThru switch is not specified, the default behavior is to set this switch and prompt the user before saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts about saving the owner.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Returns the newly modified security descriptor object. By default, this function does not generate any output.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
			<maml:name>Principal</maml:name>
			<maml:description>
				<maml:para>The new owner of the object. This can be a string representing a user, group, or SID. It can also be a [System.Security.Principal.NTAccount] or a [System.Security.Principal.SecurityIdentifier] object.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Specifies the path to a resource whose owner should be changed. Wildcards are 
permitted (unless the -ObjectType parameter is also used).</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Apply</maml:name>
			<maml:description>
				<maml:para>Causes the modified owner information to be saved. By default, when a security descriptor object is provided as input to the SDObject parameter, the in memory security descriptor is changed, and a separate call to Set-SecurityDescriptor saves the changes. Using the -Apply switch causes the change to be made without a separate call to Set-SecurityDescriptor. It will also only attempt to set the owner (any DACL and/or SACL changes will be ignored).

If a non security descriptor object is provided as input, and the -PassThru switch is not specified, the default behavior is to set this switch and prompt the user before saving the security descriptor.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts about saving the owner.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Returns the newly modified security descriptor object. By default, this function does not generate any output.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Prompts you for confirmation before making any changes.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>InputObject</maml:name>
			<maml:description>
				<maml:para></maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ObjectType</maml:name>
			<maml:description>
				<maml:para>When a security descriptor object isn&apos;t specified to Set-Owner, the function will call Get-SecurityDescriptor, which will attempt to determine the object type of the object specified in the Path, LiteralPath, or SDObject. Using this parameter allows you to specify a specific object type. Non-filesystem paths must be in a format that PowerShell doesn&apos;t natively understand. See the following link for path formatting information: http://msdn.microsoft.com/en-us/library/windows/desktop/aa379593(v=vs.85).aspx</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ResourceType</command:parameterValue>
			<dev:type>
				<maml:name>ResourceType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>IsContainer</maml:name>
			<maml:description>
				<maml:para></maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>LiteralPath</maml:name>
			<maml:description>
				<maml:para>Specifies the path to a resource whose owner should be changed.

Unlike Path, the value of the LiteralPath parameter is used exactly as it is 
typed. No characters are interpreted as wildcards. If the path includes escape
characters, enclose it in single quotation marks. Single quotation marks tell 
Windows PowerShell not to interpret any characters as escape sequences.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
	</command:returnValue>
		</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------  Example 1  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Set-Owner -Path c:\folder -Principal $env:username</dev:code>
			<dev:remarks>
				<maml:para>This is an example of taking ownership of a folder. If an administrator were to run this command, it should always succeed (assuming the administrator can see the folder). If a regular user were to run the command, they would need FullControl rights over the folder.

Since the function has been given a path, it will attempt to save the new owner immediately. Set-SecurityDescriptor will be called internally, and the user will be prompted about the change.</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 2  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; dir C:\folder -Recurse | Set-Owner -Principal testuser -WhatIf</dev:code>
			<dev:remarks>
				<maml:para>This command will list all files and folders in the C:\folder folder, and attempt to assign the &apos;testuser&apos; as the owner of all of the objects (or it would if the -WhatIf switch weren&apos;t supplied)</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 3  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Set-Owner -Path \\RemoteMachine\MACHINE\Software\Adobe -ObjectType RegistryWow6432Key -Principal testuser</dev:code>
			<dev:remarks>
				<maml:para>This set</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Get-SecurityDescriptor</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-SecurityDescriptor</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Object Types</maml:linkText>
			<maml:uri>http://msdn.microsoft.com/en-us/library/windows/desktop/aa379593(v=vs.85).aspx</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Set-SecurityDescriptor</command:name>
		<maml:description>
			<maml:para>Changes the security descriptor of a specified object.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>SecurityDescriptor</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
	<!--This is the Description section-->
		<maml:para>The Set-SecurityDescriptor function changes the security descriptor of a specified object. For a list of objects that can be used, please see the help for &apos;Get-SecurityDescriptor&apos;

To use the function, use the -SDObject parameter to identify the object whose security descriptor will be changed, along with the new security descriptor. The -Sections parameter can optionally be used to control exactly which sections from the descriptor contained in SDObject to apply.

Alternatively, the Path, LiteralPath, or InputObject parameters may be used to identify the object whose security descriptor will be changed (the security descriptor that will be applied will still come from the -SDObject parameter).</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-SecurityDescriptor</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>SDObject</maml:name>
				<maml:description>
					<maml:para>Specifies a security descriptor object with the desired sections. Set-SecurityDescriptor changes the security descriptor of the object specified by the Path, LiteralPath, or InputObject parameter to match the sections in this security descriptor object.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Sections</maml:name>
				<maml:description>
					<maml:para>Specifies the security descriptor sections that should be written.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AccessControlSections</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-SecurityDescriptor</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>SDObject</maml:name>
				<maml:description>
					<maml:para>Specifies a security descriptor object with the desired sections. Set-SecurityDescriptor changes the security descriptor of the object specified by the Path, LiteralPath, or InputObject parameter to match the sections in this security descriptor object.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para>The object whose security descriptor should be changed.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Sections</maml:name>
				<maml:description>
					<maml:para>Specifies the security descriptor sections that should be written.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AccessControlSections</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-SecurityDescriptor</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>SDObject</maml:name>
				<maml:description>
					<maml:para>Specifies a security descriptor object with the desired sections. Set-SecurityDescriptor changes the security descriptor of the object specified by the Path, LiteralPath, or InputObject parameter to match the sections in this security descriptor object.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="false" position="named">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specifies the path to an object whose security descriptor should be changed. Wildcards are permitted.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Sections</maml:name>
				<maml:description>
					<maml:para>Specifies the security descriptor sections that should be written.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AccessControlSections</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-SecurityDescriptor</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>SDObject</maml:name>
				<maml:description>
					<maml:para>Specifies a security descriptor object with the desired sections. Set-SecurityDescriptor changes the security descriptor of the object specified by the Path, LiteralPath, or InputObject parameter to match the sections in this security descriptor object.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>LiteralPath</maml:name>
				<maml:description>
					<maml:para>Changes the security descriptor of the specified object. Unlike Path, the value of the LiteralPath parameter is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts about saving the security descriptor.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Sections</maml:name>
				<maml:description>
					<maml:para>Specifies the security descriptor sections that should be written.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">AccessControlSections</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para>Prompts you for confirmation before making any changes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>SDObject</maml:name>
			<maml:description>
				<maml:para>Specifies a security descriptor object with the desired sections. Set-SecurityDescriptor changes the security descriptor of the object specified by the Path, LiteralPath, or InputObject parameter to match the sections in this security descriptor object.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para>When the -Apply switch is used, this switch parameter suppresses any prompts about saving the security descriptor.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Sections</maml:name>
			<maml:description>
				<maml:para>Specifies the security descriptor sections that should be written.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">AccessControlSections</command:parameterValue>
			<dev:type>
				<maml:name>AccessControlSections</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Access, Audit</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>Shows what would happen if the function were to make changes. No changes are made.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para>Prompts you for confirmation before making any changes.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>InputObject</maml:name>
			<maml:description>
				<maml:para>The object whose security descriptor should be changed.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Specifies the path to an object whose security descriptor should be changed. Wildcards are permitted.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>LiteralPath</maml:name>
			<maml:description>
				<maml:para>Changes the security descriptor of the specified object. Unlike Path, the value of the LiteralPath parameter is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</dev:type>
			<maml:description></maml:description>
	</command:returnValue>
		</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------  Example 1  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-SecurityDescriptor C:\file1.txt | Set-SecurityDescriptor -Path C:\subfolder\file2.txt</dev:code>
			<dev:remarks>
				<maml:para>This will take the security descriptor from file1.txt and apply it to file2.txt. 

Note that if ACL inheritance is enabled on file1.txt, the final security descriptor might not match on the two files due to inherited permissions coming from each of the parent folders.</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 2  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-SecurityDescriptor C:\file1.txt | Set-SecurityDescriptor -Path C:\subfolder\file2.txt, C:\subfolder\file3.txt</dev:code>
			<dev:remarks>
				<maml:para>This does the same thing as example #1 except that the security descriptor is copied onto two files instead of just one. You can pass an array of paths or InputObjects go apply the security descriptor to multiple objects at the same time.</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 3  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-SecurityDescriptor C:\file1.txt | Disable-AclInheritance -PreserveExistingAces -Apply
PS C:\&gt; Get-SecurityDescriptor C:\file1.txt | Set-SecurityDescriptor -Path C:\subfolder\file2.txt,C:\subfolder\file3.txt</dev:code>
			<dev:remarks>
				<maml:para>This is similar to example #1, except that file1.txt has inheritance turned off for the discretionary ACL first. When the security descriptor is applied to file2.txt (and file3.txt in this example), the SD is truly copied this time since there is no inheritance involved.</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 4  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-SecurityDescriptor C:\file1.txt -Audit | Set-SecurityDescriptor -Path C:\subfolder\file2.txt -Sections Audit</dev:code>
			<dev:remarks>
				<maml:para>This command gets the security descriptor for the file1.txt file (including the system ACL, which controls auditing), and saves only the system ACL to the file2.txt file. Using the -Sections parameter causes any sections not provided to be ignored by the Set-SecurityDescriptor function. The owner, group, and/or DACL could have been modified on the security descriptor that is being supplied to the function, but only the SACL will be saved to the file2.txt file.</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------  Example 5  --------------</maml:title>
			<maml:introduction>
				<maml:para></maml:para>
			</maml:introduction>
			<dev:code>PS C:\&gt; Get-Service bits | Get-SecurityDescriptor | Add-AccessControlEntry -Principal Users -ServiceAccessRights Start -PassThru | Set-SecurityDescriptor -WhatIf</dev:code>
			<dev:remarks>
				<maml:para>This long one-liner does the following:
1. Get a service object for the BITS service
2. Get the security descriptor for the BITS service
3. Add a discretionary (access) ACE that allows Users to start the service
4. Call Set-SecurityDescriptor with the -WhatIf parameter to show what would happen if the security descriptor were saved.

NOTE: This command can be shortened. See the help for Add-AccessControlEntry to see how to shorten the command.</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>about_PowerShellAccessControl_Module</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-SecurityDescriptor</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-AccessControlEntry</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-AccessControlEntry</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Enable-AclInheritance</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Disable-AclInheritance</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-Owner</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Unknown</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Acl</maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
</helpItems>