<Configuration>
    <Controls>
        <Control>
            <Name>EffectiveAccess-GroupingFormat</Name>
            <CustomControl>
                <CustomEntries>
                    <CustomEntry>
                        <CustomItem>
                            <Frame>
                                <LeftIndent>4</LeftIndent>
                                <CustomItem>
                                    <ExpressionBinding>
                                        <ScriptBlock>
                                            "Principal: {0}`nObject:    {1}" -f $_.IdentityReference, $_.DisplayName
                                        </ScriptBlock>
                                    </ExpressionBinding>
                                    <Newline/>
                                </CustomItem>
                            </Frame>
                        </CustomItem>
                    </CustomEntry>
                </CustomEntries>
            </CustomControl>
        </Control>
        <Control>
            <Name>ACE-GroupingFormat</Name>
            <CustomControl>
                <CustomEntries>
                    <CustomEntry>
                        <CustomItem>
                            <Frame>
                                <LeftIndent>4</LeftIndent>
                                <CustomItem>
                                    <ExpressionBinding>
                                        <ScriptBlock>
                                            "DisplayName: $($_.DisplayName)`n$($_.InheritanceString)"
<!--
                                            $Path = $_.Path

                                            # For now, just massage FileSystem and Registry paths (get rid of leading provider info)
                                            $Path = $Path -replace "^.*(Registry|FileSystem)::", ""

                                            if ($Path -eq $null) {
                                                $Path = "[NO PATH]"
                                            }
                                            
                                            "Path: $Path"
-->
                                        </ScriptBlock>
                                    </ExpressionBinding>
                                    <Newline/>
                                </CustomItem> 
                            </Frame>
                        </CustomItem>
                    </CustomEntry>
                </CustomEntries>
            </CustomControl>
        </Control>
    </Controls>
    <ViewDefinitions>
        <View>
            <Name>PowerShellAccessControl.Types.AdaptedSecurityDescriptor</Name>
            <ViewSelectedBy>
                <TypeName>PowerShellAccessControl.Types.AdaptedSecurityDescriptor</TypeName>
            </ViewSelectedBy>

            <TableControl>
                <TableHeaders>
                    <TableColumnHeader />
                    <TableColumnHeader>
                        <Label>Access</Label>
                    </TableColumnHeader>
                 </TableHeaders>
                <TableRowEntries>
                    <TableRowEntry>
                        <Wrap/>
                        <TableColumnItems>
                            <TableColumnItem>
                                <PropertyName>DisplayName</PropertyName>
                            </TableColumnItem>
                            <TableColumnItem>
                                <PropertyName>AccessToString</PropertyName>
                            </TableColumnItem>
                        </TableColumnItems>
                    </TableRowEntry>
                 </TableRowEntries>
            </TableControl>
        </View>
        <View>
            <Name>PowerShellAccessControl.Types.AdaptedSecurityDescriptor</Name>
            <ViewSelectedBy>
                <TypeName>PowerShellAccessControl.Types.AdaptedSecurityDescriptor</TypeName>
            </ViewSelectedBy>
            <ListControl>
                <ListEntries>
                    <ListEntry>
                        <ListItems>
                            <ListItem>
                                <PropertyName>DisplayName</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>Path</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>ObjectType</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>Owner</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>Group</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>AreAccessRulesProtected</PropertyName>
                            </ListItem>
                            <ListItem>
                                <Label>Access</Label>
                                <PropertyName>AccessToString</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>AreAuditRulesProtected</PropertyName>
                            </ListItem>
                            <ListItem>
                                <Label>Audit</Label>
                                <PropertyName>AuditToString</PropertyName>
                            </ListItem>
                            <ListItem>
                                <Label>Sddl</Label>
                                <ScriptBlock>
                                    $MaxLength = 500

                                    if ($_.Sddl.Length -gt $MaxLength) {
                                        "{0}..." -f $_.Sddl.SubString(0,$MaxLength)
                                    }
                                    else {
                                        $_.Sddl
                                    }
                                </ScriptBlock>
                            </ListItem>
                        </ListItems>
                    </ListEntry>
                </ListEntries>
            </ListControl>
        </View>
        <View>
            <Name>PowerShellAccessControl.Types.AdaptedAce</Name>
            <ViewSelectedBy>
                <TypeName>PowerShellAccessControl.Types.AdaptedAce</TypeName>
            </ViewSelectedBy>

            <GroupBy><!--Seems to only show it when the Path property exists; as long as this is normal, then it will allow us to use the same ViewDefinitions for ACEs on an object, and ACEs that have the Path added from Get-AccessControlEntry -->
                <PropertyName>DisplayName</PropertyName>
                <CustomControlName>ACE-GroupingFormat</CustomControlName>  
            </GroupBy>

            <TableControl>
                <TableHeaders>
                    <TableColumnHeader>
                        <Label>AceType</Label>
                    </TableColumnHeader>
                    <TableColumnHeader>
                        <Label>Principal</Label>
                    </TableColumnHeader>
                    <TableColumnHeader>
                        <Label>AccessMask</Label>
                    </TableColumnHeader>
                    <TableColumnHeader>
                        <Label>InheritedFrom</Label>
                    </TableColumnHeader>
                    <TableColumnHeader>
                        <Label>AppliesTo</Label>
                    </TableColumnHeader>
                    <TableColumnHeader>
                        <Label>OnlyAppliesHere</Label>
                    </TableColumnHeader>
                 </TableHeaders>
                <TableRowEntries>
                    <TableRowEntry>
                        <Wrap/>
                        <TableColumnItems>
                            <TableColumnItem>
                                <ScriptBlock>
                                    if ($_.AuditFlags.value__) {
                                        "{0} ({1})" -f $_.AceType, $_.AuditFlags
                                    }
                                    else {
                                        $_.AceType
                                    }
                                </ScriptBlock>
                            </TableColumnItem>
                            <TableColumnItem>
                                <ScriptBlock>$_.Principal -replace "(BUILTIN|NT AUTHORITY)\\", ""</ScriptBlock>
                            </TableColumnItem>
                            <TableColumnItem>
                                <PropertyName>AccessMaskDisplay</PropertyName>
                            </TableColumnItem>
                            <TableColumnItem>
                                <ScriptBlock>
                                    $MaxLength = 150
                                    if ($_.InheritedFrom.Length -gt $MaxLength) {
                                        "{0}..." -f $_.InheritedFrom.Substring(0, $MaxLength)
                                    }
                                    else {
                                        $_.InheritedFrom
                                    }
                                </ScriptBlock>
                            </TableColumnItem>
                            <TableColumnItem>
                                <ScriptBlock>
                                if ($_.AppliesTo -is [enum]) {
                                    $Flags = $_.AppliesTo
                                    $AppliesToShort = "{0,2} {1,2} {2,2}" -f "$(if ([PowerShellAccessControl.AppliesTo]::Object -band $Flags) { 'O' })", 
                                                           "$(if ([PowerShellAccessControl.AppliesTo]::ChildContainers -band $Flags) { 'CC' })",
                                                           "$(if ([PowerShellAccessControl.AppliesTo]::ChildObjects -band $Flags) { 'CO' })"

                                    if ($_.InheritedObjectAceTypeDisplayName) {
                                        $AppliesToShort += " ({0})" -f $_.InheritedObjectAceTypeDisplayName
                                    }

                                    $AppliesToShort
                                }
                                else {
                                    $_.AppliesTo
                                }
                                </ScriptBlock>
                            </TableColumnItem>
                            <TableColumnItem>
                                <PropertyName>OnlyApplyToThisContainer</PropertyName>
                            </TableColumnItem>
                        </TableColumnItems>
                    </TableRowEntry>
                 </TableRowEntries>
            </TableControl>
        </View>
        <View>
            <Name>PowerShellAccessControl.Types.AdaptedAce</Name>
            <ViewSelectedBy>
                <TypeName>PowerShellAccessControl.Types.AdaptedAce</TypeName>
            </ViewSelectedBy>

            <GroupBy><!--Seems to only show it when the Path property exists; as long as this is normal, then it will allow us to use the same ViewDefinitions for ACEs on an object, and ACEs that have the Path added from Get-AccessControlEntry -->
                <PropertyName>DisplayName</PropertyName>
                <CustomControlName>ACE-GroupingFormat</CustomControlName>  
            </GroupBy>

            <ListControl>
                <ListEntries>
                    <ListEntry>
                        <ListItems>
                            <ListItem>
                                <Label>AceType</Label>
                                <ScriptBlock>
                                    if ($_.AuditFlags.value__) {
                                        "{0} ({1})" -f $_.AceType, $_.AuditFlags
                                    }
                                    else {
                                        $_.AceType
                                    }
                                </ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <PropertyName>Principal</PropertyName>
                            </ListItem>
                            <ListItem>
                                <Label>AccessMask</Label>
                                <PropertyName>AccessMaskDisplay</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>InheritedFrom</PropertyName>
                            </ListItem>
                            <ListItem>
                                <Label>AppliesTo</Label>
                                <ScriptBlock>
                                    if ($_.InheritedObjectAceTypeDisplayName) {
                                        "{0} ({1})" -f $_.AppliesTo, $_.InheritedObjectAceTypeDisplayName
                                    }
                                    else {
                                        $_.AppliesTo
                                    }
                                </ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>OnlyAppliesHere</Label>
                                <PropertyName>OnlyApplyToThisContainer</PropertyName>
                            </ListItem>
                        </ListItems>
                    </ListEntry>
                </ListEntries>
            </ListControl>
        </View>
        <View>
            <Name>PowerShellAccessControl.Types.EffectiveAccess</Name>
            <ViewSelectedBy>
                <TypeName>PowerShellAccessControl.Types.EffectiveAccess</TypeName>
            </ViewSelectedBy>

            <TableControl>
                <TableHeaders>
                    <TableColumnHeader>
                    </TableColumnHeader>
                    <TableColumnHeader>
                    </TableColumnHeader>
                    <TableColumnHeader>
                    </TableColumnHeader>
                 </TableHeaders>
                <TableRowEntries>
                    <TableRowEntry>
                        <TableColumnItems>
                            <TableColumnItem>
                                <PropertyName>IdentityReference</PropertyName>
                            </TableColumnItem>
                            <TableColumnItem>
                                <PropertyName>DisplayName</PropertyName>
                            </TableColumnItem>
                            <TableColumnItem>
                                <PropertyName>EffectiveAccess</PropertyName>
                            </TableColumnItem>
                        </TableColumnItems>
                    </TableRowEntry>
                 </TableRowEntries>
            </TableControl>
        </View>
        <View>
            <Name>PowerShellAccessControl.Types.EffectiveAccess</Name>
            <ViewSelectedBy>
                <TypeName>PowerShellAccessControl.Types.EffectiveAccess</TypeName>
            </ViewSelectedBy>

            <ListControl>
                <ListEntries>
                    <ListEntry>
                        <ListItems>
                            <ListItem>
                                <PropertyName>IdentityReference</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>DisplayName</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>EffectiveAccess</PropertyName>
                            </ListItem>
                        </ListItems>
                    </ListEntry>
                </ListEntries>
            </ListControl>
        </View>
        <View>
            <Name>PowerShellAccessControl.Types.EffectiveAccessListAllPermissions</Name>
            <ViewSelectedBy>
                <TypeName>PowerShellAccessControl.Types.EffectiveAccessListAllPermissions</TypeName>
            </ViewSelectedBy>

            <GroupBy>
                <ScriptBlock>"{0}{1}" -f $_.DisplayName, $_.IdentityReference</ScriptBlock>
                <CustomControlName>EffectiveAccess-GroupingFormat</CustomControlName>  
            </GroupBy>

            <TableControl>
                <TableHeaders>
                    <TableColumnHeader>
                        <Width>12</Width>
                    </TableColumnHeader>
                    <TableColumnHeader>
                    </TableColumnHeader>
                    <TableColumnHeader>
                    </TableColumnHeader>
                 </TableHeaders>
                <TableRowEntries>
                    <TableRowEntry>
                        <TableColumnItems>
                            <TableColumnItem>
                                <PropertyName>Allowed</PropertyName>
                            </TableColumnItem>
                            <TableColumnItem>
                                <PropertyName>Permission</PropertyName>
                            </TableColumnItem>
                            <TableColumnItem>
                                <PropertyName>LimitedBy</PropertyName>
                            </TableColumnItem>
                        </TableColumnItems>
                    </TableRowEntry>
                 </TableRowEntries>
            </TableControl>
        </View>
        <View>
            <Name>PowerShellAccessControl.Types.EffectiveAccessListAllPermissions</Name>
            <ViewSelectedBy>
                <TypeName>PowerShellAccessControl.Types.EffectiveAccessListAllPermissions</TypeName>
            </ViewSelectedBy>

            <GroupBy>
                <ScriptBlock>"{0}{1}" -f $_.DisplayName, $_.IdentityReference</ScriptBlock>
                <CustomControlName>EffectiveAccess-GroupingFormat</CustomControlName>  
            </GroupBy>

            <ListControl>
                <ListEntries>
                    <ListEntry>
                        <ListItems>
                            <ListItem>
                                <PropertyName>Permission</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>Allowed</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>LimitedBy</PropertyName>
                            </ListItem>
                        </ListItems>
                    </ListEntry>
                </ListEntries>
            </ListControl>
        </View>
    </ViewDefinitions>
</Configuration>
